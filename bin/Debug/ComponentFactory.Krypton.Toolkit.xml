<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ComponentFactory.Krypton.Toolkit</name>
    </assembly>
    <members>
        <member name="T:ComponentFactory.Krypton.Toolkit.AccurateText">
            <summary>
            Provide accurate text measuring and drawing capability.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.AccurateText.MeasureString(System.Drawing.Graphics,System.Windows.Forms.RightToLeft,System.String,System.Drawing.Font,ComponentFactory.Krypton.Toolkit.PaletteTextTrim,ComponentFactory.Krypton.Toolkit.PaletteRelativeAlign,ComponentFactory.Krypton.Toolkit.PaletteTextHotkeyPrefix,System.Drawing.Text.TextRenderingHint,System.Boolean,System.Boolean)">
            <summary>
            Pixel accurate measure of the specified string when drawn with the specified Font object.
            </summary>
            <param name="g">Graphics instance used to measure text.</param>
            <param name="rtl">Right to left setting for control.</param>
            <param name="text">String to measure.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="trim">How to trim excess text.</param>
            <param name="align">How to align multine text.</param>
            <param name="prefix">How to process prefix characters.</param>
            <param name="hint">Rendering hint.</param>
            <param name="composition">Should draw on a composition element.</param>
            <param name="disposeFont">Dispose of font when finished with it.</param>
            <returns>A memento used to draw the text.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.AccurateText.DrawString(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Rectangle,System.Windows.Forms.RightToLeft,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Boolean,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.AccurateTextMemento)">
            <summary>
            Pixel accurate drawing of the requested text memento information.
            </summary>
            <param name="g">Graphics object used for drawing.</param>
            <param name="brush">Brush for drawing text with.</param>
            <param name="rect">Rectangle to draw text inside.</param>
            <param name="rtl">Right to left setting for control.</param>
            <param name="orientation">Orientation for drawing text.</param>
            <param name="memento">Memento containing text context.</param>
            <param name="state">State of the source element.</param>
            <param name="composition">Should draw on a composition element.</param>
            <returns>True if draw succeeded; False is draw produced an error.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.AccurateText.DrawCompositionGlowingText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,System.Drawing.Color,System.Boolean)">
            <summary>
            Draw text with a glowing background, for use on a composition element.
            </summary>
            <param name="g">Graphics reference.</param>
            <param name="text">Text to be drawn.</param>
            <param name="font">Font to use for text.</param>
            <param name="bounds">Bounding area for the text.</param>
            <param name="state">State of the source element.</param>
            <param name="color">Color of the text.</param>
            <param name="copyBackground">Should existing background be copied into the bitmap.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecFormFixed">
            <summary>
            Implementation for the fixed navigator buttons.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormFixed.#ctor(ComponentFactory.Krypton.Toolkit.KryptonForm,ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Initialize a new instance of the ButtonSpecFormFixed class.
            </summary>
            <param name="form">Reference to owning krypton form.</param>
            <param name="fixedStyle">Fixed style to use.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecFormFixed.AllowComponent">
            <summary>
            Can a component be associated with the view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecFormFixed.KryptonForm">
            <summary>
            Gets access to the owning krypton form.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecFormFixed.ButtonSpecType">
            <summary>
            Gets and sets the actual type of the button.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowClose">
            <summary>
            Implementation for the fixed close button for krypton form.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowClose.#ctor(ComponentFactory.Krypton.Toolkit.KryptonForm)">
            <summary>
            Initialize a new instance of the ButtonSpecFormWindowClose class.
            </summary>
            <param name="form">Reference to owning krypton form instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowClose.GetVisible(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowClose.GetEnabled(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowClose.GetChecked(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowClose.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowMin">
            <summary>
            Implementation for the fixed minimize button for krypton form.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowMin.#ctor(ComponentFactory.Krypton.Toolkit.KryptonForm)">
            <summary>
            Initialize a new instance of the ButtonSpecFormWindowMin class.
            </summary>
            <param name="form">Reference to owning krypton form instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowMin.GetVisible(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowMin.GetEnabled(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowMin.GetChecked(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowMin.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowMax">
            <summary>
            Implementation for the fixed maximize button for krypton form.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowMax.#ctor(ComponentFactory.Krypton.Toolkit.KryptonForm)">
            <summary>
            Initialize a new instance of the ButtonSpecFormWindowMax class.
            </summary>
            <param name="form">Reference to owning krypton form instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowMax.GetVisible(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowMax.GetEnabled(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowMax.GetChecked(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormWindowMax.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecToContent">
            <summary>
            Map button spec tooltip value to content values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecToContent.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.ButtonSpec)">
            <summary>
            Initialize a new instance of the PageToTooltipMapping class.
            </summary>
            <param name="palette">Palette for sourcing information.</param>
            <param name="buttonSpec">Source button spec instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecToContent.HasContent">
            <summary>
            Gets a value indicating if the mapping produces any content.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecToContent.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecToContent.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecToContent.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecToContent.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecViewControllers">
            <summary>
            Stores a triple of controller references.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecViewControllers.#ctor(ComponentFactory.Krypton.Toolkit.IMouseController,ComponentFactory.Krypton.Toolkit.ISourceController,ComponentFactory.Krypton.Toolkit.IKeyController)">
            <summary>
            Initialize a new instance of the ButtonSpecViewControllers class.
            </summary>
            <param name="mouseController">Mouse controller.</param>
            <param name="sourceController">Source controller.</param>
            <param name="keyController">Key controller.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecViewControllers.MouseController">
            <summary>
            Gets the mouse controller reference.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecViewControllers.SourceController">
            <summary>
            Gets the mouse controller reference.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecViewControllers.KeyController">
            <summary>
            Gets the mouse controller reference.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecCalendar">
            <summary>
            Implementation for internal calendar buttons.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCalendar.#ctor(ComponentFactory.Krypton.Toolkit.ViewDrawMonth,ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.RelativeEdgeAlign)">
            <summary>
            Initialize a new instance of the ButtonSpecCalendar class.
            </summary>
            <param name="month">Reference to owning view.</param>
            <param name="fixedStyle">Fixed style to use.</param>
            <param name="edge">Alignment edge.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecCalendar.Visible">
            <summary>
            Gets and sets the visible state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecCalendar.Enabled">
            <summary>
            Gets and sets the enabled state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecCalendar.AllowComponent">
            <summary>
            Can a component be associated with the view.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCalendar.GetVisible(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCalendar.GetEnabled(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCalendar.GetChecked(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCalendar.GetEdge(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button edge to position against.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Edge position.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar">
            <summary>
            Allow user to select a date using a visual monthly calendar display.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.DateChanged">
            <summary>
            Occurs when the selected date changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.SelectionStartChanged">
            <summary>
            Occurs when the selected start date changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.SelectionEndChanged">
            <summary>
            Occurs when the selected end date changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.#ctor">
            <summary>
            Initialize a new instance of the KryptonContextMenuMonthCalendar class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.ToString">
            <summary>
            Returns a description of the instance.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.ItemChildCount">
            <summary>
            Returns the number of child menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.Item(System.Int32)">
            <summary>
            Returns the indexed child menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.GenerateView(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,System.Object,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,System.Boolean,System.Boolean)">
            <summary>
            Returns a view appropriate for this item based on the object it is inside.
            </summary>
            <param name="provider">Provider of context menu information.</param>
            <param name="parent">Owning object reference.</param>
            <param name="columns">Containing columns.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
            <param name="imageColumn">Draw an image background for the item images.</param>
            <returns>ViewBase that is the root of the view hierachy being added.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.AutoClose">
            <summary>
            Gets and sets if selecting a day automatically closes the context menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.CloseOnTodayClick">
            <summary>
            Gets and sets if clicking the Today button closes the drop down menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.Enabled">
            <summary>
            Gets and sets if the radio button is enabled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.ScrollChange">
            <summary>
            Gets or sets the number of months to scroll when next/prev buttons are used.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.TodayDate">
            <summary>
            Gets or sets today's date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.AnnuallyBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determines which annual days are displayed in bold.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.MonthlyBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determine which monthly days to bold. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.BoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determines which nonrecurring dates are displayed in bold.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.MinDate">
            <summary>
            Gets or sets the minimum allowable date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.MaxDate">
            <summary>
            Gets or sets the maximum allowable date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.MaxSelectionCount">
            <summary>
            Gets or sets the maximum number of days that can be selected in a month calendar control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.SelectionStart">
            <summary>
            Gets or sets the start date of the selected range of dates.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.SelectionEnd">
            <summary>
            Gets or sets the end date of the selected range of dates.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.SelectionRange">
            <summary>
            Gets or sets the selected range of dates for a month calendar control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.TodayFormat">
            <summary>
            Gets or sets the today date format string.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.TodayText">
            <summary>
            Gets or sets the label text for todays text. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.CalendarDimensions">
            <summary>
            Gets or sets the number of columns and rows of months displayed. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.FirstDayOfWeek">
            <summary>
            First day of the week.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.ShowToday">
            <summary>
            Gets and sets if the control will display todays date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.ShowTodayCircle">
            <summary>
            Gets and sets if the control will circle the today date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.ShowWeekNumbers">
            <summary>
            Gets and sets if week numbers to the left of each row.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.HeaderStyle">
            <summary>
            Gets and sets the header style for the month calendar.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.DayStyle">
            <summary>
            Gets and sets the content style for the day entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.DayOfWeekStyle">
            <summary>
            Gets and sets the content style for the day of week labels.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.OverrideFocus">
            <summary>
            Gets access to the day appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.OverrideBolded">
            <summary>
            Gets access to the day appearance when it is bolded.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.OverrideToday">
            <summary>
            Gets access to the day appearance when it is todays.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.StateCommon">
            <summary>
            Gets access to the common month calendar appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.StateDisabled">
            <summary>
            Gets access to the month calendar disabled appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.StateNormal">
            <summary>
            Gets access to the month calendar normal appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.StateTracking">
            <summary>
            Gets access to the tracking month calendar appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.StatePressed">
            <summary>
            Gets access to the pressed month calendar appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.StateCheckedNormal">
            <summary>
            Gets access to the checked normal month calendar appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.StateCheckedTracking">
            <summary>
            Gets access to the checked tracking month calendar appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.StateCheckedPressed">
            <summary>
            Gets access to the checked pressed month calendar appearance entries.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.AddAnnuallyBoldedDate(System.DateTime)">
            <summary>
            Adds a day that is displayed in bold on an annual basis in the month calendar.
            </summary>
            <param name="date">The date to be displayed in bold.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.AddBoldedDate(System.DateTime)">
            <summary>
            Adds a day to be displayed in bold in the month calendar.
            </summary>
            <param name="date">The date to be displayed in bold.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.AddMonthlyBoldedDate(System.DateTime)">
            <summary>
            Adds a day that is displayed in bold on a monthly basis in the month calendar.
            </summary>
            <param name="date">The date to be displayed in bold.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.RemoveAllAnnuallyBoldedDates">
            <summary>
            Removes all the annually bold dates.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.RemoveAllBoldedDates">
            <summary>
            Removes all the nonrecurring bold dates.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.RemoveAllMonthlyBoldedDates">
            <summary>
            Removes all the monthly bold dates.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.OverrideDisabled">
            <summary>
            Gets access to the override for disabled day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.OverrideNormal">
            <summary>
            Gets access to the override for disabled day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.OverrideTracking">
            <summary>
            Gets access to the override for tracking day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.OverridePressed">
            <summary>
            Gets access to the override for pressed day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.OverrideCheckedNormal">
            <summary>
            Gets access to the override for checked normal day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.OverrideCheckedTracking">
            <summary>
            Gets access to the override for checked tracking day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.OverrideCheckedPressed">
            <summary>
            Gets access to the override for checked pressed day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.BoldedDatesList">
            <summary>
            Dates to be bolded.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.MonthlyBoldedDatesMask">
            <summary>
            Monthly days to be bolded.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.AnnuallyBoldedDatesMask">
            <summary>
            Array of annual days per month to be bolded.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.SetSelectionRange(System.DateTime,System.DateTime)">
            <summary>
            Set the selection range.
            </summary>
            <param name="start">New starting date.</param>
            <param name="end">New ending date.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.SetBoldedOverride(System.Boolean)">
            <summary>
            Update usage of bolded overrides.
            </summary>
            <param name="bolded">New bolded state.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.SetTodayOverride(System.Boolean)">
            <summary>
            Update usage of today overrides.
            </summary>
            <param name="today">New today state.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.SetFocusOverride(System.Boolean)">
            <summary>
            Sets the use of the focus override.
            </summary>
            <param name="focus">New focus state.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.HasFocus">
            <summary>
            Gets and sets if the item has the focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.FocusDay">
            <summary>
            Gets the focus day.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.OnDateChanged(System.Windows.Forms.DateRangeEventArgs)">
            <summary>
            Raises when the DateChanged event.
            </summary>
            <param name="e">An DateRangeEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.OnSelectionStartChanged(System.EventArgs)">
            <summary>
            Raises when the SelectionStartChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar.OnSelectionEndChanged(System.EventArgs)">
            <summary>
            Raises when the SelectionEndChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect">
            <summary>
            Provide a context menu image select.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.SelectedIndexChanged">
            <summary>
            Occurs when the value of the SelectedIndex property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.TrackingImage">
            <summary>
            Occurs when the user is tracking over a color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.#ctor">
            <summary>
            Initialize a new instance of the KryptonContextMenuImageSelect class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.ToString">
            <summary>
            Returns a description of the instance.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.ItemChildCount">
            <summary>
            Returns the number of child menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.Item(System.Int32)">
            <summary>
            Returns the indexed child menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.GenerateView(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,System.Object,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,System.Boolean,System.Boolean)">
            <summary>
            Returns a view appropriate for this item based on the object it is inside.
            </summary>
            <param name="provider">Provider of context menu information.</param>
            <param name="parent">Owning object reference.</param>
            <param name="columns">Containing columns.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
            <param name="imageColumn">Draw an image background for the item images.</param>
            <returns>ViewBase that is the root of the view hierachy being added.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.Padding">
            <summary>
            Gets and sets padding around the image selection area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.AutoClose">
            <summary>
            Gets and sets if selecting an image automatically closes the context menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.SelectedIndex">
            <summary>
            Gets access to the collection of images for display and selection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.ButtonStyle">
            <summary>
            Gets and sets the button style used for each image item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.ImageList">
            <summary>
            Gets access to the collection of images for display and selection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.ImageIndexStart">
            <summary>
            Gets and sets the index of first image in the ImageList for display.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.ImageIndexEnd">
            <summary>
            Gets and sets the index of last image in the ImageList for display.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.LineItems">
            <summary>
            Gets and sets the number of items to place on each display line.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect.OnTrackingImage(ComponentFactory.Krypton.Toolkit.ImageSelectEventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
            <param name="e">An ImageSelectEventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns">
            <summary>
            Provide a set of color columns for the context menu.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.SelectedColorChanged">
            <summary>
            Occurs when the SelectedColor property changes value.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.TrackingColor">
            <summary>
            Occurs when the user is tracking over a color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.#ctor">
            <summary>
            Initialize a new instance of the KryptonContextMenuColorColumns class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.#ctor(ComponentFactory.Krypton.Toolkit.ColorScheme)">
            <summary>
            Initialize a new instance of the KryptonContextMenuColorColumns class.
            </summary>
            <param name="scheme">Required color scheme of colors.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.ToString">
            <summary>
            Returns a description of the instance.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.ItemChildCount">
            <summary>
            Returns the number of child menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.Item(System.Int32)">
            <summary>
            Returns the indexed child menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.GenerateView(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,System.Object,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,System.Boolean,System.Boolean)">
            <summary>
            Returns a view appropriate for this item based on the object it is inside.
            </summary>
            <param name="provider">Provider of context menu information.</param>
            <param name="parent">Owning object reference.</param>
            <param name="columns">Containing columns.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
            <param name="imageColumn">Draw an image background for the item images.</param>
            <returns>ViewBase that is the root of the view hierachy being added.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.AutoClose">
            <summary>
            Gets and sets if clicking a color entry automatically closes the context menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.ColorScheme">
            <summary>
            Gets and sets the required color scheme.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.SelectedColor">
            <summary>
            Gets and sets the user selected color.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.BlockSize">
            <summary>
            Gets and sets the size of each color block.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.GroupNonFirstRows">
            <summary>
            Gets and sets if all but the first row should be group together.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.SetCustomColors(System.Drawing.Color[][])">
            <summary>
            Define a custom set of colors for display.
            </summary>
            <param name="colors">An array of color arrays, each of which must be the same length.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.ContainsColor(System.Drawing.Color)">
            <summary>
            Does the provided color exist in the definition.
            </summary>
            <param name="color">Color to find.</param>
            <returns>True if found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.OnSelectedColorChanged(ComponentFactory.Krypton.Toolkit.ColorEventArgs)">
            <summary>
            Raises the SelectedColorChanged event.
            </summary>
            <param name="e">An ColorEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns.OnTrackingColor(ComponentFactory.Krypton.Toolkit.ColorEventArgs)">
            <summary>
            Raises the TrackingColor event.
            </summary>
            <param name="e">An ColorEventArgs that contains the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton">
            <summary>
            Provide a context menu check button.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.Click">
            <summary>
            Occurs when the check box item is clicked.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.CheckedChanged">
            <summary>
            Occurs when the value of the Checked property has changed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.#ctor">
            <summary>
            Initialize a new instance of the KryptonContextMenuCheckButton class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.#ctor(System.String)">
            <summary>
            Initialize a new instance of the KryptonContextMenuCheckButton class.
            </summary>
            <param name="initialText">Initial text for display.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.ToString">
            <summary>
            Returns a description of the instance.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.ItemChildCount">
            <summary>
            Returns the number of child menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.Item(System.Int32)">
            <summary>
            Returns the indexed child menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.GenerateView(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,System.Object,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,System.Boolean,System.Boolean)">
            <summary>
            Returns a view appropriate for this item based on the object it is inside.
            </summary>
            <param name="provider">Provider of context menu information.</param>
            <param name="parent">Owning object reference.</param>
            <param name="columns">Containing columns.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
            <param name="imageColumn">Draw an image background for the item images.</param>
            <returns>ViewBase that is the root of the view hierachy being added.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.AutoClose">
            <summary>
            Gets and sets if clicking the check box automatically closes the context menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.Text">
            <summary>
            Gets and sets the check box text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.ExtraText">
            <summary>
            Gets and sets the check box extra text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.Image">
            <summary>
            Gets and sets the check box image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.ImageTransparentColor">
            <summary>
            Gets and sets the check box image color to make transparent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.ButtonStyle">
            <summary>
            Gets and sets the check button style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.Enabled">
            <summary>
            Gets and sets if the check box is enabled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.Checked">
            <summary>
            Gets or sets a value indicating if the component is in the checked state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.AutoCheck">
            <summary>
            Gets or sets a value indicating if the check box is automatically changed state when clicked. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.StateCommon">
            <summary>
            Gets access to the common button appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.StateDisabled">
            <summary>
            Gets access to the disabled button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.StateNormal">
            <summary>
            Gets access to the normal button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.StatePressed">
            <summary>
            Gets access to the pressed button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.StateTracking">
            <summary>
            Gets access to the tracking button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.StateCheckedNormal">
            <summary>
            Gets access to the normal checked button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.StateCheckedTracking">
            <summary>
            Gets access to the hot tracking checked button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.StateCheckedPressed">
            <summary>
            Gets access to the pressed checked button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.OverrideFocus">
            <summary>
            Gets access to the button appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.PerformClick">
            <summary>
            Generates a Click event for the component.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the CheckedChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton">
            <summary>
            Provide a context menu radio button.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.Click">
            <summary>
            Occurs when the radio button is clicked.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.CheckedChanged">
            <summary>
            Occurs when the value of the Checked property has changed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.#ctor">
            <summary>
            Initialize a new instance of the KryptonContextMenuRadioButton class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.#ctor(System.String)">
            <summary>
            Initialize a new instance of the KryptonContextMenuRadioButton class.
            </summary>
            <param name="initialText">Initial text for display.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.ToString">
            <summary>
            Returns a description of the instance.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.ItemChildCount">
            <summary>
            Returns the number of child menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.Item(System.Int32)">
            <summary>
            Returns the indexed child menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.GenerateView(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,System.Object,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,System.Boolean,System.Boolean)">
            <summary>
            Returns a view appropriate for this item based on the object it is inside.
            </summary>
            <param name="provider">Provider of context menu information.</param>
            <param name="parent">Owning object reference.</param>
            <param name="columns">Containing columns.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
            <param name="imageColumn">Draw an image background for the item images.</param>
            <returns>ViewBase that is the root of the view hierachy being added.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.AutoClose">
            <summary>
            Gets and sets if clicking the radio button automatically closes the context menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.Text">
            <summary>
            Gets and sets the radio button text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.ExtraText">
            <summary>
            Gets and sets the radio button extra text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.Image">
            <summary>
            Gets and sets the radio button image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.ImageTransparentColor">
            <summary>
            Gets and sets the radio button image color to make transparent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.LabelStyle">
            <summary>
            Gets and sets the radio button label style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.Images">
            <summary>
            Gets access to the image value overrides.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.Enabled">
            <summary>
            Gets and sets if the radio button is enabled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.Checked">
            <summary>
            Gets or sets a value indicating if the component is in the checked state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.AutoCheck">
            <summary>
            Gets or sets a value indicating if the radio button is automatically changed state when clicked. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.StateCommon">
            <summary>
            Gets access to the common radio button appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.StateDisabled">
            <summary>
            Gets access to the disabled radio button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.StateNormal">
            <summary>
            Gets access to the normal radio button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.OverrideFocus">
            <summary>
            Gets access to the radio button appearance when it has focus.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.PerformClick">
            <summary>
            Generates a Click event for the component.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the CheckedChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox">
            <summary>
            Provide a context menu check box.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.Click">
            <summary>
            Occurs when the check box item is clicked.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.CheckedChanged">
            <summary>
            Occurs when the value of the Checked property has changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.CheckStateChanged">
            <summary>
            Occurs when the value of the CheckState property has changed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.#ctor">
            <summary>
            Initialize a new instance of the KryptonContextMenuCheckBox class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.#ctor(System.String)">
            <summary>
            Initialize a new instance of the KryptonContextMenuCheckBox class.
            </summary>
            <param name="initialText">Initial text for display.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.ToString">
            <summary>
            Returns a description of the instance.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.ItemChildCount">
            <summary>
            Returns the number of child menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.Item(System.Int32)">
            <summary>
            Returns the indexed child menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.GenerateView(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,System.Object,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,System.Boolean,System.Boolean)">
            <summary>
            Returns a view appropriate for this item based on the object it is inside.
            </summary>
            <param name="provider">Provider of context menu information.</param>
            <param name="parent">Owning object reference.</param>
            <param name="columns">Containing columns.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
            <param name="imageColumn">Draw an image background for the item images.</param>
            <returns>ViewBase that is the root of the view hierachy being added.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.AutoClose">
            <summary>
            Gets and sets if clicking the check box automatically closes the context menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.Text">
            <summary>
            Gets and sets the check box text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.ExtraText">
            <summary>
            Gets and sets the check box extra text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.Image">
            <summary>
            Gets and sets the check box image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.ImageTransparentColor">
            <summary>
            Gets and sets the check box image color to make transparent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.LabelStyle">
            <summary>
            Gets and sets the check box label style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.Images">
            <summary>
            Gets access to the image value overrides.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.Enabled">
            <summary>
            Gets and sets if the check box is enabled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.Checked">
            <summary>
            Gets or sets a value indicating if the component is in the checked state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.CheckState">
            <summary>
            Gets or sets a value indicating the checked state of the component.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.AutoCheck">
            <summary>
            Gets or sets a value indicating if the check box is automatically changed state when clicked. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.ThreeState">
            <summary>
            Gets or sets a value indicating if the component allows three states instead of two.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.StateCommon">
            <summary>
            Gets access to the common check box appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.StateDisabled">
            <summary>
            Gets access to the disabled check box appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.StateNormal">
            <summary>
            Gets access to the normal check box appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.OverrideFocus">
            <summary>
            Gets access to the check box appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.PerformClick">
            <summary>
            Generates a Click event for the component.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the CheckedChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox.OnCheckStateChanged(System.EventArgs)">
            <summary>
            Raises the CheckStateChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel">
            <summary>
            Provide a context menu link label.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.Click">
            <summary>
            Occurs when the link label item is clicked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.#ctor">
            <summary>
            Initialize a new instance of the KryptonContextMenuLinkLabel class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.#ctor(System.String)">
            <summary>
            Initialize a new instance of the KryptonContextMenuLinkLabel class.
            </summary>
            <param name="initialText">Initial text for display.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.ToString">
            <summary>
            Returns a description of the instance.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.ItemChildCount">
            <summary>
            Returns the number of child menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.Item(System.Int32)">
            <summary>
            Returns the indexed child menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.GenerateView(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,System.Object,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,System.Boolean,System.Boolean)">
            <summary>
            Returns a view appropriate for this item based on the object it is inside.
            </summary>
            <param name="provider">Provider of context menu information.</param>
            <param name="parent">Owning object reference.</param>
            <param name="columns">Containing columns.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
            <param name="imageColumn">Draw an image background for the item images.</param>
            <returns>ViewBase that is the root of the view hierachy being added.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.LabelStyle">
            <summary>
            Gets and sets the link label style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.LinkBehavior">
            <summary>
            Gets and sets a value that determines the underline behavior of the link label.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.LinkVisited">
            <summary>
            Gets and sets a value indicating if the label has been visited.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.AutoClose">
            <summary>
            Gets and sets if clicking the link label automatically closes the context menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.Text">
            <summary>
            Gets and sets the link label text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.ExtraText">
            <summary>
            Gets and sets the link label extra text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.Image">
            <summary>
            Gets and sets the link label image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.ImageTransparentColor">
            <summary>
            Gets and sets the link label image color to make transparent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.StateNormal">
            <summary>
            Gets access to the link label normal instance specific appearance values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.OverridePressed">
            <summary>
            Gets access to the pressed link label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.OverrideFocus">
            <summary>
            Gets access to the link label appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.OverrideVisited">
            <summary>
            Gets access to normal state modifications when link label has been visited.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.OverrideNotVisited">
            <summary>
            Gets access to normal state modifications when link label has not been visited.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.PerformClick">
            <summary>
            Generates a Click event for the component.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuHeading">
            <summary>
            Provide a context menu heading.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuHeading.#ctor">
            <summary>
            Initialize a new instance of the KryptonContextMenuHeading class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuHeading.#ctor(System.String)">
            <summary>
            Initialize a new instance of the KryptonContextMenuHeading class.
            </summary>
            <param name="initialText">Initial text for display.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuHeading.ToString">
            <summary>
            Returns a description of the instance.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuHeading.ItemChildCount">
            <summary>
            Returns the number of child menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuHeading.Item(System.Int32)">
            <summary>
            Returns the indexed child menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuHeading.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuHeading.GenerateView(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,System.Object,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,System.Boolean,System.Boolean)">
            <summary>
            Returns a view appropriate for this item based on the object it is inside.
            </summary>
            <param name="provider">Provider of context menu information.</param>
            <param name="parent">Owning object reference.</param>
            <param name="columns">Containing columns.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
            <param name="imageColumn">Draw an image background for the item images.</param>
            <returns>ViewBase that is the root of the view hierachy being added.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuHeading.Text">
            <summary>
            Gets and sets the heading menu item text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuHeading.ExtraText">
            <summary>
            Gets and sets the heading menu item extra text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuHeading.Image">
            <summary>
            Gets and sets the heading menu item image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuHeading.ImageTransparentColor">
            <summary>
            Gets and sets the heading image color to make transparent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuHeading.StateNormal">
            <summary>
            Gets access to the header instance specific appearance values.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItems">
            <summary>
            Provide a collection of menu items.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItems.#ctor">
            <summary>
            Initialize a new instance of the KryptonContextMenuItems class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItems.#ctor(ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemBase[])">
            <summary>
            Initialize a new instance of the KryptonContextMenuItems class.
            </summary>
            <param name="children">Array of initial child items.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItems.ToString">
            <summary>
            Returns a description of the instance.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItems.ItemChildCount">
            <summary>
            Returns the number of child menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItems.Item(System.Int32)">
            <summary>
            Returns the indexed child menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItems.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItems.GenerateView(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,System.Object,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,System.Boolean,System.Boolean)">
            <summary>
            Returns a view appropriate for this item based on the object it is inside.
            </summary>
            <param name="provider">Provider of context menu information.</param>
            <param name="parent">Owning object reference.</param>
            <param name="columns">Containing columns.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
            <param name="imageColumn">Draw an image background for the item images.</param>
            <returns>ViewBase that is the root of the view hierachy being added.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItems.Items">
            <summary>
            Collection of standard menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItems.StandardStyle">
            <summary>
            Gets and sets if the collection appears as standard or alternate items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItems.ImageColumn">
            <summary>
            Gets and sets if the an image column is provided for background of images.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItems.StateNormal">
            <summary>
            Gets access to the image column specific appearance values.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem">
            <summary>
            Provide a standard menu item.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.Click">
            <summary>
            Occurs when the menu item is clicked.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.CheckedChanged">
            <summary>
            Occurs when the menu item is clicked.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.CheckStateChanged">
            <summary>
            Occurs when the menu item is clicked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.#ctor">
            <summary>
            Initialize a new instance of the KryptonContextMenuItem class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.#ctor(System.String)">
            <summary>
            Initialize a new instance of the KryptonContextMenuItem class.
            </summary>
            <param name="initialText">Initial text string.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.#ctor(System.String,System.EventHandler)">
            <summary>
            Initialize a new instance of the KryptonContextMenuItem class.
            </summary>
            <param name="initialText">Initial text string.</param>
            <param name="clickHandler">Click handler.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Keys)">
            <summary>
            Initialize a new instance of the KryptonContextMenuItem class.
            </summary>
            <param name="initialText">Initial text string.</param>
            <param name="clickHandler">Click handler.</param>
            <param name="shortcut">Shortcut key combination.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.#ctor(System.String,System.Drawing.Image,System.EventHandler)">
            <summary>
            Initialize a new instance of the KryptonContextMenuItem class.
            </summary>
            <param name="initialText">Initial text string.</param>
            <param name="initialImage">Initial image.</param>
            <param name="clickHandler">Click handler.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.#ctor(System.String,System.Drawing.Image,System.EventHandler,System.Windows.Forms.Keys)">
            <summary>
            Initialize a new instance of the KryptonContextMenuItem class.
            </summary>
            <param name="initialText">Initial text string.</param>
            <param name="initialImage">Initial image.</param>
            <param name="clickHandler">Click handler.</param>
            <param name="shortcut">Shortcut key combination.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.ToString">
            <summary>
            Returns a description of the instance.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.ItemChildCount">
            <summary>
            Returns the number of child menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.Item(System.Int32)">
            <summary>
            Returns the indexed child menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.GenerateView(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,System.Object,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,System.Boolean,System.Boolean)">
            <summary>
            Returns a view appropriate for this item based on the object it is inside.
            </summary>
            <param name="provider">Provider of context menu information.</param>
            <param name="parent">Owning object reference.</param>
            <param name="columns">Containing columns.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
            <param name="imageColumn">Draw an image background for the item images.</param>
            <returns>ViewBase that is the root of the view hierachy being added.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.Text">
            <summary>
            Gets and sets the standard menu item text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.ExtraText">
            <summary>
            Gets and sets the standard menu item extra text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.Image">
            <summary>
            Gets and sets the standard menu item image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.ImageTransparentColor">
            <summary>
            Gets and sets the heading image color to make transparent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination associated with the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.AutoClose">
            <summary>
            Gets and sets if clicking the menu item automatically closes the context menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.SplitSubMenu">
            <summary>
            Gets and sets whether the menu item toggles checked state when clicked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.CheckOnClick">
            <summary>
            Gets and sets if the shortcut display text is shown.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.ShowShortcutKeys">
            <summary>
            Gets and sets if the shortcut display text is shown.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.LargeKryptonCommandImage">
            <summary>
            Gets and sets if the large image is used from the attached KryptonCommand.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.ShortcutKeyDisplayString">
            <summary>
            Gets and sets the display text to use in preference to the shortcut key setting.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.Checked">
            <summary>
            Gets and sets if the menu item is in the checked state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.CheckState">
            <summary>
            Gets and sets the checked state of the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.Items">
            <summary>
            Collection of sub-menu items for display.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.Enabled">
            <summary>
            Gets and sets if the menu item is enabled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.StateDisabled">
            <summary>
            Gets access to the menu item disabled appearance values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.StateNormal">
            <summary>
            Gets access to the menu item normal appearance values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.StateChecked">
            <summary>
            Gets access to the menu item normal appearance values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.StateHighlight">
            <summary>
            Gets access to the menu item highlight appearance values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.PerformClick">
            <summary>
            Generates a Click event for the component.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the CheckedChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem.OnCheckStateChanged(System.EventArgs)">
            <summary>
            Raises the CheckStateChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.CheckBoxController">
            <summary>
            Controller used to manage keyboard and mouse interaction withe a check box.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.CheckBoxController.Click">
            <summary>
            Occurs when the check box has been selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxController.#ctor(ComponentFactory.Krypton.Toolkit.ViewDrawCheckBox,ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the CheckBoxController class.
            </summary>
            <param name="target">Target for state changes.</param>
            <param name="top">Top element for the check box control.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxController.Enabled">
            <summary>
            Gets and sets the enabled state of the controller.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxController.Target">
            <summary>
            Gets access to the associated target of the controller.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxController.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ContextMenuController">
            <summary>
            Controller for a VisualContextMenu popup.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuController.#ctor(ComponentFactory.Krypton.Toolkit.ViewContextMenuManager)">
            <summary>
            Initialize a new instance of the ContextMenuController class.
            </summary>
            <param name="viewManager">Owning view manager instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.TrackPositionController">
            <summary>
            Process mouse events a track bar position indicator.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackPositionController.#ctor(ComponentFactory.Krypton.Toolkit.ViewDrawTP)">
            <summary>
            Initialize a new instance of the TrackPositionController class.
            </summary>
            <param name="drawTB">Associated drawing element.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackPositionController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackPositionController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackPositionController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackPositionController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackPositionController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackPositionController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TrackPositionController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.TrackBarController">
            <summary>
            Process mouse/keyboard/focus events for a track bar.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackBarController.#ctor(ComponentFactory.Krypton.Toolkit.ViewDrawTP)">
            <summary>
            Initialize a new instance of the TrackBarController class.
            </summary>
            <param name="drawTB">Associated drawing element.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackBarController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackBarController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackBarController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackBarController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackBarController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackBarController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TrackBarController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackBarController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackBarController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackBarController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackBarController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TrackBarController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MonthCalendarController">
            <summary>
            Process the mouse/keyboard/focus for the month calendar.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.#ctor(ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar,ComponentFactory.Krypton.Toolkit.ViewContextMenuManager,ComponentFactory.Krypton.Toolkit.ViewLayoutMonths,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the MonthCalendarController class.
            </summary>
            <param name="monthCalendar">Reference to owning month calendar entry.</param>
            <param name="viewManager">Owning view manager instance.</param>
            <param name="months">Reference to view that manages the display of months.</param>
            <param name="needPaint">Delegate for handling repainting requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MonthCalendarController.HasSubMenu">
            <summary>
            Returns if the item shows a sub menu when selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.ShowTarget">
            <summary>
            This target should display as the active target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.ClearTarget">
            <summary>
            This target should clear any active display.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.ShowSubMenu">
            <summary>
            This target should show any appropriate sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.ClearSubMenu">
            <summary>
            This target should remove any showing sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.MatchMnemonic(System.Char)">
            <summary>
            Determine if the keys value matches the mnemonic setting for this target.
            </summary>
            <param name="charCode">Key code to test against.</param>
            <returns>True if a match is found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.MnemonicActivate">
            <summary>
            Activate the item because of a mnemonic key press.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.GetActiveView">
            <summary>
            Gets the view element that should be used when this target is active.
            </summary>
            <returns>View element to become active.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MonthCalendarController.ClientRectangle">
            <summary>
            Get the client rectangle for the display of this target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.DoesStackedClientMouseDownBecomeCurrent(System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause the currently stacked context menu to become current.
            </summary>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MonthCalendarController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MenuImageSelectController">
            <summary>
            Process mouse events for a image select image.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.Click">
            <summary>
            Occurs when the mouse is used to left click the target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.#ctor(ComponentFactory.Krypton.Toolkit.ViewContextMenuManager,ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageSelectItem,ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemSelect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ImageSelectController class.
            </summary>
            <param name="viewManager">Owning view manager instance.</param>
            <param name="target">Target for state changes.</param>
            <param name="layout">Reference to layout of the image items.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.MousePoint">
            <summary>
            Gets the current tracking mouse point.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.HasSubMenu">
            <summary>
            Returns if the item shows a sub menu when selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.ShowTarget">
            <summary>
            This target should display as the active target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.ClearTarget">
            <summary>
            This target should clear any active display.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.ShowSubMenu">
            <summary>
            This target should show any appropriate sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.ClearSubMenu">
            <summary>
            This target should remove any showing sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.MatchMnemonic(System.Char)">
            <summary>
            Determine if the keys value matches the mnemonic setting for this target.
            </summary>
            <param name="charCode">Key code to test against.</param>
            <returns>True if a match is found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.MnemonicActivate">
            <summary>
            Activate the item because of a mnemonic key press.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.GetActiveView">
            <summary>
            Gets the view element that should be used when this target is active.
            </summary>
            <returns>View element to become active.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.ClientRectangle">
            <summary>
            Get the client rectangle for the display of this target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.DoesStackedClientMouseDownBecomeCurrent(System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause the currently stacked context menu to become current.
            </summary>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.Target">
            <summary>
            Gets access to the associated target of the controller.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.Captured">
            <summary>
            Gets a value indicating if mouse input is being captured.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.UpdateTargetState(System.Windows.Forms.Control)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="c">Owning control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.OnClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuImageSelectController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.Click">
            <summary>
            Occurs when the color block has been clicked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.#ctor(ComponentFactory.Krypton.Toolkit.ViewContextMenuManager,ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorBlock,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the MenuColorBlockController class.
            </summary>
            <param name="viewManager">Owning view manager instance.</param>
            <param name="target">Target for state changes.</param>
            <param name="colorBlock">Drawing element that owns color block display.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.HasSubMenu">
            <summary>
            Returns if the item shows a sub menu when selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.ShowTarget">
            <summary>
            This target should display as the active target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.ClearTarget">
            <summary>
            This target should clear any active display.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.ShowSubMenu">
            <summary>
            This target should show any appropriate sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.ClearSubMenu">
            <summary>
            This target should remove any showing sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.MatchMnemonic(System.Char)">
            <summary>
            Determine if the keys value matches the mnemonic setting for this target.
            </summary>
            <param name="charCode">Key code to test against.</param>
            <returns>True if a match is found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.MnemonicActivate">
            <summary>
            Activate the item because of a mnemonic key press.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.GetActiveView">
            <summary>
            Gets the view element that should be used when this target is active.
            </summary>
            <returns>View element to become active.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.ClientRectangle">
            <summary>
            Get the client rectangle for the display of this target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.DoesStackedClientMouseDownBecomeCurrent(System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause the currently stacked context menu to become current.
            </summary>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuColorBlockController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.Click">
            <summary>
            Occurs when the check button has been clicked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.#ctor(ComponentFactory.Krypton.Toolkit.ViewContextMenuManager,ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the MenuCheckButtonController class.
            </summary>
            <param name="viewManager">Owning view manager instance.</param>
            <param name="target">Target for state changes.</param>
            <param name="checkButton">Drawing element that owns check button display.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.HasSubMenu">
            <summary>
            Returns if the item shows a sub menu when selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.ShowTarget">
            <summary>
            This target should display as the active target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.ClearTarget">
            <summary>
            This target should clear any active display.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.ShowSubMenu">
            <summary>
            This target should show any appropriate sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.ClearSubMenu">
            <summary>
            This target should remove any showing sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.MatchMnemonic(System.Char)">
            <summary>
            Determine if the keys value matches the mnemonic setting for this target.
            </summary>
            <param name="charCode">Key code to test against.</param>
            <returns>True if a match is found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.MnemonicActivate">
            <summary>
            Activate the item because of a mnemonic key press.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.GetActiveView">
            <summary>
            Gets the view element that should be used when this target is active.
            </summary>
            <returns>View element to become active.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.ClientRectangle">
            <summary>
            Get the client rectangle for the display of this target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.DoesStackedClientMouseDownBecomeCurrent(System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause the currently stacked context menu to become current.
            </summary>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckButtonController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.Click">
            <summary>
            Occurs when the radio button has been clicked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.#ctor(ComponentFactory.Krypton.Toolkit.ViewContextMenuManager,ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.ViewDrawMenuRadioButton,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the MenuRadioButtonController class.
            </summary>
            <param name="viewManager">Owning view manager instance.</param>
            <param name="target">Target for state changes.</param>
            <param name="radioButton">Drawing element that owns radio button display.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.HasSubMenu">
            <summary>
            Returns if the item shows a sub menu when selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.ShowTarget">
            <summary>
            This target should display as the active target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.ClearTarget">
            <summary>
            This target should clear any active display.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.ShowSubMenu">
            <summary>
            This target should show any appropriate sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.ClearSubMenu">
            <summary>
            This target should remove any showing sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.MatchMnemonic(System.Char)">
            <summary>
            Determine if the keys value matches the mnemonic setting for this target.
            </summary>
            <param name="charCode">Key code to test against.</param>
            <returns>True if a match is found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.MnemonicActivate">
            <summary>
            Activate the item because of a mnemonic key press.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.GetActiveView">
            <summary>
            Gets the view element that should be used when this target is active.
            </summary>
            <returns>View element to become active.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.ClientRectangle">
            <summary>
            Get the client rectangle for the display of this target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.DoesStackedClientMouseDownBecomeCurrent(System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause the currently stacked context menu to become current.
            </summary>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuRadioButtonController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.Click">
            <summary>
            Occurs when the check box has been clicked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.#ctor(ComponentFactory.Krypton.Toolkit.ViewContextMenuManager,ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the MenuCheckBoxController class.
            </summary>
            <param name="viewManager">Owning view manager instance.</param>
            <param name="target">Target for state changes.</param>
            <param name="checkBox">Drawing element that owns check box display.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.HasSubMenu">
            <summary>
            Returns if the item shows a sub menu when selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.ShowTarget">
            <summary>
            This target should display as the active target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.ClearTarget">
            <summary>
            This target should clear any active display.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.ShowSubMenu">
            <summary>
            This target should show any appropriate sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.ClearSubMenu">
            <summary>
            This target should remove any showing sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.MatchMnemonic(System.Char)">
            <summary>
            Determine if the keys value matches the mnemonic setting for this target.
            </summary>
            <param name="charCode">Key code to test against.</param>
            <returns>True if a match is found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.MnemonicActivate">
            <summary>
            Activate the item because of a mnemonic key press.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.GetActiveView">
            <summary>
            Gets the view element that should be used when this target is active.
            </summary>
            <returns>View element to become active.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.ClientRectangle">
            <summary>
            Get the client rectangle for the display of this target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.DoesStackedClientMouseDownBecomeCurrent(System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause the currently stacked context menu to become current.
            </summary>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuCheckBoxController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.Click">
            <summary>
            Occurs when the link label has been clicked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.#ctor(ComponentFactory.Krypton.Toolkit.ViewContextMenuManager,ComponentFactory.Krypton.Toolkit.ViewDrawContent,ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the MenuLinkLabelController class.
            </summary>
            <param name="viewManager">Owning view manager instance.</param>
            <param name="target">Target for state changes.</param>
            <param name="linkLabel">Drawing element that owns link label display.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.HasSubMenu">
            <summary>
            Returns if the item shows a sub menu when selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.ShowTarget">
            <summary>
            This target should display as the active target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.ClearTarget">
            <summary>
            This target should clear any active display.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.ShowSubMenu">
            <summary>
            This target should show any appropriate sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.ClearSubMenu">
            <summary>
            This target should remove any showing sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.MatchMnemonic(System.Char)">
            <summary>
            Determine if the keys value matches the mnemonic setting for this target.
            </summary>
            <param name="charCode">Key code to test against.</param>
            <returns>True if a match is found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.MnemonicActivate">
            <summary>
            Activate the item because of a mnemonic key press.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.GetActiveView">
            <summary>
            Gets the view element that should be used when this target is active.
            </summary>
            <returns>View element to become active.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.ClientRectangle">
            <summary>
            Get the client rectangle for the display of this target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.DoesStackedClientMouseDownBecomeCurrent(System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause the currently stacked context menu to become current.
            </summary>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuLinkLabelController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.#ctor(ComponentFactory.Krypton.Toolkit.ViewContextMenuManager,ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the MenuItemController class.
            </summary>
            <param name="viewManager">Owning view manager instance.</param>
            <param name="menuItem">Target menu item view element.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuItemController.HasSubMenu">
            <summary>
            Returns if the item shows a sub menu when selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.ShowTarget">
            <summary>
            This target should display as the active target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.ClearTarget">
            <summary>
            This target should clear any active display.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.ShowSubMenu">
            <summary>
            This target should show any appropriate sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.ClearSubMenu">
            <summary>
            This target should remove any showing sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.MatchMnemonic(System.Char)">
            <summary>
            Determine if the keys value matches the mnemonic setting for this target.
            </summary>
            <param name="charCode">Key code to test against.</param>
            <returns>True if a match is found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.MnemonicActivate">
            <summary>
            Activate the item because of a mnemonic key press.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.GetActiveView">
            <summary>
            Gets the view element that should be used when this target is active.
            </summary>
            <returns>View element to become active.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuItemController.ClientRectangle">
            <summary>
            Get the client rectangle for the display of this target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.DoesStackedClientMouseDownBecomeCurrent(System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause the currently stacked context menu to become current.
            </summary>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuItemController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.MenuItemController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="layout">Does a layout need to occur.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MenuItemController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.RadioButtonController.Click">
            <summary>
            Occurs when the radio button has been selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonController.#ctor(ComponentFactory.Krypton.Toolkit.ViewDrawRadioButton,ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the RadioButtonController class.
            </summary>
            <param name="target">Target for state changes.</param>
            <param name="top">Top element for the radio button control.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RadioButtonController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RadioButtonController.Enabled">
            <summary>
            Gets and sets the enabled state of the controller.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RadioButtonController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RadioButtonController.Target">
            <summary>
            Gets access to the associated target of the controller.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonController.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonTreeNode">
            <summary>
            Krypton extension of the TreeNode allowing extra information to be drawn.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeNode.PropertyChanged">
            <summary>
            Occurs when a property has changed value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeNode.#ctor">
            <summary>
            Initialize a new instance of the KryptonTreeNode class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the System.Windows.Forms.TreeNode class with the specified label text.
            </summary>
            <param name="text">The label System.Windows.Forms.TreeNode.Text of the new tree node.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])">
            <summary>
            Initializes a new instance of the System.Windows.Forms.TreeNode class with the specified label text and child tree nodes.
            </summary>
            <param name="text">The label System.Windows.Forms.TreeNode.Text of the new tree node.</param>
            <param name="children">An array of child System.Windows.Forms.TreeNode objects.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeNode.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the System.Windows.Forms.TreeNode class with the specified label text and images to display when the tree node is in a selected and unselected state.
            </summary>
            <param name="text">The label System.Windows.Forms.TreeNode.Text of the new tree node.</param>
            <param name="imageIndex">The index value of System.Drawing.Image to display when the tree node is unselected.</param>
            <param name="selectedImageIndex">The index value of System.Drawing.Image to display when the tree node is selected.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])">
            <summary>
            Initializes a new instance of the System.Windows.Forms.TreeNode class with the specified label text, child tree nodes, and images to display when the tree node is in a selected and unselected state.
            </summary>
            <param name="text">The label System.Windows.Forms.TreeNode.Text of the new tree node.</param>
            <param name="imageIndex">The index value of System.Drawing.Image to display when the tree node is unselected.</param>
            <param name="selectedImageIndex">The index value of System.Drawing.Image to display when the tree node is selected.</param>
            <param name="children">An array of child System.Windows.Forms.TreeNode objects.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeNode.LongText">
            <summary>
            Gets and sets the long text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeNode.LongForeColor">
            <summary>
            Gets or sets the foreground color of the long text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeNode.LongNodeFont">
            <summary>
            Gets or sets the font of the long text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeNode.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">A PropertyChangedEventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonTreeView">
            <summary>
            Provide a TreeView with Krypton styling applied.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.InternalTreeView.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the InternalTreeView.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.InternalTreeView.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the InternalTreeView.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.InternalTreeView.#ctor(ComponentFactory.Krypton.Toolkit.KryptonTreeView)">
            <summary>
            Initialize a new instance of the InternalTreeView class.
            </summary>
            <param name="kryptonTreeView">Reference to owning control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.InternalTreeView.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.InternalTreeView.Recreate">
            <summary>
            Recreate the window handle.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.InternalTreeView.ViewDrawPanel">
            <summary>
            Gets access to the contained view draw panel instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.InternalTreeView.MouseOver">
            <summary>
            Gets and sets if the mouse is currently over the combo box.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.InternalTreeView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.InternalTreeView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.InternalTreeView.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.InternalTreeView.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.AfterCheck">
            <summary>
            Occurs when a checkbox has been checked or unchecked.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.AfterCollapse">
            <summary>
            Occurs when a node has been collapsed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.AfterExpand">
            <summary>
            Occurs when a node has been expanded.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.AfterLabelEdit">
            <summary>
            Occurs when the text of node has been edited by the user.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.AfterSelect">
            <summary>
            Occurs when the selected has been changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.BeforeCheck">
            <summary>
            Occurs when a checkbox is about to be checked or unchecked.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.BeforeCollapse">
            <summary>
            Occurs when a node is about to be collapsed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.BeforeExpand">
            <summary>
            Occurs when a node is about to be expanded.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.BeforeLabelEdit">
            <summary>
            Occurs when the text of node is about to be edited by the user.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.BeforeSelect">
            <summary>
            Occurs when the selection is about to be changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ItemDrag">
            <summary>
            Occurs when the user begins dragging an item.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.NodeMouseClick">
            <summary>
            Occurs when a node is clicked with the mouse.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.NodeMouseDoubleClick">
            <summary>
            Occurs when a node is double clicked with the mouse.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.NodeMouseHover">
            <summary>
            Occurs when the mouse hovers over a node.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.RightToLeftLayoutChanged">
            <summary>
            Occurs when the value of the RightToLeftLayout property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.BackColorChanged">
            <summary>
            Occurs when the value of the BackColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.BackgroundImageChanged">
            <summary>
            Occurs when the value of the BackgroundImage property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.BackgroundImageLayoutChanged">
            <summary>
            Occurs when the value of the BackgroundImageLayout property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ForeColorChanged">
            <summary>
            Occurs when the value of the ForeColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.PaddingChanged">
            <summary>
            Occurs when the value of the MouseClick property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.Paint">
            <summary>
            Occurs when the value of the MouseClick property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.TextChanged">
            <summary>
            Occurs when the value of the TextChanged property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTreeView.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.#ctor">
            <summary>
            Initialize a new instance of the KryptonTreeView class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.TreeView">
            <summary>
            Gets access to the contained TreeView instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ContainedControl">
            <summary>
            Gets access to the contained input control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.Text">
            <summary>
            Gets or sets the text for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ItemHeight">
            <summary>
            Gets or sets the height of each tree node in the tree view control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.CheckBoxes">
            <summary>
            Gets or sets a value indicating whether check boxes are displayed next to the tree nodes in the tree view control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.FullRowSelect">
            <summary>
            Gets or sets a value indicating whether the selection highlight spans the width of the tree view control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.HideSelection">
            <summary>
            Gets or sets a value indicating whether the selected tree node remains highlighted even when the tree view has lost the focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.HotTracking">
            <summary>
            Gets or sets a value indicating whether a tree node label takes on the appearance of a hyperlink as the mouse pointer passes over it.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ImageIndex">
            <summary>
            Gets or sets the image-list index value of the default image that is displayed by the tree nodes.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ImageKey">
            <summary>
            Gets or sets the key of the default image for each node in the TreeView control when it is in an unselected state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ImageList">
            <summary>
            Gets or sets the ImageList that contains the Image objects that are used by the tree nodes.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.LabelEdit">
            <summary>
            Gets or sets a value indicating whether the label text of the tree nodes can be edited.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.PathSeparator">
            <summary>
            Gets or sets the delimiter string that the tree node path uses.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.Scrollable">
            <summary>
            Gets or sets a value indicating whether the tree view control displays scroll bars when they are needed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.SelectedImageIndex">
            <summary>
            Gets or sets the image list index value of the image that is displayed when a tree node is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.SelectedImageKey">
            <summary>
            Gets or sets the key of the default image shown when a TreeNode is in a selected state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.SelectedNode">
            <summary>
            Gets or sets the tree node that is currently selected in the tree view control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ShowLines">
            <summary>
            Gets or sets a value indicating whether lines are drawn between tree nodes in the tree view control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ShowNodeToolTips">
            <summary>
            Gets or sets a value indicating ToolTips are shown when the mouse pointer hovers over a TreeNode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ShowPlusMinus">
            <summary>
            Gets or sets a value indicating whether plus-sign (+) and minus-sign (-) buttons are displayed next to tree nodes that contain child tree nodes.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ShowRootLines">
            <summary>
            Gets or sets a value indicating whether lines are drawn between the tree nodes that are at the root of the tree view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.StateImageList">
            <summary>
            Gets or sets the image list that is used to indicate the state of the TreeView and its nodes.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.TopNode">
            <summary>
            Gets or sets the first fully-visible tree node in the tree view control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.TreeViewNodeSorter">
            <summary>
            Gets or sets the implementation of IComparer to perform a custom sort of the TreeView nodes.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.VisibleCount">
            <summary>
            Gets the number of tree nodes that can be fully visible in the tree view control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.RightToLeftLayout">
            <summary>
            Indicates whether the control layout is right-to-left when the RightToLeft property is True.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.Nodes">
            <summary>
            Gets the collection of tree nodes that are assigned to the tree view control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ItemStyle">
            <summary>
            Gets and sets the item style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.Sorted">
            <summary>
            Gets or sets a value indicating whether the items in the KryptonTreeView are sorted alphabetically.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.BackStyle">
            <summary>
            Gets and sets the background style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.BorderStyle">
            <summary>
            Gets and sets the border style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.PlusMinusImages">
            <summary>
            Gets access to the plus/minus image value overrides.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.CheckBoxImages">
            <summary>
            Gets access to the check box image value overrides.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OverrideFocus">
            <summary>
            Gets access to the item appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.StateCommon">
            <summary>
            Gets access to the common appearance entries that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.StateDisabled">
            <summary>
            Gets access to the disabled appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.StateNormal">
            <summary>
            Gets access to the normal appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.StateActive">
            <summary>
            Gets access to the active appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.StateTracking">
            <summary>
            Gets access to the hot tracking item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.StatePressed">
            <summary>
            Gets access to the pressed item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.StateCheckedNormal">
            <summary>
            Gets access to the normal checked item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.StateCheckedTracking">
            <summary>
            Gets access to the hot tracking checked item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.StateCheckedPressed">
            <summary>
            Gets access to the pressed checked item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.AlwaysActive">
            <summary>
            Gets and sets Determines if the control is always active or only when the mouse is over the control or has focus.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.CollapseAll">
            <summary>
            Collapses all the tree nodes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ExpandAll">
            <summary>
            Expands all the tree nodes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.Sort">
            <summary>
            Sorts the items in KryptonTreeView control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.BeginUpdate">
            <summary>
            Maintains performance while items are added to the TreeView one at a time by preventing the control from drawing until the EndUpdate method is called.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.EndUpdate">
            <summary>
            Resumes painting the TreeView control after painting is suspended by the BeginUpdate method. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.GetNodeAt(System.Drawing.Point)">
            <summary>
            Retrieves the tree node that is at the specified point.
            </summary>
            <param name="pt">The Point to evaluate and retrieve the node from. </param>
            <returns>The TreeNode at the specified point, in tree view (client) coordinates, or null if there is no node at that location.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.GetNodeAt(System.Int32,System.Int32)">
            <summary>
            Retrieves the tree node at the point with the specified coordinates.
            </summary>
            <param name="x">The X position to evaluate and retrieve the node from.</param>
            <param name="y">The Y position to evaluate and retrieve the node from.</param>
            <returns>The TreeNode at the specified location, in tree view (client) coordinates, or null if there is no node at that location.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.GetNodeCount(System.Boolean)">
            <summary>
            Retrieves the number of tree nodes, optionally including those in all subtrees, assigned to the tree view control.
            </summary>
            <param name="includeSubTrees">true to count the TreeNode items that the subtrees contain; otherwise, false.</param>
            <returns>The number of tree nodes, optionally including those in all subtrees, assigned to the control.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.HitTest(System.Drawing.Point)">
            <summary>
            Provides node information, given a point.
            </summary>
            <param name="pt">The Point at which to retrieve node information.</param>
            <returns>A TreeViewHitTestInfo.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.HitTest(System.Int32,System.Int32)">
            <summary>
            Provides node information, given x- and y-coordinates.
            </summary>
            <param name="x">The x-coordinate at which to retrieve node information.</param>
            <param name="y">The y-coordinate at which to retrieve node information.</param>
            <returns>A TreeViewHitTestInfo.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.SetFixedState(System.Boolean)">
            <summary>
            Sets the fixed state of the control.
            </summary>
            <param name="active">Should the control be fixed as active.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.IsActive">
            <summary>
            Gets a value indicating if the input control is active.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.Focus">
            <summary>
            Sets input focus to the control.
            </summary>
            <returns>true if the input focus request was successful; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.Select">
            <summary>
            Activates the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.ForceControlLayout">
            <summary>
            Force the layout logic to size and position the controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Raises the AfterCheck event.
            </summary>
            <param name="e">An TreeViewEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Raises the AfterCollapse event.
            </summary>
            <param name="e">An TreeViewEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Raises the AfterExpand event.
            </summary>
            <param name="e">An TreeViewEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)">
            <summary>
            Raises the AfterLabelEdit event.
            </summary>
            <param name="e">An NodeLabelEditEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Raises the AfterSelect event.
            </summary>
            <param name="e">An TreeViewEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Raises the BeforeCheck event.
            </summary>
            <param name="e">An TreeViewCancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Raises the BeforeCollapse event.
            </summary>
            <param name="e">An TreeViewCancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Raises the BeforeExpand event.
            </summary>
            <param name="e">An TreeViewCancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)">
            <summary>
            Raises the BeforeLabelEdit event.
            </summary>
            <param name="e">An NodeLabelEditEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Raises the BeforeSelect event.
            </summary>
            <param name="e">An TreeViewCancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            Raises the ItemDrag event.
            </summary>
            <param name="e">An ItemDragEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
            <summary>
            Raises the NodeMouseClick event.
            </summary>
            <param name="e">An TreeNodeMouseClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
            <summary>
            Raises the NodeMouseDoubleClick event.
            </summary>
            <param name="e">An TreeNodeMouseClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)">
            <summary>
            Raises the NodeMouseHover event.
            </summary>
            <param name="e">An TreeNodeMouseHoverEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnRightToLeftLayoutChanged(System.EventArgs)">
            <summary>
            Raises the RightToLeftLayoutChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the KryptonTreeView.
            </summary>
            <returns>A new instance of Control.ControlCollection assigned to the control.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnPaletteChanged(System.EventArgs)">
            <summary>
            Raises the PaletteChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnPaletteNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnCreateControl">
            <summary>
            Raises the CreateControl event.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the BackColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnBackgroundImageChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageLayoutChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnForeColorChanged(System.EventArgs)">
            <summary>
            Raises the ForeColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the PaddingChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnTabStopChanged(System.EventArgs)">
            <summary>
            Raises the TabStop event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnCausesValidationChanged(System.EventArgs)">
            <summary>
            Raises the CausesValidationChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">An PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTreeView.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTreeView.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonInputBox">
            <summary>
            Displays an input box for the user.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonInputBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonInputBox.Show(System.String)">
            <summary>
            Displays an input box with the provided prompt.
            </summary>
            <param name="prompt">The text to display as an input prompt.</param>
            <returns>Input string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonInputBox.Show(System.Windows.Forms.IWin32Window,System.String)">
            <summary>
            Displays an input box in front of the specified object and with the provided prompt.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="prompt">The text to display as an input prompt.</param>
            <returns>Input string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonInputBox.Show(System.String,System.String)">
            <summary>
            Displays an input box with provided prompt and caption.
            </summary>
            <param name="prompt">The text to display as an input prompt.</param>
            <param name="caption">The text to display in the title bar of the input box.</param>
            <returns>Input string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonInputBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>
            Displays an input box in front of the specified object and with the provided prompt and caption.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="prompt">The text to display as an input prompt.</param>
            <param name="caption">The text to display in the title bar of the input box.</param>
            <returns>Input string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonInputBox.Show(System.String,System.String,System.String)">
            <summary>
            Displays an input box with provided prompt and caption and defaulted response string.
            </summary>
            <param name="prompt">The text to display as an input prompt.</param>
            <param name="caption">The text to display in the title bar of the input box.</param>
            <param name="defaultResponse">Default response text..</param>
            <returns>Input string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonInputBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.String)">
            <summary>
            DDisplays an input box in front of the specified object and with the provided prompt and caption and defaulted response string.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="prompt">The text to display as an input prompt.</param>
            <param name="caption">The text to display in the title bar of the input box.</param>
            <param name="defaultResponse">Default response text..</param>
            <returns>Input string.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand">
            <summary>
            Defines state and events for a single task dialog command.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.Execute">
            <summary>
            Occurs when the command needs executing.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.PropertyChanged">
            <summary>
            Occurs when a property has changed value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.#ctor">
            <summary>
            Initialize a new instance of the KryptonCommand class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.DialogResult">
            <summary>
            Gets and sets DialogResult to use when the command is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.Enabled">
            <summary>
            Gets and sets the enabled state of the command.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.Text">
            <summary>
            Gets and sets the command text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.ExtraText">
            <summary>
            Gets and sets the command extra text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.Image">
            <summary>
            Gets and sets the command small image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.ImageTransparentColor">
            <summary>
            Gets and sets the command image transparent color.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.Tag">
            <summary>
            Gets and sets user-defined data associated with the object.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.PerformExecute">
            <summary>
            Generates a Execute event for a button.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.OnExecute(System.EventArgs)">
            <summary>
            Raises the Execute event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">A PropertyChangedEventArgs containing the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.ComponentFactory#Krypton#Toolkit#IKryptonCommand#ImageSmall">
            <summary>
            Gets and sets the command small image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.ComponentFactory#Krypton#Toolkit#IKryptonCommand#ImageLarge">
            <summary>
            Gets and sets the command large image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.ComponentFactory#Krypton#Toolkit#IKryptonCommand#TextLine1">
            <summary>
            Gets and sets the text line 1 property.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.ComponentFactory#Krypton#Toolkit#IKryptonCommand#TextLine2">
            <summary>
            Gets and sets the text line 2 property.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.ComponentFactory#Krypton#Toolkit#IKryptonCommand#Checked">
            <summary>
            Gets and sets the checked state of the command.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommand.ComponentFactory#Krypton#Toolkit#IKryptonCommand#CheckState">
            <summary>
            Gets and sets the check state of the command.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommandCollection">
            <summary>
            Manages a collection of KryptonTaskDialogCommand instances.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialogCommandCollection.Item(System.String)">
            <summary>
            Gets the item with the provided name.
            </summary>
            <param name="name">Name to find.</param>
            <returns>Item with matching name.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog">
            <summary>
            Represents a task dialog for presenting different options to the user.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.FooterHyperlinkClicked">
            <summary>
            Occurs when the users clicks the footer hyperlink.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.PropertyChanged">
            <summary>
            Occurs when a property has changed value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.#ctor">
            <summary>
             Initialize a new instance of the KryptonTaskDialog class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.WindowTitle">
            <summary>
            Gets and sets the caption of the window.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.MainInstruction">
            <summary>
            Gets and sets the principal text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.Content">
            <summary>
            Gets and sets the extra text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.Icon">
            <summary>
            Gets and sets the predefined icon.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.CustomIcon">
            <summary>
            Gets and sets the custom icon.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.RadioButtons">
            <summary>
            Gets access to the collection of radio button definitions.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.CommandButtons">
            <summary>
            Gets access to the collection of command button definitions.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.CommonButtons">
            <summary>
            Gets and sets the common dialog buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.DefaultRadioButton">
            <summary>
            Gets and sets the default radio button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.DefaultButton">
            <summary>
            Gets and sets the default common button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.FooterIcon">
            <summary>
            Gets and sets the predefined footer icon.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.CustomFooterIcon">
            <summary>
            Gets and sets the custom footer icon.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.FooterText">
            <summary>
            Gets and sets the footer text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.FooterHyperlink">
            <summary>
            Gets and sets the footer hyperlink.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.CheckboxText">
            <summary>
            Gets and sets the Checkbox text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.CheckboxState">
            <summary>
            Gets and sets the Checkbox text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.AllowDialogClose">
            <summary>
            Gets and sets if the window can be closed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.Tag">
            <summary>
            Gets and sets user-defined data associated with the object.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.ShowDialog">
            <summary>
            Shows the task dialog as a modal dialog box with the currently active window set as its owner.
            </summary>
            <returns>One of the DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
            <summary>
            Shows the form as a modal dialog box with the specified owner.
            </summary>
            <param name="owner">Any object that implements IWin32Window that represents the top-level window that will own the modal dialog box.</param>
            <returns>One of the DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.Show(System.String,System.String,System.String,System.Windows.Forms.MessageBoxIcon,ComponentFactory.Krypton.Toolkit.TaskDialogButtons)">
            <summary>
            Show a task dialog using the specified values as content.
            </summary>
            <param name="windowTitle">Caption of the window.</param>
            <param name="mainInstruction">Principal text.</param>
            <param name="content">Extra text.</param>
            <param name="icon">Predefined icon.</param>
            <param name="commonButtons">Common buttons.</param>
            <returns>One of the DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.OnFooterHyperlinkClicked(System.EventArgs)">
            <summary>
            Raises the PropertyFooterHyperlinkClickedChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTaskDialog.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">A PropertyChangedEventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualTaskDialog">
            <summary>
            Displays a task dialog that allows the user to select a task based on the presented options.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualTaskDialog.MessageButton">
            <summary>
            Internal button used by the VisualTaskDialog
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualTaskDialog.MessageButton.IgnoreAltF4">
            <summary>
            Gets and sets the ignoring of Alt+F4
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualTaskDialog.MessageButton.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process. </param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualTaskDialog.#ctor(ComponentFactory.Krypton.Toolkit.KryptonTaskDialog)">
            <summary>
            Initialize a new instance of the VisualTaskDialog class.
            </summary>
            <param name="taskDialog">Reference to component with definition of content.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualTaskDialog.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonMessageBox">
            <summary>
            Displays a message box that can contain text, buttons, and symbols that inform and instruct the user.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.HelpInfo.#ctor">
            <summary>
            Initialize a new instance of the HelpInfo class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.HelpInfo.#ctor(System.String)">
            <summary>
            Initialize a new instance of the HelpInfo class.
            </summary>
            <param name="helpFilePath">Value for HelpFilePath.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.HelpInfo.#ctor(System.String,System.String)">
            <summary>
            Initialize a new instance of the HelpInfo class.
            </summary>
            <param name="helpFilePath">Value for HelpFilePath.</param>
            <param name="keyword">Value for Keyword</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.HelpInfo.#ctor(System.String,System.Windows.Forms.HelpNavigator)">
            <summary>
            Initialize a new instance of the HelpInfo class.
            </summary>
            <param name="helpFilePath">Value for HelpFilePath.</param>
            <param name="navigator">Value for Navigator</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.HelpInfo.#ctor(System.String,System.Windows.Forms.HelpNavigator,System.Object)">
            <summary>
            Initialize a new instance of the HelpInfo class.
            </summary>
            <param name="helpFilePath">Value for HelpFilePath.</param>
            <param name="navigator">Value for Navigator</param>
            <param name="param">Value for Param</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.HelpInfo.HelpFilePath">
            <summary>
            Gets the HelpFilePath property.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.HelpInfo.Keyword">
            <summary>
            Gets the Keyword property.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.HelpInfo.Navigator">
            <summary>
            Gets the Navigator property.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.HelpInfo.Param">
            <summary>
            Gets the Param property.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.MessageButton.IgnoreAltF4">
            <summary>
            Gets and sets the ignoring of Alt+F4
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.MessageButton.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process. </param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.String)">
            <summary>
            Displays a message box with specified text.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String)">
            <summary>
            Displays a message box in front of the specified object and with the specified text.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.String,System.String)">
            <summary>
            Displays a message box with specified text and caption.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>
            Displays a message box in front of the specified object and with the specified text and caption.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            Displays a message box with specified text, caption, and buttons.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            Displays a message box in front of the specified object and with the specified text, caption, and buttons.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Displays a message box with specified text, caption, buttons, and icon.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Displays a message box in front of the specified object and with the specified text, caption, buttons, and icon.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, and default button.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)">
            <summary>
            Displays a message box in front of the specified object and with the specified text, caption, buttons, icon, and default button.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, and options.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)">
            <summary>
            Displays a message box in front of the specified object and with the specified text, caption, buttons, icon, default button, and options.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Boolean)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="displayHelpButton">Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and HelpNavigator.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="navigator">One of the System.Windows.Forms.HelpNavigator values.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.String)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and Help keyword.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="keyword">The Help keyword to display when the user clicks the Help button.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and HelpNavigator.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="navigator">One of the System.Windows.Forms.HelpNavigator values.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.String)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file and Help keyword.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="keyword">The Help keyword to display when the user clicks the Help button.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file, HelpNavigator, and Help topic.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="navigator">One of the System.Windows.Forms.HelpNavigator values.</param>
            <param name="param">The numeric ID of the Help topic to display when the user clicks the Help button.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object)">
            <summary>
            Displays a message box with the specified text, caption, buttons, icon, default button, options, and Help button, using the specified Help file, HelpNavigator, and Help topic.
            </summary>
            <param name="owner">Owner of the modal dialog box.</param>
            <param name="text">The text to display in the message box.</param>
            <param name="caption">The text to display in the title bar of the message box.</param>
            <param name="buttons">One of the System.Windows.Forms.MessageBoxButtons values that specifies which buttons to display in the message box.</param>
            <param name="icon">One of the System.Windows.Forms.MessageBoxIcon values that specifies which icon to display in the message box.</param>
            <param name="defaultButton">One of the System.Windows.Forms.MessageBoxDefaultButton values that specifies the default button for the message box.</param>
            <param name="options">One of the System.Windows.Forms.MessageBoxOptions values that specifies which display and association options will be used for the message box. You may pass in 0 if you wish to use the defaults.</param>
            <param name="helpFilePath">The path and name of the Help file to display when the user clicks the Help button.</param>
            <param name="navigator">One of the System.Windows.Forms.HelpNavigator values.</param>
            <param name="param">The numeric ID of the Help topic to display when the user clicks the Help button.</param>
            <returns>One of the System.Windows.Forms.DialogResult values.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonGroupBox">
            <summary>
            Display frame around a group of related controls with an optional caption.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.#ctor">
            <summary>
            Initialize a new instance of the KryptonGroupBox class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.Name">
            <summary>
            Gets and sets the name of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.AutoSize">
            <summary>
            Gets or sets a value indicating whether the control is automatically resized to display its entire contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.AutoSizeMode">
            <summary>
            Gets and sets the auto size mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.Text">
            <summary>
            Gets or sets the text associated with this control. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.Panel">
            <summary>
            Gets access to the internal panel that contains group content.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.CaptionOverlap">
            <summary>
            Gets and the sets the percentage of overlap for the caption and group area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.GroupBorderStyle">
            <summary>
            Gets and sets the border style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.GroupBackStyle">
            <summary>
            Gets and sets the background style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.CaptionStyle">
            <summary>
            Gets and sets the caption style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.CaptionEdge">
            <summary>
            Gets and sets the position of the caption.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.CaptionOrientation">
            <summary>
            Gets and sets the orientation of the caption.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.CaptionVisible">
            <summary>
            Gets and sets the caption visibility.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.StateCommon">
            <summary>
            Gets access to the common header group appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.StateDisabled">
            <summary>
            Gets access to the disabled header group appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.StateNormal">
            <summary>
            Gets access to the normal header group appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.Values">
            <summary>
            Gets access to the caption content.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Get the preferred size of the control based on a proposed size.
            </summary>
            <param name="proposedSize">Starting size proposed by the caller.</param>
            <returns>Calculated preferred size.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.DisplayRectangle">
            <summary>
            Gets the rectangle that represents the display area of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.ForceControlLayout">
            <summary>
            Force the layout logic to size and position the panels.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the KryptonHeaderGroup.
            </summary>
            <returns>A new instance of Control.ControlCollection assigned to the control.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.OnInitialized(System.EventArgs)">
            <summary>
            Raises the Initialized event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonTrackBar">
            <summary>
            Allow user to scroll between a range of values.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.ValueChanged">
            <summary>
            Occurs when the value of the Value property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.Scroll">
            <summary>
            Occurs when either a mouse or keyboard action moves the scroll box.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.#ctor">
            <summary>
            Initialize a new instance of the KryptonTrackBar class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.ImeMode">
            <summary>
            Determins the IME status of the object when selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.AutoSize">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.AutoSizeMode">
            <summary>
            Gets and sets the auto size mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.BackStyle">
            <summary>
            Gets and sets the background style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.OverrideFocus">
            <summary>
            Gets access to the track bar appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.StateCommon">
            <summary>
            Gets access to the common trackbar appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.StateDisabled">
            <summary>
            Gets access to the disabled trackbar appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.StateNormal">
            <summary>
            Gets access to the normal trackbar appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.StateTracking">
            <summary>
            Gets access to the tracking trackbar appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.StatePressed">
            <summary>
            Gets access to the pressed trackbar appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.VolumeControl">
            <summary>
            Gets and sets if the control displays like a volume control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.TrackBarSize">
            <summary>
            Gets and sets the size of the track bar elements.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.TickStyle">
            <summary>
            Gets or sets a value indicating how to display the tick marks on the track bar.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.TickFrequency">
            <summary>
            Gets or sets a value that specifies the delta between ticks drawn on the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.Orientation">
            <summary>
            Gets or sets a value indicating the horizontal or vertical orientation of the track bar.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.Maximum">
            <summary>
            Gets or sets the upper limit of the range this trackbar is working with.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.Minimum">
            <summary>
            Gets or sets the lower limit of the range this trackbar is working with.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.Value">
            <summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the track bar.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.SmallChange">
            <summary>
            Gets or sets the value added to or subtracted from the Value property when the scroll box is moved a small distance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the Value property when the scroll box is moved a large distance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.SetRange(System.Int32,System.Int32)">
            <summary>
            Sets the minimum and maximum values for a TrackBar.
            </summary>
            <param name="minValue">The lower limit of the range of the track bar.</param>
            <param name="maxValue">The upper limit of the range of the track bar.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.DrawBackground">
            <summary>
            Gets and sets if the control should draw the background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.InRibbonDesignMode">
            <summary>
            Gets and sets if the control is in the ribbon design mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
            <param name="x">The new Left property value of the control.</param>
            <param name="y">The new Top property value of the control.</param>
            <param name="width">The new Width property value of the control.</param>
            <param name="height">The new Height property value of the control.</param>
            <param name="specified">A bitwise combination of the BoundsSpecified values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
            <param name="keyData">One of the Keys values.</param>
            <returns>true if the specified key is a regular input key; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseWheel event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">An MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the Padding event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.OnValueChanged(System.EventArgs)">
            <summary>
            Raises the ValueChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.OnScroll(System.EventArgs)">
            <summary>
            Raises the Scroll event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Raises the RightToLeftChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTrackBar.EvalTransparentPaint">
            <summary>
            Work out if this control needs to paint transparent areas.
            </summary>
            <returns>True if paint required; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel">
            <summary>
            Display a windows forms label but with Krypton palette text and font settings.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.PaletteChanged">
            <summary>
            Occurs when the palette changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.#ctor">
            <summary>
            Initialize a new instance of the KryptonWrapLabel class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.TabIndex">
            <summary>
            Gets or sets the tab order of the KryptonSplitterPanel within its KryptonSplitContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.TabStop">
            <summary>
            Gets or sets a value indicating whether the user can give the focus to this KryptonSplitterPanel using the TAB key.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.BorderStyle">
            <summary>
            Determines if the lable has a border.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.FlatStyle">
            <summary>
            Determines appearance of the control when the mouse pressed on the label.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.AutoSize">
            <summary>
            Gets and sets the automatic resize of the control to fit contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.StateCommon">
            <summary>
            Gets access to the common wrap label appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.StateDisabled">
            <summary>
            Gets access to the disabled wrap label appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.StateNormal">
            <summary>
            Gets access to the normal wrap label appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.LabelStyle">
            <summary>
            Gets and sets the label style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.PaletteMode">
            <summary>
            Gets or sets the palette to be applied.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.ResetPaletteMode">
            <summary>
            Resets the PaletteMode property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.Palette">
            <summary>
            Gets and sets the custom palette implementation.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.ResetPalette">
            <summary>
            Resets the Palette property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu to show when right clicked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.GetResolvedPalette">
            <summary>
            Gets the resolved palette to actually use when drawing.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.Renderer">
            <summary>
            Gets access to the current renderer.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.CreateToolStripRenderer">
            <summary>
            Create a tool strip renderer appropriate for the current renderer/palette pair.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.UpdateFont">
            <summary>
            Update the font property.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.AttachGlobalEvents">
            <summary>
            Attach the control to global events.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.UnattachGlobalEvents">
            <summary>
            Attach the control to global events.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.OnPaletteChanged(System.EventArgs)">
            <summary>
            Raises the PaletteChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="pevent">An PaintEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.CreateRedirector">
            <summary>
            Create the redirector instance.
            </summary>
            <returns>PaletteRedirect derived class.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.SetLabelStyle(ComponentFactory.Krypton.Toolkit.LabelStyle)">
            <summary>
            Update the view elements based on the requested label style.
            </summary>
            <param name="style">New label style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.UpdateGlobalEvents(System.Boolean)">
            <summary>
            Update global event attachments.
            </summary>
            <param name="attach">True if attaching; otherwise false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Processes a command key.
            </summary>
            <param name="msg">A Message, passed by reference, that represents the window message to process.</param>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
            <returns>True is handled; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonWrapLabel.ContextMenuClosed">
            <summary>
            Called when a context menu has just been closed.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker">
            <summary>
            Represents a Windows control that allows the user to select a date and a time and to display the date and time with a specified format.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.DateTimePickerButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecAny instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.DateTimePickerButtonSpecCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker)">
            <summary>
            Initialize a new instance of the DateTimePickerButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ValueChanged">
            <summary>
            Occurs when the Value property has changed value.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ValueNullableChanged">
            <summary>
            Occurs when the ValueNullable property has changed value.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ActiveFragmentChanged">
            <summary>
            Occurs when the Value property has changed value.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.DropDown">
            <summary>
            Occurs when the drop down is shown.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CloseUp">
            <summary>
            Occurs when the drop down has been closed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CloseUpMonthCalendarChanged">
            <summary>
            Occurs when the month calendar date changed whilst dropped down.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.AutoShiftOverflow">
            <summary>
            Occurs when auto shifting to the next field but overflowing the end.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CheckedChanged">
            <summary>
            Occurs when the Checked property has changed value.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.FormatChanged">
            <summary>
            Occurs when the Format property has changed value.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.RightToLeftLayoutChanged">
            <summary>
            Occurs when the RightToLeftLayout property has changed value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.#ctor">
            <summary>
            Initialize a new instance of the KryptonHeader class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.Text">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarDimensions">
            <summary>
            Gets or sets the number of columns and rows of months displayed. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarTodayText">
            <summary>
            Gets or sets the label text for todays text. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ResetCalendarTodayText">
            <summary>
            Reset the value of the CalendarTodayText property.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarFirstDayOfWeek">
            <summary>
            First day of the week.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarShowToday">
            <summary>
            Gets and sets if the control will display todays date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarCloseOnTodayClick">
            <summary>
            Gets and sets if clicking the Today button closes the drop down menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarShowTodayCircle">
            <summary>
            Gets and sets if the control will circle the today date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarShowWeekNumbers">
            <summary>
            Gets and sets if week numbers to the left of each row.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarTodayDate">
            <summary>
            Gets or sets today's date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarAnnuallyBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determines which annual days are displayed in bold.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ShouldSerializeCalendarAnnuallyBoldedDates">
            <summary>
            Should the CalendarAnnuallyBoldedDates property be serialized.
            </summary>
            <returns>True if property needs to be serialized.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarMonthlyBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determine which monthly days to bold. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ShouldSerializeCalendarMonthlyBoldedDates">
            <summary>
            Should the CalendarMonthlyBoldedDates property be serialized.
            </summary>
            <returns>True if property needs to be serialized.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determines which nonrecurring dates are displayed in bold.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ShouldSerializeCalendarBoldedDates">
            <summary>
            Should the CalendarBoldedDates property be serialized.
            </summary>
            <returns>True if property needs to be serialized.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.DropDownAlign">
            <summary>
            Gets or sets the alignment of the drop-down calendar on the DateTimePicker control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ValueNullable">
            <summary>
            Gets or sets the date/time value assigned to the control that can be null.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ShouldSerializeValueNullable">
            <summary>
            Should the ValueNullable property be serialized.
            </summary>
            <returns>True if property needs to be serialized.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ResetValueNullable">
            <summary>
            Reset value of the ValueNullable property.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.Value">
            <summary>
            Gets or sets the date/time value assigned to the control..
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ShouldSerializeValue">
            <summary>
            Should the Value property be serialized.
            </summary>
            <returns>True if property needs to be serialized.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ResetValue">
            <summary>
            Reset value of the Value property.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.Format">
            <summary>
            Gets or sets the format of the date and time displayed in the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.RightToLeftLayout">
            <summary>
            Gets or sets the format of the date and time displayed in the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.AutoShift">
            <summary>
            Gets or sets a value determining if keyboard input will automatically shift to the next input field.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ShowUpDown">
            <summary>
            Gets or sets a value indicating whether a spin button control (also known as an up-down control) is used to adjust the date/time value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ShowCheckBox">
            <summary>
            Specifies whether to show the check box in the exception message box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether mnemonics will fire button spec buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.MaxDate">
            <summary>
            Gets or sets the maximum date and time that can be selected in the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ShouldSerializeMaxDate">
            <summary>
            Should the MaxDate property be serialized.
            </summary>
            <returns>True if property needs to be serialized.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.MinDate">
            <summary>
            Gets or sets the minimum date and time that can be selected in the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ShouldSerializeMinDate">
            <summary>
            Should the MinDate property be serialized.
            </summary>
            <returns>True if property needs to be serialized.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.Checked">
            <summary>
            Gets or sets a value indicating if the check box is checked and if the ValueNullable is DBNull or a DateTime value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CustomFormat">
            <summary>
            Gets or sets the custom date/time format string.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CustomNullText">
            <summary>
            Gets or sets the custom text to show when control is not checked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarTodayFormat">
            <summary>
            Gets or sets the today date format string.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarHeaderStyle">
            <summary>
            Gets and sets the header style for the month calendar.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarDayStyle">
            <summary>
            Gets and sets the content style for the day entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.CalendarDayOfWeekStyle">
            <summary>
            Gets and sets the content style for the day of week labels.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.PaletteMode">
            <summary>
            Gets or sets the palette to be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.Palette">
            <summary>
            Gets and sets the custom palette implementation.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.AlwaysActive">
            <summary>
            Gets and sets Determines if the control is always active or only when the mouse is over the control or has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.Images">
            <summary>
            Gets access to the checkbox value overrides.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.InputControlStyle">
            <summary>
            Gets and sets the input control style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.UpDownButtonStyle">
            <summary>
            Gets and sets the up and down buttons style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.DropButtonStyle">
            <summary>
            Gets and sets the drop button style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be displayed for button specs.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.StateCommon">
            <summary>
            Gets access to the common date time picker appearance entries that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.StateDisabled">
            <summary>
            Gets access to the disabled date time picker appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.StateNormal">
            <summary>
            Gets access to the normal date time picker appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.StateActive">
            <summary>
            Gets access to the active date time picker appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ActiveFragment">
            <summary>
            Gets and sets the active fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.SelectFirstFragment">
            <summary>
            Move selection to the first input fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.SelectNextFragment">
            <summary>
            Move selection to the next input fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.SelectPreviousFragment">
            <summary>
            Move selection to the previous input fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.SelectLastFragment">
            <summary>
            Move selection to the last input fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.SetFixedState(System.Boolean)">
            <summary>
            Sets the fixed state of the control.
            </summary>
            <param name="active">Should the control be fixed as active.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ToolTipManager">
            <summary>
            Gets access to the ToolTipManager used for displaying tool tips.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.IsActive">
            <summary>
            Gets a value indicating if the input control is active.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.IsMouseOver">
            <summary>
            Gets a value indicating if the mouse is over the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.IsDropped">
            <summary>
            Gets a value indicating if the drop down calendar is showing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.InRibbonDesignMode">
            <summary>
            Gets and sets if the control is in the ribbon design mode.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Get the preferred size of the control based on a proposed size.
            </summary>
            <param name="proposedSize">Starting size proposed by the caller.</param>
            <returns>Calculated preferred size.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ShowAdornments">
            <summary>
            Sets if the adornments are displayed (checkbox/drop button/up down buttons)
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ShowBorder">
            <summary>
            Sets if the adornments are displayed (checkbox/drop button/up down buttons)
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.DesignerComponentFromPoint(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.DesignerMouseLeave">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnRightToLeftLayoutChanged(System.EventArgs)">
            <summary>
            Raises the RightToLeftLayoutChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnFormatChanged(System.EventArgs)">
            <summary>
            Raises the FormatChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the CheckedChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnDropDown(ComponentFactory.Krypton.Toolkit.DateTimePickerDropArgs)">
            <summary>
            Raises the DropDown event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnCloseUp(ComponentFactory.Krypton.Toolkit.DateTimePickerCloseArgs)">
            <summary>
            Raises the CloseUp event.
            </summary>
            <param name="e">An DateTimePickerCloseArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnCloseUpMonthCalendarChanged(System.EventArgs)">
            <summary>
            Raises the CloseUpMonthCalendarChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnAutoShiftOverflow(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the AutoShiftOverflow event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnValueChanged(System.EventArgs)">
            <summary>
            Raises the ValueChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnValueNullableChanged(System.EventArgs)">
            <summary>
            Raises the ValueNullableChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnActiveFragmentChanged(System.EventArgs)">
            <summary>
            Raises the ActiveFragmentChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process. </param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.IsInputChar(System.Char)">
            <summary>
            Determines if a character is an input character that the control recognizes.
            </summary>
            <param name="charCode">The character to test.</param>
            <returns>true if the character should be sent directly to the control and not preprocessed; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
            <param name="keyData">One of the Keys values.</param>
            <returns>true if the specified key is a regular input key; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processsed; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseWheel event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
            <param name="x">The new Left property value of the control.</param>
            <param name="y">The new Top property value of the control.</param>
            <param name="width">The new Width property value of the control.</param>
            <param name="height">The new Height property value of the control.</param>
            <param name="specified">A bitwise combination of the BoundsSpecified values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Raises the RightToLeftChanged event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Processes a notification from palette storage of a button spec change.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.DTPContextMenu">
            <summary>
            Specialized implementation of the KryptonContextMenu for use with the KryptonDateTimePicker.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DTPContextMenu.#ctor(System.Drawing.Rectangle)">
            <summary>
             Initialize a new instance of the DTPContextMenu class.
            </summary>
            <param name="dropScreenRect">Screen rectangle of the drop down button on the KryptonDateTimePicker.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DTPContextMenu.CreateContextMenu(ComponentFactory.Krypton.Toolkit.KryptonContextMenu,ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteMode,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRedirectContextMenu,ComponentFactory.Krypton.Toolkit.KryptonContextMenuCollection,System.Boolean,System.Boolean)">
            <summary>
            Create a new visual context menu for showing the defined items.
            </summary>
            <param name="kcm">Owning KryptonContextMenu instance.</param>
            <param name="palette">Drawing palette.</param>
            <param name="paletteMode">Drawing palette mode.</param>
            <param name="redirector">Redirector for sourcing base values.</param>
            <param name="redirectorImages">Redirector for sourcing base images.</param>
            <param name="items">Colletion of menu items.</param>
            <param name="enabled">Enabled state of the menu.</param>
            <param name="keyboardActivated">True is menu was keyboard initiated.</param>
            <returns>VisualContextMenu reference.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonSeparator">
            <summary>
            Display a separator with generated events to operation.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSeparator.AutoSizeChanged">
            <summary>
            Occurs when the value of the AutoSize property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSeparator.BackgroundImageChanged">
            <summary>
            Occurs when the value of the BackgroundImage property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSeparator.BackgroundImageLayoutChanged">
            <summary>
            Occurs when the value of the BackgroundImageLayout property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSeparator.ControlAdded">
            <summary>
            Occurs when the value of the ControlAdded property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSeparator.ControlRemoved">
            <summary>
            Occurs when the value of the ControlRemoved property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SplitterMoveRect">
            <summary>
            Occurs when the separator is about to be moved and requests the rectangle of allowed movement.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SplitterMoved">
            <summary>
            Occurs when the separator move finishes and a move has occured.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SplitterNotMoved">
            <summary>
            Occurs when the separator move finishes and a move has not occured.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SplitterMoving">
            <summary>
            Occurs when the separator is currently in the process of moving.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.#ctor">
            <summary>
            Initialize a new instance of the KryptonSeparator class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.ContainerBackStyle">
            <summary>
            Gets and sets the separator background style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SeparatorStyle">
            <summary>
            Gets and sets the separator style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.StateCommon">
            <summary>
            Gets access to the common separator appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.StateDisabled">
            <summary>
            Gets access to the disabled separator appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.StateNormal">
            <summary>
            Gets access to the normal separator appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.StateTracking">
            <summary>
            Gets access to the hot tracking separator appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.StatePressed">
            <summary>
            Gets access to the pressed separator appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SplitterWidth">
            <summary>
            Gets and sets the thickness of the splitter.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SplitterIncrements">
            <summary>
            Gets and sets the increment used for moving.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.Orientation">
            <summary>
            Gets or sets a value indicating the horizontal or vertical orientation of the separator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.AllowMove">
            <summary>
            Gets or sets a value indicating if the separator is allowed to notify a move.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.DrawMoveIndicator">
            <summary>
            Gets and sets the drawing of the movement indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SeparatorControl">
            <summary>
            Gets the top level control of the source.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SeparatorOrientation">
            <summary>
            Gets the orientation of the separator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SeparatorCanMove">
            <summary>
            Can the separator be moved by the user.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SeparatorIncrements">
            <summary>
            Gets the amount the splitter can be incremented.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SeparatorMoveBox">
            <summary>
            Gets the box representing the minimum and maximum allowed splitter movement.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SeparatorMoving(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Indicates the separator is moving.
            </summary>
            <param name="mouse">Current mouse position in client area.</param>
            <param name="splitter">Current position of the splitter.</param>
            <returns>True if movement should be cancelled; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SeparatorMoved(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Indicates the separator has finished and been moved.
            </summary>
            <param name="mouse">Current mouse position in client area.</param>
            <param name="splitter">Current position of the splitter.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.SeparatorNotMoved">
            <summary>
            Indicates the separator has not been moved.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.Padding">
            <summary>
            Gets or sets padding within the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.OnSplitterMoveRect(ComponentFactory.Krypton.Toolkit.SplitterMoveRectMenuArgs)">
            <summary>
            Raises the SplitterMoveRect event.
            </summary>
            <param name="e">A SplitterMoveRectMenuArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.OnSplitterMoved(System.Windows.Forms.SplitterEventArgs)">
            <summary>
            Raises the SplitterMoved event.
            </summary>
            <param name="e">A SplitterEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.OnSplitterNotMoved(System.EventArgs)">
            <summary>
            Raises the SplitterNotMoved event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.OnSplitterMoving(System.Windows.Forms.SplitterCancelEventArgs)">
            <summary>
            Raises the SplitterMoving event.
            </summary>
            <param name="e">A SplitterEventArgs containing the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSeparator.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.OnInitialized(System.EventArgs)">
            <summary>
            Raises the Initialized event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.OnDockChanged(System.EventArgs)">
            <summary>
            Raises the DockChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.OnAutoSizeChanged(System.EventArgs)">
            <summary>
            Raises the AutoSizeChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.OnBackgroundImageChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageLayoutChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlAdded event.
            </summary>
            <param name="e">An ControlEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSeparator.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlRemoved event.
            </summary>
            <param name="e">An ControlEventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar">
            <summary>
            Enables the user to select a date using a visual monthly calendar display.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.DateChanged">
            <summary>
            Occurs when the selected date changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.SelectionStartChanged">
            <summary>
            Occurs when the selected start date changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.SelectionEndChanged">
            <summary>
            Occurs when the selected end date changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.Click">
            <summary>
            Occurs when the control is clicked.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.DoubleClick">
            <summary>
            Occurs when the control is double clicked.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.TextChanged">
            <summary>
            Occurs when the text value changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.ForeColorChanged">
            <summary>
            Occurs when the foreground color value changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.FontChanged">
            <summary>
            Occurs when the font value changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.BackgroundImageChanged">
            <summary>
            Occurs when the background image value changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.BackgroundImageLayoutChanged">
            <summary>
            Occurs when the background image layout value changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.BackColorChanged">
            <summary>
            Occurs when the background color value changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.PaddingChanged">
            <summary>
            Occurs when the padding value changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.Paint">
            <summary>
            Occurs when the control needs to paint.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.#ctor">
            <summary>
            Initialize a new instance of the KryptonMonthCalendar class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.AutoSizeMode">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.ImeMode">
            <summary>
            Gets or sets the Input Method Editor (IME) mode of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.Padding">
            <summary>
            Gets or sets the padding internal to the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.MinDate">
            <summary>
            Gets or sets the minimum allowable date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.TodayFormat">
            <summary>
            Gets or sets the today date format string.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.ScrollChange">
            <summary>
            Gets or sets the number of months to scroll when next/prev buttons are used.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.TodayDate">
            <summary>
            Gets or sets today's date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.AnnuallyBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determines which annual days are displayed in bold.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.MonthlyBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determine which monthly days to bold. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.BoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determines which nonrecurring dates are displayed in bold.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.MaxDate">
            <summary>
            Gets or sets the maximum allowable date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.MaxSelectionCount">
            <summary>
            Gets or sets the maximum number of days that can be selected in a month calendar control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.SelectionStart">
            <summary>
            Gets or sets the start date of the selected range of dates.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.SelectionEnd">
            <summary>
            Gets or sets the end date of the selected range of dates.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.SelectionRange">
            <summary>
            Gets or sets the selected range of dates for a month calendar control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.CalendarDimensions">
            <summary>
            Gets or sets the number of columns and rows of months displayed. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.FirstDayOfWeek">
            <summary>
            First day of the week.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.ControlBackStyle">
            <summary>
            Gets and sets the background style for the month calendar.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.ControlBorderStyle">
            <summary>
            Gets and sets the border style for the month calendar.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.HeaderStyle">
            <summary>
            Gets and sets the header style for the month calendar.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.DayStyle">
            <summary>
            Gets and sets the content style for the day entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.DayOfWeekStyle">
            <summary>
            Gets and sets the content style for the day of week labels.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.ShowToday">
            <summary>
            Gets and sets if the control will display todays date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.ShowTodayCircle">
            <summary>
            Gets and sets if the control will circle the today date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.ShowWeekNumbers">
            <summary>
            Gets and sets if week numbers to the left of each row.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OverrideFocus">
            <summary>
            Gets access to the day appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OverrideBolded">
            <summary>
            Gets access to the day appearance when it is bolded.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OverrideToday">
            <summary>
            Gets access to the day appearance when it is todays.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.StateCommon">
            <summary>
            Gets access to the common month calendar appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.StateDisabled">
            <summary>
            Gets access to the month calendar disabled appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.StateNormal">
            <summary>
            Gets access to the month calendar normal appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.StateTracking">
            <summary>
            Gets access to the tracking month calendar appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.StatePressed">
            <summary>
            Gets access to the pressed month calendar appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.StateCheckedNormal">
            <summary>
            Gets access to the checked normal month calendar appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.StateCheckedTracking">
            <summary>
            Gets access to the checked tracking month calendar appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.StateCheckedPressed">
            <summary>
            Gets access to the checked pressed month calendar appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be displayed for button specs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.AddAnnuallyBoldedDate(System.DateTime)">
            <summary>
            Adds a day that is displayed in bold on an annual basis in the month calendar.
            </summary>
            <param name="date">The date to be displayed in bold.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.AddBoldedDate(System.DateTime)">
            <summary>
            Adds a day to be displayed in bold in the month calendar.
            </summary>
            <param name="date">The date to be displayed in bold.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.AddMonthlyBoldedDate(System.DateTime)">
            <summary>
            Adds a day that is displayed in bold on a monthly basis in the month calendar.
            </summary>
            <param name="date">The date to be displayed in bold.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.RemoveAllAnnuallyBoldedDates">
            <summary>
            Removes all the annually bold dates.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.RemoveAllBoldedDates">
            <summary>
            Removes all the nonrecurring bold dates.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.RemoveAllMonthlyBoldedDates">
            <summary>
            Removes all the monthly bold dates.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.CalendarControl">
            <summary>
            Gets access to the owning control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.InDesignMode">
            <summary>
            Gets if the control is in design mode.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.GetRenderer">
            <summary>
            Get the renderer.
            </summary>
            <returns>Render instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OverrideDisabled">
            <summary>
            Gets access to the override for disabled day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OverrideNormal">
            <summary>
            Gets access to the override for disabled day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OverrideTracking">
            <summary>
            Gets access to the override for tracking day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OverridePressed">
            <summary>
            Gets access to the override for pressed day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OverrideCheckedNormal">
            <summary>
            Gets access to the override for checked normal day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OverrideCheckedTracking">
            <summary>
            Gets access to the override for checked tracking day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OverrideCheckedPressed">
            <summary>
            Gets access to the override for checked pressed day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.BoldedDatesList">
            <summary>
            Dates to be bolded.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.MonthlyBoldedDatesMask">
            <summary>
            Monthly days to be bolded.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.AnnuallyBoldedDatesMask">
            <summary>
            Array of annual days per month to be bolded.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.SetSelectionRange(System.DateTime,System.DateTime)">
            <summary>
            Set the selection range.
            </summary>
            <param name="start">New starting date.</param>
            <param name="end">New ending date.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.FocusDay">
            <summary>
            Gets the focus day.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.SetBoldedOverride(System.Boolean)">
            <summary>
            Update usage of bolded overrides.
            </summary>
            <param name="bolded">New bolded state.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.SetTodayOverride(System.Boolean)">
            <summary>
            Update usage of today overrides.
            </summary>
            <param name="today">New today state.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.SetFocusOverride(System.Boolean)">
            <summary>
            Update usage of focus overrides.
            </summary>
            <param name="focus">Should show focus.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.GetToolStripDelegate">
            <summary>
            Gets a delegate for creating tool strip renderers.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.DesignerComponentFromPoint(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.DesignerMouseLeave">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Processes a notification from palette storage of a button spec change.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.IsInputChar(System.Char)">
            <summary>
            Determines if a character is an input character that the control recognizes.
            </summary>
            <param name="charCode">The character to test.</param>
            <returns>true if the character should be sent directly to the control and not preprocessed; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
            <param name="keyData">One of the Keys values.</param>
            <returns>true if the specified key is a regular input key; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnDateChanged(System.Windows.Forms.DateRangeEventArgs)">
            <summary>
            Raises when the DateChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnSelectionStartChanged(System.EventArgs)">
            <summary>
            Raises when the SelectionStartChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnSelectionEndChanged(System.EventArgs)">
            <summary>
            Raises when the SelectionEndChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnGotFocus(System.EventArgs)">
            <summary>
            Raises when the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnLostFocus(System.EventArgs)">
            <summary>
            Raises when the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">An PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnForeColorChanged(System.EventArgs)">
            <summary>
            Raises the ForeColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnFontChanged(System.EventArgs)">
            <summary>
            Raises the FontChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnBackgroundImageChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageLayoutChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the BackColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the PaddingChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMonthCalendar.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
            <param name="x">The new Left property value of the control.</param>
            <param name="y">The new Top property value of the control.</param>
            <param name="width">The new Width property value of the control.</param>
            <param name="height">The new Height property value of the control.</param>
            <param name="specified">A bitwise combination of the BoundsSpecified values.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown">
            <summary>
            Provide a DomainUpDown with Krypton styling applied.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.InternalDomainUpDown.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the InternalTextBox.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.InternalDomainUpDown.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the InternalTextBox.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.InternalDomainUpDown.#ctor(ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown)">
            <summary>
            Initialize a new instance of the InternalDomainUpDown class.
            </summary>
            <param name="kryptonDomainUpDown">Reference to owning control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.InternalDomainUpDown.MouseOver">
            <summary>
            Gets and sets if the mouse is currently over the combo box.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.InternalDomainUpDown.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.InternalDomainUpDown.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.InternalDomainUpDown.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.InternalDomainUpDown.InternalUserEdit">
            <summary>
            Gets or sets a value indicating whether a value has been entered by the user.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassEdit.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the InternalDomainUpDown.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassEdit.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the InternalDomainUpDown.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassEdit.#ctor(System.IntPtr,ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown,ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.InternalDomainUpDown)">
            <summary>
            Initialize a new instance of the SubclassEdit class.
            </summary>
            <param name="editControl">Handle of the Edit control to subclass.</param>
            <param name="kryptonDomainUpDown">Reference to top level control.</param>
            <param name="internalDomainUpDown">Reference to internal domain control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassEdit.MouseOver">
            <summary>
            Gets and sets if the mouse is currently over the combo box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassEdit.MousePoint">
            <summary>
            Gets the last mouse point if the mouse is over the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassEdit.Visible">
            <summary>
            Sets the visible state of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassEdit.DomainUpDown">
            <summary>
            Gets access to the owning domain up down control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassEdit.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassEdit.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassEdit.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassButtons.#ctor(System.IntPtr,ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown,ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.InternalDomainUpDown)">
            <summary>
            Initialize a new instance of the SubclassButtons class.
            </summary>
            <param name="buttonsPtr">Handle of the Buttons control to subclass.</param>
            <param name="kryptonDomainUpDown">Reference to top level control.</param>
            <param name="internalDomainUpDown">Reference to internal domain control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassButtons.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassButtons.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassButtons.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassButtons.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassButtons.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SubclassButtons.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.DomainUpDownButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecAny instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.DomainUpDownButtonSpecCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown)">
            <summary>
            Initialize a new instance of the DomainUpDownButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SelectedItemChanged">
            <summary>
            Occurs when the value of the SelectedItem property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.Scroll">
            <summary>
            Occurs when the user scrolls the scroll box.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.BackColorChanged">
            <summary>
            Occurs when the value of the BackColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.BackgroundImageChanged">
            <summary>
            Occurs when the value of the BackgroundImage property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.BackgroundImageLayoutChanged">
            <summary>
            Occurs when the value of the BackgroundImageLayout property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.ForeColorChanged">
            <summary>
            Occurs when the value of the ForeColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.PaddingChanged">
            <summary>
            Occurs when the value of the PaddingChanged property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.#ctor">
            <summary>
            Initialize a new instance of the KryptonDomainUpDown class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.TabStop">
            <summary>
            Gets and sets if the control is in the tab chain.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.InRibbonDesignMode">
            <summary>
            Gets and sets if the control is in the ribbon design mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.DomainUpDown">
            <summary>
            Gets access to the contained DomainUpDown instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.ContainedControl">
            <summary>
            Gets access to the contained input control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.Focused">
            <summary>
            Gets a value indicating whether the control has input focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.Text">
            <summary>
            Gets or sets the text for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.Items">
            <summary>
            Gets the collection of allowable items of the domain up down.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SelectedIndex">
            <summary>
            Gets or sets the index value of the selected item. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SelectedItem">
            <summary>
            Gets or sets the selected item based on the index value of the selected item in the collection.  
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.Sorted">
            <summary>
            Gets or sets a value indicating whether the item collection is sorted.   
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.TextAlign">
            <summary>
            Gets or sets how the text should be aligned for edit controls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.UpDownAlign">
            <summary>
            Gets or sets how the up-down control will position the up down buttons relative to its text box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.InterceptArrowKeys">
            <summary>
            Gets or sets whether the up-down control will increment and decrement the value when the UP ARROW and DOWN ARROW are used.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the text in the edit control can be changed or not.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.AlwaysActive">
            <summary>
            Gets and sets Determines if the control is always active or only when the mouse is over the control or has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.InputControlStyle">
            <summary>
            Gets and sets the input control style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.UpDownButtonStyle">
            <summary>
            Gets and sets the up and down buttons style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be displayed for button specs.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.StateCommon">
            <summary>
            Gets access to the common textbox appearance entries that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.StateDisabled">
            <summary>
            Gets access to the disabled textbox appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.StateNormal">
            <summary>
            Gets access to the normal textbox appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.StateActive">
            <summary>
            Gets access to the active textbox appearance entries.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.UpButton">
            <summary>
            Displays the previous item in the collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.DownButton">
            <summary>
            Displays the next item in the collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the control.
            </summary>
            <param name="start">The position of the first character in the current text selection within the text box.</param>
            <param name="length">The number of characters to select.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SetFixedState(System.Boolean)">
            <summary>
            Sets the fixed state of the control.
            </summary>
            <param name="active">Should the control be fixed as active.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.ToolTipManager">
            <summary>
            Gets access to the ToolTipManager used for displaying tool tips.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.IsActive">
            <summary>
            Gets a value indicating if the input control is active.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.Focus">
            <summary>
            Sets input focus to the control.
            </summary>
            <returns>true if the input focus request was successful; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.Select">
            <summary>
            Activates the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Get the preferred size of the control based on a proposed size.
            </summary>
            <param name="proposedSize">Starting size proposed by the caller.</param>
            <returns>Calculated preferred size.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.DisplayRectangle">
            <summary>
            Gets the rectangle that represents the display area of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SetLayoutDisplayPadding(System.Windows.Forms.Padding)">
            <summary>
            Override the display padding for the layout fill.
            </summary>
            <param name="padding">Display padding value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.DesignerComponentFromPoint(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.DesignerMouseLeave">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.ForceControlLayout">
            <summary>
            Force the layout logic to size and position the controls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.UserEdit">
            <summary>
            Gets or sets a value indicating whether a value has been entered by the user.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnSelectedItemChanged(System.EventArgs)">
            <summary>
            Raises the SelectedItemChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Raises the SelectedItemChanged event.
            </summary>
            <param name="e">A ScrollEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the KryptonTextBox.
            </summary>
            <returns>A new instance of Control.ControlCollection assigned to the control.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnPaletteChanged(System.EventArgs)">
            <summary>
            Raises the PaletteChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnPaletteNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the BackColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnBackgroundImageChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageLayoutChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnForeColorChanged(System.EventArgs)">
            <summary>
            Raises the ForeColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
            <param name="x">The new Left property value of the control.</param>
            <param name="y">The new Top property value of the control.</param>
            <param name="width">The new Width property value of the control.</param>
            <param name="height">The new Height property value of the control.</param>
            <param name="specified">A bitwise combination of the BoundsSpecified values.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the PaddingChanged event.
            </summary>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnTabStopChanged(System.EventArgs)">
            <summary>
            Raises the TabStop event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.OnCausesValidationChanged(System.EventArgs)">
            <summary>
            Raises the CausesValidationChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDomainUpDown.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem">
            <summary>
            Krypton object used to represent nodes in a hierarchical bread crumb data structure.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.BreadCrumbItems">
            <summary>
            Manages a collection of KryptonBreadCrumbItems
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.BreadCrumbItems.#ctor(ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem)">
            <summary>
            Initialize a new instance of the BreadCrumbItems class.
            </summary>
            <param name="owner">Reference to owning item.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.BreadCrumbItems.Item(System.String)">
            <summary>
            Gets the item with the provided unique name.
            </summary>
            <param name="name">Name of the ribbon tab instance.</param>
            <returns>Item at specified index.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.BreadCrumbItems.OnInserting(ComponentFactory.Krypton.Toolkit.TypedCollectionEventArgs{ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem})">
            <summary>
            Raises the Inserting event.
            </summary>
            <param name="e">A KryptonRibbonTabEventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.BreadCrumbItems.OnInserted(ComponentFactory.Krypton.Toolkit.TypedCollectionEventArgs{ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem})">
            <summary>
            Raises the Inserted event.
            </summary>
            <param name="e">A TypedCollectionEventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.BreadCrumbItems.OnRemoved(ComponentFactory.Krypton.Toolkit.TypedCollectionEventArgs{ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem})">
            <summary>
            Raises the Removed event.
            </summary>
            <param name="e">A TypedCollectionEventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.BreadCrumbItems.OnClearing(System.EventArgs)">
            <summary>
            Raises the Clearing event.
            </summary>
            <param name="e">An EventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.BreadCrumbItems.OnCleared(System.EventArgs)">
            <summary>
            Raises the Cleared event.
            </summary>
            <param name="e">An EventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.#ctor">
            <summary>
            Initialize a new instance of the KryptonBreadCrumbItem class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.#ctor(System.String)">
            <summary>
            Initialize a new instance of the KryptonBreadCrumbItem class.
            </summary>
            <param name="shortText">Initial short text value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.#ctor(System.String,System.String)">
            <summary>
            Initialize a new instance of the KryptonBreadCrumbItem class.
            </summary>
            <param name="shortText">Initial short text value.</param>
            <param name="longText">Initial long text value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.#ctor(System.String,System.String,System.Drawing.Image)">
            <summary>
            Initialize a new instance of the KryptonBreadCrumbItem class.
            </summary>
            <param name="shortText">Initial short text value.</param>
            <param name="longText">Initial long text value.</param>
            <param name="image">Initial image value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.#ctor(System.String,System.String,System.Drawing.Image,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the KryptonBreadCrumbItem class.
            </summary>
            <param name="shortText">Initial short text value.</param>
            <param name="longText">Initial long text value.</param>
            <param name="image">Initial image value.</param>
            <param name="imageTransparentColor">Initial transparent image color.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.ToString">
            <summary>
            Gets the string representation of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.Items">
            <summary>
            Gets access to the colletion of child items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.Parent">
            <summary>
            Gets access to the Parent item in the hierarchy.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">A PropertyChangedEventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb">
            <summary>
            Provides a flat navigation of hierarchical data.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.BreadCrumbButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecAny instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.BreadCrumbButtonSpecCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb)">
            <summary>
            Initialize a new instance of the BreadCrumbButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.Initialized">
            <summary>
            Occurs when the control is initialized.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.CrumbDropDown">
            <summary>
            Occurs when the drop down portion of a bread crumb is pressed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.OverflowDropDown">
            <summary>
            Occurs when the drop down portion of the overflow buttonis pressed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.SelectedItemChanged">
            <summary>
            Occurs when the value of the SelectedItem property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.#ctor">
            <summary>
            Initialize a new instance of the KryptonBreadCrumb class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.IsInitialized">
            <summary>
            Gets a value indicating if the control is initialized.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.IsInitializing">
            <summary>
            Gets a value indicating if the control is initialized.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.AutoSize">
            <summary>
            Gets and sets the automatic resize of the control to fit contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether mnemonics will fire button spec buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.DropDownNavigation">
            <summary>
            Gets and sets a value indicating if drop down buttons should allow navigation to children.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be displayed for button specs.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.ControlBackStyle">
            <summary>
            Gets and sets the background style for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.CrumbButtonStyle">
            <summary>
            Gets and sets the button style for drawing each bread crumb.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.ControlBorderStyle">
            <summary>
            Gets and sets the border style for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.RootItem">
            <summary>
            Gets and sets the root bread crumb item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.SelectedItem">
            <summary>
            Gets and sets the selected bread crumb item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.StateCommon">
            <summary>
            Gets access to the common bread crumb appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.StateDisabled">
            <summary>
            Gets access to the disabled appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.StateNormal">
            <summary>
            Gets access to the normal appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.StateTracking">
            <summary>
            Gets access to the tracking bread crumb appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.StatePressed">
            <summary>
            Gets access to the pressed bread crumb appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.ToolTipManager">
            <summary>
            Gets access to the ToolTipManager used for displaying tool tips.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.DesignerComponentFromPoint(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.DesignerMouseLeave">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.CreateRedirector">
            <summary>
            Create the redirector instance.
            </summary>
            <returns>PaletteRedirect derived class.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processsed; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Processes a notification from palette storage of a button spec change.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.OnCrumbDropDown(ComponentFactory.Krypton.Toolkit.BreadCrumbMenuArgs)">
            <summary>
            Raises the CrumbDropDown event.
            </summary>
            <param name="e">An ContextPositionMenuArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.OnOverflowDropDown(ComponentFactory.Krypton.Toolkit.ContextPositionMenuArgs)">
            <summary>
            Raises the OverflowDropDown event.
            </summary>
            <param name="e">An ContextPositionMenuArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.OnSelectedItemChanged(System.EventArgs)">
            <summary>
            Raises the SelectedItemChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb.OnInitialized(System.EventArgs)">
            <summary>
            Raises the Initialized event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown">
            <summary>
            Provide a NumericUpDown with Krypton styling applied.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.InternalNumericUpDown.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the InternalTextBox.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.InternalNumericUpDown.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the InternalTextBox.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.InternalNumericUpDown.#ctor(ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown)">
            <summary>
            Initialize a new instance of the InternalTextBox class.
            </summary>
            <param name="kryptonNumericUpDown">Reference to owning control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.InternalNumericUpDown.MouseOver">
            <summary>
            Gets and sets if the mouse is currently over the combo box.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.InternalNumericUpDown.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.InternalNumericUpDown.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.InternalNumericUpDown.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.InternalNumericUpDown.InternalUserEdit">
            <summary>
            Gets or sets a value indicating whether a value has been entered by the user.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassEdit.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the InternalNumericUpDown.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassEdit.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the InternalNumericUpDown.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassEdit.#ctor(System.IntPtr,ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown,ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.InternalNumericUpDown)">
            <summary>
            Initialize a new instance of the SubclassEdit class.
            </summary>
            <param name="editControl">Handle of the Edit control to subclass.</param>
            <param name="kryptonNumericUpDown">Reference to top level control.</param>
            <param name="internalNumericUpDown">Reference to numeric internal control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassEdit.MouseOver">
            <summary>
            Gets and sets if the mouse is currently over the combo box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassEdit.MousePoint">
            <summary>
            Gets the last mouse point if the mouse is over the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassEdit.Visible">
            <summary>
            Sets the visible state of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassEdit.NumericUpDown">
            <summary>
            Gets access to the owning numeric up down control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassEdit.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassEdit.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassEdit.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassButtons.#ctor(System.IntPtr,ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown,ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.InternalNumericUpDown)">
            <summary>
            Initialize a new instance of the SubclassButtons class.
            </summary>
            <param name="buttonsPtr">Handle of the Buttons control to subclass.</param>
            <param name="kryptonNumericUpDown">Reference to top level control.</param>
            <param name="internalNumericUpDown">Reference to internal numeric control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassButtons.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassButtons.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassButtons.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassButtons.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassButtons.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SubclassButtons.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.NumericUpDownButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecAny instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.NumericUpDownButtonSpecCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown)">
            <summary>
            Initialize a new instance of the NumericUpDownButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.ValueChanged">
            <summary>
            Occurs when the value of the Value property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.TextChanged">
            <summary>
            Occurs when the value of the TextChanged property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.BackColorChanged">
            <summary>
            Occurs when the value of the BackColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.BackgroundImageChanged">
            <summary>
            Occurs when the value of the BackgroundImage property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.BackgroundImageLayoutChanged">
            <summary>
            Occurs when the value of the BackgroundImageLayout property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.ForeColorChanged">
            <summary>
            Occurs when the value of the ForeColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.PaddingChanged">
            <summary>
            Occurs when the value of the PaddingChanged property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.#ctor">
            <summary>
            Initialize a new instance of the KryptonNumericUpDown class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.TabStop">
            <summary>
            Gets and sets if the control is in the tab chain.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.InRibbonDesignMode">
            <summary>
            Gets and sets if the control is in the ribbon design mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.NumericUpDown">
            <summary>
            Gets access to the contained NumericUpDown instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.ContainedControl">
            <summary>
            Gets access to the contained input control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.Focused">
            <summary>
            Gets a value indicating whether the control has input focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.Text">
            <summary>
            Gets and sets the Text value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places to display.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether mnemonics will fire button spec buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.Increment">
            <summary>
            Gets or sets the amount to increment or decrement one each button click.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.Maximum">
            <summary>
            Gets or sets the maximum value for the numeric up-down control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.Minimum">
            <summary>
            Gets or sets the minimum value for the numeric up-down control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.ThousandsSeparator">
            <summary>
            Gets or sets whether the thousands separator wil be inserted between each three decimal digits.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.Value">
            <summary>
            Gets or sets the current value of the numeric up-down control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.TextAlign">
            <summary>
            Gets or sets how the text should be aligned for edit controls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.Hexadecimal">
            <summary>
            Gets or sets wheather the numeric up-down should display its value in hexadecimal.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.UpDownAlign">
            <summary>
            Gets or sets how the up-down control will position the up down buttons relative to its text box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.InterceptArrowKeys">
            <summary>
            Gets or sets whether the up-down control will increment and decrement the value when the UP ARROW and DOWN ARROW are used.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the text in the edit control can be changed or not.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.AlwaysActive">
            <summary>
            Gets and sets Determines if the control is always active or only when the mouse is over the control or has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.InputControlStyle">
            <summary>
            Gets and sets the input control style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.UpDownButtonStyle">
            <summary>
            Gets and sets the up and down buttons style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be displayed for button specs.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.StateCommon">
            <summary>
            Gets access to the common textbox appearance entries that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.StateDisabled">
            <summary>
            Gets access to the disabled textbox appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.StateNormal">
            <summary>
            Gets access to the normal textbox appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.StateActive">
            <summary>
            Gets access to the active textbox appearance entries.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the control.
            </summary>
            <param name="start">The position of the first character in the current text selection within the text box.</param>
            <param name="length">The number of characters to select.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SetFixedState(System.Boolean)">
            <summary>
            Sets the fixed state of the control.
            </summary>
            <param name="active">Should the control be fixed as active.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.ToolTipManager">
            <summary>
            Gets access to the ToolTipManager used for displaying tool tips.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.IsActive">
            <summary>
            Gets a value indicating if the input control is active.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.Focus">
            <summary>
            Sets input focus to the control.
            </summary>
            <returns>true if the input focus request was successful; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.Select">
            <summary>
            Activates the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.UpButton">
            <summary>
            Displays the previous item in the collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.DownButton">
            <summary>
            Displays the next item in the collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Get the preferred size of the control based on a proposed size.
            </summary>
            <param name="proposedSize">Starting size proposed by the caller.</param>
            <returns>Calculated preferred size.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.DisplayRectangle">
            <summary>
            Gets the rectangle that represents the display area of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SetLayoutDisplayPadding(System.Windows.Forms.Padding)">
            <summary>
            Override the display padding for the layout fill.
            </summary>
            <param name="padding">Display padding value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.DesignerComponentFromPoint(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.DesignerMouseLeave">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.ForceControlLayout">
            <summary>
            Force the layout logic to size and position the controls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.UserEdit">
            <summary>
            Gets or sets a value indicating whether a value has been entered by the user.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnValueChanged(System.EventArgs)">
            <summary>
            Raises the ValueChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the KryptonTextBox.
            </summary>
            <returns>A new instance of Control.ControlCollection assigned to the control.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnPaletteChanged(System.EventArgs)">
            <summary>
            Raises the PaletteChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnPaletteNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the BackColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnBackgroundImageChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageLayoutChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnForeColorChanged(System.EventArgs)">
            <summary>
            Raises the ForeColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
            <param name="x">The new Left property value of the control.</param>
            <param name="y">The new Top property value of the control.</param>
            <param name="width">The new Width property value of the control.</param>
            <param name="height">The new Height property value of the control.</param>
            <param name="specified">A bitwise combination of the BoundsSpecified values.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the PaddingChanged event.
            </summary>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnTabStopChanged(System.EventArgs)">
            <summary>
            Raises the TabStop event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnCausesValidationChanged(System.EventArgs)">
            <summary>
            Raises the CausesValidationChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonNumericUpDown.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonCommand">
            <summary>
            Defines state and events for a single command.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCommand.Execute">
            <summary>
            Occurs when the command needs executing.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCommand.PropertyChanged">
            <summary>
            Occurs when a property has changed value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCommand.#ctor">
            <summary>
            Initialize a new instance of the KryptonCommand class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCommand.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCommand.Enabled">
            <summary>
            Gets and sets the enabled state of the command.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCommand.Checked">
            <summary>
            Gets and sets the checked state of the command.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCommand.CheckState">
            <summary>
            Gets and sets the check state of the command.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCommand.Text">
            <summary>
            Gets and sets the command text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCommand.ExtraText">
            <summary>
            Gets and sets the command extra text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCommand.TextLine1">
            <summary>
            Gets and sets the command text line 1 for use in KryptonRibbon.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCommand.TextLine2">
            <summary>
            Gets and sets the command text line 2 for use in KryptonRibbon.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCommand.ImageSmall">
            <summary>
            Gets and sets the command small image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCommand.ImageLarge">
            <summary>
            Gets and sets the command large image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCommand.ImageTransparentColor">
            <summary>
            Gets and sets the command image transparent color.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCommand.Tag">
            <summary>
            Gets and sets user-defined data associated with the object.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCommand.PerformExecute">
            <summary>
            Generates a Execute event for a button.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCommand.OnExecute(System.EventArgs)">
            <summary>
            Raises the Execute event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCommand.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">A PropertyChangedEventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonCommandCollection">
            <summary>
            Manages a collection of KryptonCommand instances.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCommandCollection.Item(System.String)">
            <summary>
            Gets the item with the provided name.
            </summary>
            <param name="name">Name to find.</param>
            <returns>Item with matching name.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox">
            <summary>
            Provide a CheckedListBox with Krypton styling applied.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedIndexCollection">
            <summary>
            Encapsulates the collection of indexes of checked items (including items in an indeterminate state) in a CheckedListBox.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedIndexCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox)">
            <summary>
            Initialize a new instance of the CheckedIndexCollection class.
            </summary>
            <param name="owner">Reference to owning control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedIndexCollection.Contains(System.Object)">
            <summary>
            Determines whether the collection contains the button spec.
            </summary>
            <param name="item">Object reference.</param>
            <returns>True if button spec found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedIndexCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the current collection to the specified Array. 
            </summary>
            <param name="array">The Array that is the destination of the elements copied from the collection.</param>
            <param name="index">The index in array at which copying begins.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedIndexCollection.GetEnumerator">
            <summary>
            Enumerate using non-generic interface.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedIndexCollection.IndexOf(System.Int32)">
            <summary>
            Returns an index into the collection of checked indexes. 
            </summary>
            <param name="index">The index of the checked item.</param>
            <returns>-1 if not found; otherwise index position.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedIndexCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of the specified spec in the collection.
            </summary>
            <param name="item">Object reference.</param>
            <returns>-1 if not found; otherwise index position.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedIndexCollection.Count">
            <summary>
            Gets the number of items in collection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedIndexCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedIndexCollection.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <param name="index">Item index.</param>
            <returns>Item at specified index.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedItemCollection">
            <summary>
            Encapsulates the collection of checked items, including items in an indeterminate state, in a KryptonCheckedListBox control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedItemCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox)">
            <summary>
            Initialize a new instance of the CheckedItemCollection class.
            </summary>
            <param name="owner">Reference to owning control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedItemCollection.Contains(System.Object)">
            <summary>
            Determines whether the collection contains the button spec.
            </summary>
            <param name="item">Object reference.</param>
            <returns>True if button spec found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the current collection to the specified Array. 
            </summary>
            <param name="array">The Array that is the destination of the elements copied from the collection.</param>
            <param name="index">The index in array at which copying begins.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedItemCollection.GetEnumerator">
            <summary>
            Enumerate using non-generic interface.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedItemCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of the specified spec in the collection.
            </summary>
            <param name="item">Object reference.</param>
            <returns>-1 if not found; otherwise index position.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedItemCollection.IndexOfIdentifier(System.Object)">
            <summary>
            Determines the index of the specified spec in the collection.
            </summary>
            <param name="item">Object reference.</param>
            <returns>-1 if not found; otherwise index position.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedItemCollection.Count">
            <summary>
            Gets the number of items in collection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <param name="index">Item index.</param>
            <returns>Item at specified index.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.ObjectCollection">
            <summary>
            Represents the collection of items in a CheckedListBox.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.ObjectCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox)">
            <summary>
            Initialize a new instance of the ObjectCollection class.
            </summary>
            <param name="owner">Reference to owning control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.ObjectCollection.Add(System.Object,System.Boolean)">
            <summary>
            Adds an item to the list of items for a CheckedListBox, specifying the object to add and whether it is checked.
            </summary>
            <param name="item">An object representing the item to add to the collection.</param>
            <param name="isChecked">true to check the item; otherwise, false</param>
            <returns>The index of the newly added item.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.ObjectCollection.Add(System.Object,System.Windows.Forms.CheckState)">
            <summary>
            Adds an item to the list of items for a CheckedListBox, specifying the object to add and the initial checked value.
            </summary>
            <param name="item">An object representing the item to add to the collection.</param>
            <param name="check">The initial CheckState for the checked portion of the item.</param>
            <returns>The index of the newly added item.</returns>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the InternalListBox.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the InternalListBox.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.#ctor(ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox)">
            <summary>
            Initialize a new instance of the InternalCheckedListBox class.
            </summary>
            <param name="kryptonCheckedListBox">Reference to owning control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.Recreate">
            <summary>
            Recreate the window handle.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.ViewDrawPanel">
            <summary>
            Gets access to the contained view draw panel instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.MouseIndex">
            <summary>
            Gets the item index the mouse is over.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.MouseOver">
            <summary>
            Gets and sets if the mouse is currently over the combo box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.DrawMode">
            <summary>
            Gets and sets the drawing mode of the checked list box.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.RefreshItemSizes">
            <summary>
            Force the remeasure of items so they are sized correctly.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.CreateItemCollection">
            <summary>
            Creates a new instance of the item collection.
            </summary>
            <returns>A ListBox.ObjectCollection that represents the new item collection.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">A KeyPressEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
            <param name="e">A EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.WmReflectCommand(System.Windows.Forms.Message@)">
            <summary>
            This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.
            </summary>
            <param name="m">The Message the top-level window sent to the InternalCheckedListBox control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.InternalCheckedListBox.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.Format">
            <summary>
            Occurs when the property of a control is bound to a data value. 
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.FormatInfoChanged">
            <summary>
            Occurs when the value of the FormatInfo property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.FormatStringChanged">
            <summary>
            Occurs when the value of the FormatString property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.FormattingEnabledChanged">
            <summary>
            Occurs when the value of the FormattingEnabled property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.SelectedValueChanged">
            <summary>
            Occurs when the value of the SelectedValue property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.SelectedIndexChanged">
            <summary>
            Occurs when the value of the SelectedIndex property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.ItemCheck">
            <summary>
            Occurs when the value of the SelectedIndex property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.BackColorChanged">
            <summary>
            Occurs when the value of the BackColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.BackgroundImageChanged">
            <summary>
            Occurs when the value of the BackgroundImage property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.BackgroundImageLayoutChanged">
            <summary>
            Occurs when the value of the BackgroundImageLayout property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.ForeColorChanged">
            <summary>
            Occurs when the value of the ForeColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.PaddingChanged">
            <summary>
            Occurs when the value of the MouseClick property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.Paint">
            <summary>
            Occurs when the value of the MouseClick property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.TextChanged">
            <summary>
            Occurs when the value of the TextChanged property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.#ctor">
            <summary>
            Initialize a new instance of the KryptonCheckedListBox class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.ListBox">
            <summary>
            Gets access to the contained CheckedListBox instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.ContainedControl">
            <summary>
            Gets access to the contained input control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.Text">
            <summary>
            Gets or sets the text for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.SelectedIndex">
            <summary>
            Gets or sets the zero-based index of the currently selected item in a KryptonCheckedListBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.SelectedValue">
            <summary>
            Gets the value of the selected item in the list control, or selects the item in the list control that contains the specified value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.SelectedIndices">
            <summary>
            Gets a collection that contains the zero-based indexes of all currently selected items in the KryptonCheckedListBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.SelectedItem">
            <summary>
            Gets or sets the currently selected item in the KryptonCheckedListBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.SelectedItems">
            <summary>
            Gets a collection containing the currently selected items in the KryptonCheckedListBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.TopIndex">
            <summary>
            Gets or sets the index of the first visible item in the KryptonCheckedListBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.ItemStyle">
            <summary>
            Gets and sets the button style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.HorizontalExtent">
            <summary>
            Gets or sets the width by which the horizontal scroll bar of a KryptonCheckedListBox can scroll. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.HorizontalScrollbar">
            <summary>
            Gets or sets a value indicating whether a horizontal scroll bar is displayed in the control. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.ScrollAlwaysVisible">
            <summary>
            Gets or sets a value indicating whether the vertical scroll bar is shown at all times. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckOnClick">
            <summary>
            Gets or sets a value indicating whether the check box should be toggled when an item is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.SelectionMode">
            <summary>
            Gets or sets the selection mode of the KryptonCheckedListBox control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.Sorted">
            <summary>
            Gets or sets a value indicating whether the items in the KryptonCheckedListBox are sorted alphabetically.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.Items">
            <summary>
            Gets the items of the KryptonCheckedListBox. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedItems">
            <summary>
            Collection of checked items in this KryptonCheckedListBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CheckedIndices">
            <summary>
            Collection of checked indexes in this KryptonCheckedListBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.FormatString">
            <summary>
            Gets or sets the format specifier characters that indicate how a value is to be displayed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.FormattingEnabled">
            <summary>
            Gets or sets if this property is true, the value of FormatString is used to convert the value of DisplayMember into a value that can be displayed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.BackStyle">
            <summary>
            Gets and sets the background style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.BorderStyle">
            <summary>
            Gets and sets the border style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OverrideFocus">
            <summary>
            Gets access to the item appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.Images">
            <summary>
            Gets access to the check box image value overrides.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.StateCommon">
            <summary>
            Gets access to the common appearance entries that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.StateDisabled">
            <summary>
            Gets access to the disabled appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.StateNormal">
            <summary>
            Gets access to the normal appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.StateActive">
            <summary>
            Gets access to the active appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.StateTracking">
            <summary>
            Gets access to the hot tracking item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.StatePressed">
            <summary>
            Gets access to the pressed item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.StateCheckedNormal">
            <summary>
            Gets access to the normal checked item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.StateCheckedTracking">
            <summary>
            Gets access to the hot tracking checked item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.StateCheckedPressed">
            <summary>
            Gets access to the pressed checked item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.AlwaysActive">
            <summary>
            Gets and sets Determines if the control is always active or only when the mouse is over the control or has focus.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.ClearSelected">
            <summary>
            Unselects all items in the KryptonCheckedListBox.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.GetItemChecked(System.Int32)">
            <summary>
            Returns a value indicating whether the specified item is checked.
            </summary>
            <param name="index">The index of the item.</param>
            <returns>true if the item is checked; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.GetItemCheckState(System.Int32)">
            <summary>
            Returns a value indicating the check state of the current item.
            </summary>
            <param name="index">The index of the item to get the checked value of.</param>
            <returns>One of the CheckState values.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.SetItemChecked(System.Int32,System.Boolean)">
            <summary>
            Sets CheckState for the item at the specified index to Checked.
            </summary>
            <param name="index">The index of the item to set the check state for.</param>
            <param name="value">true to set the item as checked; otherwise, false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.SetItemCheckState(System.Int32,System.Windows.Forms.CheckState)">
            <summary>
            Sets the check state of the item at the specified index.
            </summary>
            <param name="index">The index of the item to set the state for.</param>
            <param name="value">One of the CheckState values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.FindString(System.String)">
            <summary>
            Finds the first item in the list box that starts with the specified string.
            </summary>
            <param name="str">The String to search for.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.FindString(System.String,System.Int32)">
            <summary>
            Finds the first item after the given index which starts with the given string. The search is not case sensitive.
            </summary>
            <param name="str">The String to search for.</param>
            <param name="startIndex">The zero-based index of the item before the first item to be searched. Set to -1 to search from the beginning of the control.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found, or 0 if the s parameter specifies Empty.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.FindStringExact(System.String)">
            <summary>
            Finds the first item in the list box that matches the specified string.
            </summary>
            <param name="str">The String to search for.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.FindStringExact(System.String,System.Int32)">
            <summary>
            Finds the first item after the specified index that matches the specified string.
            </summary>
            <param name="str">The String to search for.</param>
            <param name="startIndex">The zero-based index of the item before the first item to be searched. Set to -1 to search from the beginning of the control.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found, or 0 if the s parameter specifies Empty.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.GetItemHeight(System.Int32)">
            <summary>
            Returns the height of an item in the KryptonCheckedListBox.
            </summary>
            <param name="index">The index of the item to return the height of.</param>
            <returns>The height, in pixels, of the item at the specified index.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.GetItemRectangle(System.Int32)">
            <summary>
            Returns the bounding rectangle for an item in the KryptonCheckedListBox.
            </summary>
            <param name="index">The zero-based index of item whose bounding rectangle you want to return.</param>
            <returns>A Rectangle that represents the bounding rectangle for the specified item.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.GetSelected(System.Int32)">
            <summary>
            Returns a value indicating whether the specified item is selected.
            </summary>
            <param name="index">The zero-based index of the item that determines whether it is selected.</param>
            <returns>true if the specified item is currently selected in the KryptonCheckedListBox; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.IndexFromPoint(System.Drawing.Point)">
            <summary>
            Returns the zero-based index of the item at the specified coordinates.
            </summary>
            <param name="p">A Point object containing the coordinates used to obtain the item index.</param>
            <returns>The zero-based index of the item found at the specified coordinates; returns ListBox.NoMatches if no match is found.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.IndexFromPoint(System.Int32,System.Int32)">
            <summary>
            Returns the zero-based index of the item at the specified coordinates.
            </summary>
            <param name="x">The x-coordinate of the location to search.</param>
            <param name="y">The y-coordinate of the location to search.</param>
            <returns>The zero-based index of the item found at the specified coordinates; returns ListBox.NoMatches if no match is found.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.SetSelected(System.Int32,System.Boolean)">
            <summary>
            Selects or clears the selection for the specified item in a KryptonCheckedListBox. 
            </summary>
            <param name="index">The zero-based index of the item in a KryptonCheckedListBox to select or clear the selection for.</param>
            <param name="value">true to select the specified item; otherwise, false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.GetItemText(System.Object)">
            <summary>
            Returns the text representation of the specified item.
            </summary>
            <param name="item">The object from which to get the contents to display.</param>
            <returns>If the DisplayMember property is not specified, the value returned by GetItemText is the value of the item's ToString method. Otherwise, the method returns the string value of the member specified in the DisplayMember property for the object specified in the item parameter.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.BeginUpdate">
            <summary>
            Maintains performance while items are added to the ListBox one at a time by preventing the control from drawing until the EndUpdate method is called.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.EndUpdate">
            <summary>
            Resumes painting the ListBox control after painting is suspended by the BeginUpdate method. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.SetFixedState(System.Boolean)">
            <summary>
            Sets the fixed state of the control.
            </summary>
            <param name="active">Should the control be fixed as active.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.IsActive">
            <summary>
            Gets a value indicating if the input control is active.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.Focus">
            <summary>
            Sets input focus to the control.
            </summary>
            <returns>true if the input focus request was successful; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.Select">
            <summary>
            Activates the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.ForceControlLayout">
            <summary>
            Force the layout logic to size and position the controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnSelectedValueChanged(System.EventArgs)">
            <summary>
            Raises the SelectedValueChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)">
            <summary>
            Raises the ItemCheck event.
            </summary>
            <param name="e">An ItemCheckEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)">
            <summary>
            Raises the Format event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnFormatInfoChanged(System.EventArgs)">
            <summary>
            Raises the FormatInfoChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnFormatStringChanged(System.EventArgs)">
            <summary>
            Raises the FormatStringChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnFormattingEnabledChanged(System.EventArgs)">
            <summary>
            Raises the FormattingEnabledChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the KryptonTextBox.
            </summary>
            <returns>A new instance of Control.ControlCollection assigned to the control.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnPaletteChanged(System.EventArgs)">
            <summary>
            Raises the PaletteChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnPaletteNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the BackColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnBackgroundImageChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageLayoutChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnForeColorChanged(System.EventArgs)">
            <summary>
            Raises the ForeColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the PaddingChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnTabStopChanged(System.EventArgs)">
            <summary>
            Raises the TabStop event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnCausesValidationChanged(System.EventArgs)">
            <summary>
            Raises the CausesValidationChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">An PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">An PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckedListBox.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonListBox">
            <summary>
            Provide a ListBox with Krypton styling applied.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.InternalListBox.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the InternalListBox.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.InternalListBox.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the InternalListBox.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.InternalListBox.#ctor(ComponentFactory.Krypton.Toolkit.KryptonListBox)">
            <summary>
            Initialize a new instance of the InternalListBox class.
            </summary>
            <param name="kryptonListBox">Reference to owning control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.InternalListBox.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.InternalListBox.Recreate">
            <summary>
            Recreate the window handle.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.InternalListBox.ViewDrawPanel">
            <summary>
            Gets access to the contained view draw panel instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.InternalListBox.MouseIndex">
            <summary>
            Gets the item index the mouse is over.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.InternalListBox.MouseOver">
            <summary>
            Gets and sets if the mouse is currently over the combo box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.InternalListBox.DrawMode">
            <summary>
            Gets and sets the drawing mode of the checked list box.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.InternalListBox.RefreshItemSizes">
            <summary>
            Force the remeasure of items so they are sized correctly.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.InternalListBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.InternalListBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.InternalListBox.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.InternalListBox.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.DataSourceChanged">
            <summary>
            Occurs when the value of the DataSource property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.DisplayMemberChanged">
            <summary>
            Occurs when the value of the DisplayMember property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.Format">
            <summary>
            Occurs when the property of a control is bound to a data value. 
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.FormatInfoChanged">
            <summary>
            Occurs when the value of the FormatInfo property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.FormatStringChanged">
            <summary>
            Occurs when the value of the FormatString property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.FormattingEnabledChanged">
            <summary>
            Occurs when the value of the FormattingEnabled property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.SelectedValueChanged">
            <summary>
            Occurs when the value of the SelectedValue property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.SelectedIndexChanged">
            <summary>
            Occurs when the value of the SelectedIndex property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.ValueMemberChanged">
            <summary>
            Occurs when the value of the ValueMember property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.BackColorChanged">
            <summary>
            Occurs when the value of the BackColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.BackgroundImageChanged">
            <summary>
            Occurs when the value of the BackgroundImage property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.BackgroundImageLayoutChanged">
            <summary>
            Occurs when the value of the BackgroundImageLayout property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.ForeColorChanged">
            <summary>
            Occurs when the value of the ForeColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.PaddingChanged">
            <summary>
            Occurs when the value of the MouseClick property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.Paint">
            <summary>
            Occurs when the value of the MouseClick property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.TextChanged">
            <summary>
            Occurs when the value of the TextChanged property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListBox.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.#ctor">
            <summary>
            Initialize a new instance of the KryptonListBox class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.ListBox">
            <summary>
            Gets access to the contained ListBox instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.ContainedControl">
            <summary>
            Gets access to the contained input control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.Text">
            <summary>
            Gets or sets the text for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.SelectedIndex">
            <summary>
            Gets or sets the zero-based index of the currently selected item in a KryptonListBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.SelectedValue">
            <summary>
            Gets the value of the selected item in the list control, or selects the item in the list control that contains the specified value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.SelectedIndices">
            <summary>
            Gets a collection that contains the zero-based indexes of all currently selected items in the KryptonListBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.SelectedItem">
            <summary>
            Gets or sets the currently selected item in the KryptonListBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.SelectedItems">
            <summary>
            Gets a collection containing the currently selected items in the KryptonListBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.TopIndex">
            <summary>
            Gets or sets the index of the first visible item in the KryptonListBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.ItemStyle">
            <summary>
            Gets and sets the item style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.HorizontalExtent">
            <summary>
            Gets or sets the width by which the horizontal scroll bar of a KryptonListBox can scroll. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.HorizontalScrollbar">
            <summary>
            Gets or sets a value indicating whether a horizontal scroll bar is displayed in the control. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.ScrollAlwaysVisible">
            <summary>
            Gets or sets a value indicating whether the vertical scroll bar is shown at all times. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.SelectionMode">
            <summary>
            Gets or sets the selection mode of the KryptonListBox control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.Sorted">
            <summary>
            Gets or sets a value indicating whether the items in the KryptonListBox are sorted alphabetically.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.ValueMember">
            <summary>
            Gets and sets the value member.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.DataSource">
            <summary>
            Gets and sets the list that this control will use to gets its items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.DisplayMember">
            <summary>
            Gets and sets the property to display for the items in this control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.Items">
            <summary>
            Gets the items of the KryptonListBox. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.FormatString">
            <summary>
            Gets or sets the format specifier characters that indicate how a value is to be displayed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.FormattingEnabled">
            <summary>
            Gets or sets if this property is true, the value of FormatString is used to convert the value of DisplayMember into a value that can be displayed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.BackStyle">
            <summary>
            Gets and sets the background style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.BorderStyle">
            <summary>
            Gets and sets the border style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.OverrideFocus">
            <summary>
            Gets access to the item appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.StateCommon">
            <summary>
            Gets access to the common appearance entries that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.StateDisabled">
            <summary>
            Gets access to the disabled appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.StateNormal">
            <summary>
            Gets access to the normal appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.StateActive">
            <summary>
            Gets access to the active appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.StateTracking">
            <summary>
            Gets access to the hot tracking item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.StatePressed">
            <summary>
            Gets access to the pressed item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.StateCheckedNormal">
            <summary>
            Gets access to the normal checked item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.StateCheckedTracking">
            <summary>
            Gets access to the hot tracking checked item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.StateCheckedPressed">
            <summary>
            Gets access to the pressed checked item appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.AlwaysActive">
            <summary>
            Gets and sets Determines if the control is always active or only when the mouse is over the control or has focus.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.ClearSelected">
            <summary>
            Unselects all items in the KryptonListBox.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.FindString(System.String)">
            <summary>
            Finds the first item in the list box that starts with the specified string.
            </summary>
            <param name="str">The String to search for.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.FindString(System.String,System.Int32)">
            <summary>
            Finds the first item after the given index which starts with the given string. The search is not case sensitive.
            </summary>
            <param name="str">The String to search for.</param>
            <param name="startIndex">The zero-based index of the item before the first item to be searched. Set to -1 to search from the beginning of the control.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found, or 0 if the s parameter specifies Empty.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.FindStringExact(System.String)">
            <summary>
            Finds the first item in the list box that matches the specified string.
            </summary>
            <param name="str">The String to search for.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.FindStringExact(System.String,System.Int32)">
            <summary>
            Finds the first item after the specified index that matches the specified string.
            </summary>
            <param name="str">The String to search for.</param>
            <param name="startIndex">The zero-based index of the item before the first item to be searched. Set to -1 to search from the beginning of the control.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found, or 0 if the s parameter specifies Empty.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.GetItemHeight(System.Int32)">
            <summary>
            Returns the height of an item in the KryptonListBox.
            </summary>
            <param name="index">The index of the item to return the height of.</param>
            <returns>The height, in pixels, of the item at the specified index.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.GetItemRectangle(System.Int32)">
            <summary>
            Returns the bounding rectangle for an item in the KryptonListBox.
            </summary>
            <param name="index">The zero-based index of item whose bounding rectangle you want to return.</param>
            <returns>A Rectangle that represents the bounding rectangle for the specified item.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.GetSelected(System.Int32)">
            <summary>
            Returns a value indicating whether the specified item is selected.
            </summary>
            <param name="index">The zero-based index of the item that determines whether it is selected.</param>
            <returns>true if the specified item is currently selected in the KryptonListBox; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.IndexFromPoint(System.Drawing.Point)">
            <summary>
            Returns the zero-based index of the item at the specified coordinates.
            </summary>
            <param name="p">A Point object containing the coordinates used to obtain the item index.</param>
            <returns>The zero-based index of the item found at the specified coordinates; returns ListBox.NoMatches if no match is found.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.IndexFromPoint(System.Int32,System.Int32)">
            <summary>
            Returns the zero-based index of the item at the specified coordinates.
            </summary>
            <param name="x">The x-coordinate of the location to search.</param>
            <param name="y">The y-coordinate of the location to search.</param>
            <returns>The zero-based index of the item found at the specified coordinates; returns ListBox.NoMatches if no match is found.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.SetSelected(System.Int32,System.Boolean)">
            <summary>
            Selects or clears the selection for the specified item in a KryptonListBox. 
            </summary>
            <param name="index">The zero-based index of the item in a KryptonListBox to select or clear the selection for.</param>
            <param name="value">true to select the specified item; otherwise, false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.GetItemText(System.Object)">
            <summary>
            Returns the text representation of the specified item.
            </summary>
            <param name="item">The object from which to get the contents to display.</param>
            <returns>If the DisplayMember property is not specified, the value returned by GetItemText is the value of the item's ToString method. Otherwise, the method returns the string value of the member specified in the DisplayMember property for the object specified in the item parameter.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.BeginUpdate">
            <summary>
            Maintains performance while items are added to the ListBox one at a time by preventing the control from drawing until the EndUpdate method is called.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.EndUpdate">
            <summary>
            Resumes painting the ListBox control after painting is suspended by the BeginUpdate method. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.SetFixedState(System.Boolean)">
            <summary>
            Sets the fixed state of the control.
            </summary>
            <param name="active">Should the control be fixed as active.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.IsActive">
            <summary>
            Gets a value indicating if the input control is active.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.Focus">
            <summary>
            Sets input focus to the control.
            </summary>
            <returns>true if the input focus request was successful; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.Select">
            <summary>
            Activates the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.ForceControlLayout">
            <summary>
            Force the layout logic to size and position the controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnDataSourceChanged(System.EventArgs)">
            <summary>
            Raises the DataSourceChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnDisplayMemberChanged(System.EventArgs)">
            <summary>
            Raises the DisplayMemberChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnValueMemberChanged(System.EventArgs)">
            <summary>
            Raises the ValueMemberChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnSelectedValueChanged(System.EventArgs)">
            <summary>
            Raises the SelectedValueChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)">
            <summary>
            Raises the Format event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnFormatInfoChanged(System.EventArgs)">
            <summary>
            Raises the FormatInfoChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnFormatStringChanged(System.EventArgs)">
            <summary>
            Raises the FormatStringChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnFormattingEnabledChanged(System.EventArgs)">
            <summary>
            Raises the FormattingEnabledChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the KryptonListBox.
            </summary>
            <returns>A new instance of Control.ControlCollection assigned to the control.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnPaletteChanged(System.EventArgs)">
            <summary>
            Raises the PaletteChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnPaletteNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the BackColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnBackgroundImageChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageLayoutChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnForeColorChanged(System.EventArgs)">
            <summary>
            Raises the ForeColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the PaddingChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnTabStopChanged(System.EventArgs)">
            <summary>
            Raises the TabStop event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnCausesValidationChanged(System.EventArgs)">
            <summary>
            Raises the CausesValidationChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">An PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListBox.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListBox.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonColorButton">
            <summary>
            Combines color button functionality with the styling features of the Krypton Toolkit.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonColorButton.DropDown">
            <summary>
            Occurs when the drop down portion of the color button is pressed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonColorButton.KryptonCommandChanged">
            <summary>
            Occurs when the value of the KryptonCommand property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonColorButton.SelectedColorChanged">
            <summary>
            Occurs when the SelectedColor property changes value.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonColorButton.TrackingColor">
            <summary>
            Occurs when the user is tracking over a color.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonColorButton.MoreColors">
            <summary>
            Occurs when the user selects the more colors option.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.#ctor">
            <summary>
            Initialize a new instance of the KryptonColorButton class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.AutoSize">
            <summary>
            Gets and sets the automatic resize of the control to fit contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.Text">
            <summary>
            Gets or sets the text associated with this control. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.ContextMenuStrip">
            <summary>
            Gets or sets the ContextMenuStrip associated with this control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu to show when right clicked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.MaxRecentColors">
            <summary>
            Gets and sets the maximum number of recent colors to store and display.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.VisibleThemes">
            <summary>
            Gets and sets the visible state of the themes color set.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.VisibleStandard">
            <summary>
            Gets and sets the visible state of the standard color set.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.VisibleRecent">
            <summary>
            Gets and sets the visible state of the recent color set.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.VisibleNoColor">
            <summary>
            Gets and sets the visible state of the no color menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.VisibleMoreColors">
            <summary>
            Gets and sets the visible state of the more colors menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.AutoRecentColors">
            <summary>
            Gets and sets if the recent colors should be automatically updated.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.SchemeThemes">
            <summary>
            Gets and sets the color scheme for the themes color set.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.SchemeStandard">
            <summary>
            Gets and sets the color scheme for the standard color set.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.SelectedColor">
            <summary>
            Gets and sets the selected color.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.EmptyBorderColor">
            <summary>
            Gets and sets the selected color block when selected color is empty.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.SelectedRect">
            <summary>
            Gets and sets the selected color drawing rectangle.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.ButtonOrientation">
            <summary>
            Gets and sets the visual orientation of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.DropDownPosition">
            <summary>
            Gets and sets the position of the drop arrow within the color button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.DropDownOrientation">
            <summary>
            Gets and sets the orientation of the drop arrow within the color button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.Splitter">
            <summary>
            Gets and sets if the color button works as a splitter or as a drop down.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.ButtonStyle">
            <summary>
            Gets and sets the color button style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.Values">
            <summary>
            Gets access to the color button content.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.Images">
            <summary>
            Gets access to the image value overrides.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.Strings">
            <summary>
            Gets access to the context menu display strings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.StateCommon">
            <summary>
            Gets access to the common color button appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.StateDisabled">
            <summary>
            Gets access to the disabled color button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.StateNormal">
            <summary>
            Gets access to the normal color button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.StateTracking">
            <summary>
            Gets access to the hot tracking color button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.StatePressed">
            <summary>
            Gets access to the pressed color button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.OverrideDefault">
            <summary>
            Gets access to the normal color button appearance when default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.OverrideFocus">
            <summary>
            Gets access to the color button appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.DialogResult">
            <summary>
            Gets or sets the value returned to the parent form when the color button is clicked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.NotifyDefault(System.Boolean)">
            <summary>
            Notifies a control that it is the default color button so that its appearance and behavior is adjusted accordingly. 
            </summary>
            <param name="value">true if the control should behave as a default color button; otherwise false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.PerformClick">
            <summary>
            Generates a Click event for the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.PerformDropDown">
            <summary>
            Generates a DropDown event for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether an ampersand is included in the text of the control. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.ImeMode">
            <summary>
            Determins the IME status of the object when selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.DefaultImeMode">
            <summary>
            Gets the default Input Method Editor (IME) mode supported by this control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processsed; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.ContextMenuClosed">
            <summary>
            Called when a context menu has just been closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.OnDropDown(ComponentFactory.Krypton.Toolkit.ContextPositionMenuArgs)">
            <summary>
            Raises the DropDown event.
            </summary>
            <param name="e">An ContextPositionMenuArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.OnSelectedColorChanged(System.Drawing.Color)">
            <summary>
            Raises the SelectedColorChanged event.
            </summary>
            <param name="selectedColor">New selected color.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.OnTrackingColor(ComponentFactory.Krypton.Toolkit.ColorEventArgs)">
            <summary>
            Raises the TrackingColor event.
            </summary>
            <param name="e">An ColorEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.OnMoreColors(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the MoreColors event.
            </summary>
            <param name="e">An CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.OnKryptonCommandChanged(System.EventArgs)">
            <summary>
            Raises the KryptonCommandChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.SetStyles(ComponentFactory.Krypton.Toolkit.ButtonStyle)">
            <summary>
            Update the state objects to reflect the new color button style.
            </summary>
            <param name="buttonStyle">New color button style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorButton.CreateButtonValues(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates a values storage object appropriate for control.
            </summary>
            <returns>Set of color button values.</returns>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorButton.ViewDrawButton">
            <summary>
            Gets access to the view element for the color button.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDropButton">
            <summary>
            Combines drop down button functionality with the styling features of the Krypton Toolkit.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDropButton.DropDown">
            <summary>
            Occurs when the drop down portion of the button is pressed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDropButton.KryptonCommandChanged">
            <summary>
            Occurs when the value of the KryptonCommand property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.#ctor">
            <summary>
            Initialize a new instance of the KryptonDropButton class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.AutoSize">
            <summary>
            Gets and sets the automatic resize of the control to fit contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.Text">
            <summary>
            Gets or sets the text associated with this control. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.ButtonOrientation">
            <summary>
            Gets and sets the visual orientation of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.DropDownPosition">
            <summary>
            Gets and sets the position of the drop arrow within the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.DropDownOrientation">
            <summary>
            Gets and sets the orientation of the drop arrow within the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.Splitter">
            <summary>
            Gets and sets if the button works as a splitter or as a drop down.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.ButtonStyle">
            <summary>
            Gets and sets the button style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.Values">
            <summary>
            Gets access to the button content.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.Images">
            <summary>
            Gets access to the image value overrides.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.StateCommon">
            <summary>
            Gets access to the common button appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.StateDisabled">
            <summary>
            Gets access to the disabled button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.StateNormal">
            <summary>
            Gets access to the normal button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.StateTracking">
            <summary>
            Gets access to the hot tracking button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.StatePressed">
            <summary>
            Gets access to the pressed button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.OverrideDefault">
            <summary>
            Gets access to the normal button appearance when default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.OverrideFocus">
            <summary>
            Gets access to the button appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.DialogResult">
            <summary>
            Gets or sets the value returned to the parent form when the button is clicked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.NotifyDefault(System.Boolean)">
            <summary>
            Notifies a control that it is the default button so that its appearance and behavior is adjusted accordingly. 
            </summary>
            <param name="value">true if the control should behave as a default button; otherwise false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.PerformClick">
            <summary>
            Generates a Click event for the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.PerformDropDown">
            <summary>
            Generates a DropDown event for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether an ampersand is included in the text of the control. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.ImeMode">
            <summary>
            Determins the IME status of the object when selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.DefaultImeMode">
            <summary>
            Gets the default Input Method Editor (IME) mode supported by this control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processsed; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.ContextMenuClosed">
            <summary>
            Called when a context menu has just been closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.OnDropDown(ComponentFactory.Krypton.Toolkit.ContextPositionMenuArgs)">
            <summary>
            Raises the DropDown event.
            </summary>
            <param name="e">An ContextPositionMenuArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.OnKryptonCommandChanged(System.EventArgs)">
            <summary>
            Raises the KryptonCommandChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.SetStyles(ComponentFactory.Krypton.Toolkit.ButtonStyle)">
            <summary>
            Update the state objects to reflect the new button style.
            </summary>
            <param name="buttonStyle">New button style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDropButton.CreateButtonValues(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates a values storage object appropriate for control.
            </summary>
            <returns>Set of button values.</returns>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDropButton.ViewDrawButton">
            <summary>
            Gets access to the view element for the button.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonListItem">
            <summary>
            Krypton object used inside list controls for providing content values.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonListItem.PropertyChanged">
            <summary>
            Occurs when a property has changed value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListItem.#ctor">
            <summary>
            Initialize a new instance of the KryptonListItem class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListItem.#ctor(System.String)">
            <summary>
            Initialize a new instance of the KryptonListItem class.
            </summary>
            <param name="shortText">Initial short text value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListItem.#ctor(System.String,System.String)">
            <summary>
            Initialize a new instance of the KryptonListItem class.
            </summary>
            <param name="shortText">Initial short text value.</param>
            <param name="longText">Initial long text value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListItem.#ctor(System.String,System.String,System.Drawing.Image)">
            <summary>
            Initialize a new instance of the KryptonListItem class.
            </summary>
            <param name="shortText">Initial short text value.</param>
            <param name="longText">Initial long text value.</param>
            <param name="image">Initial image value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListItem.#ctor(System.String,System.String,System.Drawing.Image,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the KryptonListItem class.
            </summary>
            <param name="shortText">Initial short text value.</param>
            <param name="longText">Initial long text value.</param>
            <param name="image">Initial image value.</param>
            <param name="imageTransparentColor">Initial transparent image color.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListItem.ToString">
            <summary>
            Gets the string representation of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListItem.ShortText">
            <summary>
            Gets and sets the short text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListItem.LongText">
            <summary>
            Gets and sets the long text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListItem.Image">
            <summary>
            Gets and sets the image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListItem.ImageTransparentColor">
            <summary>
            Gets and sets the image transparent color.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonListItem.Tag">
            <summary>
            Gets and sets user-defined data associated with the object.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListItem.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListItem.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListItem.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListItem.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonListItem.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">A PropertyChangedEventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox">
            <summary>
            Provide a MaskedTextBox with Krypton styling applied.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.InternalMaskedTextBox.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the InternalMaskedTextBox.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.InternalMaskedTextBox.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the InternalMaskedTextBox.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.InternalMaskedTextBox.#ctor(ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox)">
            <summary>
            Initialize a new instance of the InternalMaskedTextBox class.
            </summary>
            <param name="kryptonMaskedTextBox">Reference to owning control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.InternalMaskedTextBox.MouseOver">
            <summary>
            Gets and sets if the mouse is currently over the combo box.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.InternalMaskedTextBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.InternalMaskedTextBox.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.InternalMaskedTextBox.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.MaskedTextBoxButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecAny instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.MaskedTextBoxButtonSpecCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox)">
            <summary>
            Initialize a new instance of the MaskedTextBoxButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.HideSelectionChanged">
            <summary>
            Occurs when the value of the HideSelection property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.TextAlignChanged">
            <summary>
            Occurs when the value of the TextAlign property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ModifiedChanged">
            <summary>
            Occurs when the value of the Modified property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ReadOnlyChanged">
            <summary>
            Occurs when the value of the ReadOnly property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.MaskChanged">
            <summary>
            Occurs when the value of the Mask property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.IsOverwriteModeChanged">
            <summary>
            Occurs when the value of the IsOverwriteMode property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.MaskInputRejected">
            <summary>
            Occurs when the input character or text does not comply with the mask specification.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.TypeValidationCompleted">
            <summary>
            Occurs when the validating type object has completed parsing the input text.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.BackColorChanged">
            <summary>
            Occurs when the value of the BackColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.BackgroundImageChanged">
            <summary>
            Occurs when the value of the BackgroundImage property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.BackgroundImageLayoutChanged">
            <summary>
            Occurs when the value of the BackgroundImageLayout property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ForeColorChanged">
            <summary>
            Occurs when the value of the ForeColor property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.#ctor">
            <summary>
            Initialize a new instance of the KryptonMaskedTextBox class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ToString">
            <summary>
            Overridden. Returns a string that represents the current masked text box. This method overrides ToString.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.TabStop">
            <summary>
            Gets and sets if the control is in the tab chain.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.InRibbonDesignMode">
            <summary>
            Gets and sets if the control is in the ribbon design mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.MaskedTextBox">
            <summary>
            Gets access to the contained MaskedTextBox instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ContainedControl">
            <summary>
            Gets access to the contained input control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Focused">
            <summary>
            Gets a value indicating whether the control has input focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.AutoSize">
            <summary>
            Gets and sets a value indicating if the control is automatically sized.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Text">
            <summary>
            Gets and sets the text associated with the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Modified">
            <summary>
            Gets a value indicating whether the contents have changed since last last.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.SelectedText">
            <summary>
            Gets and sets the selected text within the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.SelectionLength">
            <summary>
            Gets and sets the selection length for the selected area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.SelectionStart">
            <summary>
            Gets and sets the starting point of text selected in the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.TextLength">
            <summary>
            Gets the length of text in the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.IsOverwriteMode">
            <summary>
            Gets a value that specifies whether new user input overwrites existing input.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.MaskCompleted">
            <summary>
            Gets a value indicating whether all required inputs have been entered into the input mask.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.MaskedTextProvider">
            <summary>
            Gets a clone of the mask provider associated with this instance of the masked text box control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.MaskFull">
            <summary>
            Gets a value indicating whether all required and optional inputs have been entered into the input mask.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.MaxLength">
            <summary>
            Gets or sets the maximum number of characters that can be entered into the edit control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ValidatingType">
            <summary>
            Gets or sets the data type used to verify the data input by the user.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether mnemonics will fire button spec buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.AlwaysActive">
            <summary>
            Gets and sets Determines if the control is always active or only when the mouse is over the control or has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.TextAlign">
            <summary>
            Gets or sets how the text should be aligned for edit controls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.PromptChar">
            <summary>
            Indicates the character used as the placeholder.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.AllowPromptAsInput">
            <summary>
            Gets or sets a value indicating whether PromptChar can be entered as valid data by the user.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.AsciiOnly">
            <summary>
            Gets or sets a value indicating whether the MaskedTextBox control accepts characters outside of the ASCII character set.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.BeepOnError">
            <summary>
            Gets or sets a value indicating whether the masked text box control raises the system beep for each user key stroke that it rejects.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Culture">
            <summary>
            Gets or sets the culture information associated with the masked text box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.CutCopyMaskFormat">
            <summary>
            Gets or sets a value that determines whether literals and prompt characters are copied to the clipboard.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.HidePromptOnLeave">
            <summary>
            Gets or sets a value indicating whether the prompt characters in the input mask are hidden when the masked text box loses focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.InsertKeyMode">
            <summary>
            Gets or sets the text insertion mode of the masked text box control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Mask">
            <summary>
            Gets or sets the input mask to use at run time. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.HideSelection">
            <summary>
            Gets or sets a value indicating that the selection should be hidden when the edit control loses focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the text in the edit control can be changed or not.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.RejectInputOnFirstFailure">
            <summary>
            Gets or sets a value indicating whether the parsing of user input should stop after the first invalid character is reached.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ResetOnPrompt">
            <summary>
            Gets or sets a value that determines how an input character that matches the prompt character should be handled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ResetOnSpace">
            <summary>
            Gets or sets a value that determines how a space input character should be handled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.SkipLiterals">
            <summary>
            Gets or sets a value indicating whether the user is allowed to reenter literal values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.TextMaskFormat">
            <summary>
            Gets or sets a value that determines whether literals and prompt characters are included in the formatted string.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ShortcutsEnabled">
            <summary>
            Gets or sets a value indicating whether shortcuts defined for the control are enabled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.PasswordChar">
            <summary>
            Gets or sets a the character to display for password input for single-line edit controls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.UseSystemPasswordChar">
            <summary>
            Gets or sets a value indicating if the text in the edit control should appear as the default password character.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.InputControlStyle">
            <summary>
            Gets and sets the input control style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be displayed for button specs.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.StateCommon">
            <summary>
            Gets access to the common textbox appearance entries that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.StateDisabled">
            <summary>
            Gets access to the disabled textbox appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.StateNormal">
            <summary>
            Gets access to the normal textbox appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.StateActive">
            <summary>
            Gets access to the active textbox appearance entries.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.AppendText(System.String)">
            <summary>
            Appends text to the current text of a rich text box.
            </summary>
            <param name="text">The text to append to the current contents of the text box.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Clear">
            <summary>
            Clears all text from the text box control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Copy">
            <summary>
            Copies the current selection in the text box to the Clipboard.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Cut">
            <summary>
            Moves the current selection in the text box to the Clipboard.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Paste">
            <summary>
            Replaces the current selection in the text box with the contents of the Clipboard.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the control.
            </summary>
            <param name="start">The position of the first character in the current text selection within the text box.</param>
            <param name="length">The number of characters to select.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.SelectAll">
            <summary>
            Selects all text in the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.DeselectAll">
            <summary>
            Specifies that the value of the SelectionLength property is zero so that no characters are selected in the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.GetCharFromPosition(System.Drawing.Point)">
            <summary>
            Retrieves the character that is closest to the specified location within the control.
            </summary>
            <param name="pt">The location from which to seek the nearest character.</param>
            <returns>The character at the specified location.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.GetCharIndexFromPosition(System.Drawing.Point)">
            <summary>
            Retrieves the index of the character nearest to the specified location.
            </summary>
            <param name="pt">The location to search.</param>
            <returns>The zero-based character index at the specified location.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.GetPositionFromCharIndex(System.Int32)">
            <summary>
            Retrieves the location within the control at the specified character index.
            </summary>
            <param name="index">The index of the character for which to retrieve the location.</param>
            <returns>The location of the specified character.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.SetFixedState(System.Boolean)">
            <summary>
            Sets the fixed state of the control.
            </summary>
            <param name="active">Should the control be fixed as active.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ValidateText">
            <summary>
            Converts the user input string to an instance of the validating type.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ToolTipManager">
            <summary>
            Gets access to the ToolTipManager used for displaying tool tips.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.IsActive">
            <summary>
            Gets a value indicating if the input control is active.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Focus">
            <summary>
            Sets input focus to the control.
            </summary>
            <returns>true if the input focus request was successful; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.Select">
            <summary>
            Activates the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Get the preferred size of the control based on a proposed size.
            </summary>
            <param name="proposedSize">Starting size proposed by the caller.</param>
            <returns>Calculated preferred size.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.DisplayRectangle">
            <summary>
            Gets the rectangle that represents the display area of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.SetLayoutDisplayPadding(System.Windows.Forms.Padding)">
            <summary>
            Override the display padding for the layout fill.
            </summary>
            <param name="padding">Display padding value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.DesignerComponentFromPoint(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.DesignerMouseLeave">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.ForceControlLayout">
            <summary>
            Force the layout logic to size and position the controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnTextAlignChanged(System.EventArgs)">
            <summary>
            Raises the TextAlignChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnHideSelectionChanged(System.EventArgs)">
            <summary>
            Raises the HideSelectionChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnModifiedChanged(System.EventArgs)">
            <summary>
            Raises the ModifiedChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnMaskChanged(System.EventArgs)">
            <summary>
            Raises the MaskChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)">
            <summary>
            Raises the IsOverwriteModeChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnMaskInputRejected(System.Windows.Forms.MaskInputRejectedEventArgs)">
            <summary>
            Raises the MaskInputRejected event.
            </summary>
            <param name="e">An MaskInputRejectedEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnTypeValidationCompleted(System.Windows.Forms.TypeValidationEventArgs)">
            <summary>
            Raises the TypeValidationCompleted event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the KryptonTextBox.
            </summary>
            <returns>A new instance of Control.ControlCollection assigned to the control.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the BackColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnBackgroundImageChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageLayoutChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnForeColorChanged(System.EventArgs)">
            <summary>
            Raises the ForeColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
            <param name="x">The new Left property value of the control.</param>
            <param name="y">The new Top property value of the control.</param>
            <param name="width">The new Width property value of the control.</param>
            <param name="height">The new Height property value of the control.</param>
            <param name="specified">A bitwise combination of the BoundsSpecified values.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the PaddingChanged event.
            </summary>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnTabStopChanged(System.EventArgs)">
            <summary>
            Raises the TabStop event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.OnCausesValidationChanged(System.EventArgs)">
            <summary>
            Raises the CausesValidationChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonMaskedTextBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualContextMenuDTP">
            <summary>
            Specialized version of the visual context menu that knows about the KryptonDateTimePicker drop down button.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenuDTP.#ctor(ComponentFactory.Krypton.Toolkit.KryptonContextMenu,ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteMode,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRedirectContextMenu,ComponentFactory.Krypton.Toolkit.KryptonContextMenuCollection,System.Boolean,System.Boolean,System.Drawing.Rectangle)">
            <summary>
             Initialize a new instance of the VisualContextMenuDTP class.
            </summary>
            <param name="contextMenu">Originating context menu instance.</param>
            <param name="palette">Local palette setting to use initially.</param>
            <param name="paletteMode">Palette mode setting to use initially.</param>
            <param name="redirector">Redirector used for obtaining palette values.</param>
            <param name="redirectorImages">Redirector used for obtaining images.</param>
            <param name="items">Collection of context menu items to be displayed.</param>
            <param name="enabled">Enabled state of the context menu.</param>
            <param name="keyboardActivated">Was the context menu activate by a keyboard action.</param>
            <param name="dropScreenRect">Screen rectangle of the drop down button.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenuDTP.DoesMouseDownGetEaten(System.Windows.Forms.Message,System.Drawing.Point)">
            <summary>
            Should the mouse down be eaten when the tracking has been ended.
            </summary>
            <param name="m">Original message.</param>
            <param name="pt">Screen coordinates point.</param>
            <returns>True to eat message; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualContainerControl">
            <summary>
            Extend the visual container control base class with the ISupportInitializeNotification interface.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.VisualContainerControl.Initialized">
            <summary>
            Occurs when the control is initialized.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControl.#ctor">
            <summary>
            Initialize a new instance of the VisualContainerControl class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControl.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControl.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControl.IsInitialized">
            <summary>
            Gets a value indicating if the control is initialized.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControl.IsInitializing">
            <summary>
            Gets a value indicating if the control is initialized.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControl.OnInitialized(System.EventArgs)">
            <summary>
            Raises the Initialized event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase">
            <summary>
            Base class used for implementation of actual container controls.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.PaletteChanged">
            <summary>
            Occurs when the palette changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.#ctor">
            <summary>
            Initialize a new instance of the VisualContainerControlBase class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.ContextMenuStrip">
            <summary>
            Gets or sets the ContextMenuStrip associated with this control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu to show when right clicked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.CheckPerformLayout(System.Boolean)">
            <summary>
            Check if the layout is dirty and if so perform the layout now.
            </summary>
            <param name="viewLayout">Shoudl the view be layed out as well.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.PaletteMode">
            <summary>
            Gets or sets the palette to be applied.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.ResetPaletteMode">
            <summary>
            Resets the PaletteMode property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.Palette">
            <summary>
            Gets and sets the custom palette implementation.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.ResetPalette">
            <summary>
            Resets the Palette property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.Renderer">
            <summary>
            Gets access to the current renderer.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.CreateToolStripRenderer">
            <summary>
            Create a tool strip renderer appropriate for the current renderer/palette pair.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.BackgroundImage">
            <summary>
            Gets or sets the background image displayed in the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.GetViewManager">
            <summary>
            Gets the ViewManager instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.GetResolvedPalette">
            <summary>
            Gets the resolved palette to actually use when drawing.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.DirtyPaletteCounter">
            <summary>
            Gets and sets the dirty palette counter.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.KryptonResetCounters">
            <summary>
            Reset the internal counters.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.KryptonLayoutCounter">
            <summary>
            Gets the number of layout cycles performed since last reset.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.KryptonPaintCounter">
            <summary>
            Gets the number of paint cycles performed since last reset.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.ViewManager">
            <summary>
            Gets and sets the ViewManager instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.Redirector">
            <summary>
            Gets access to the palette redirector.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.NeedPaintDelegate">
            <summary>
            Gets access to the need paint delegate.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.NeedPaintPaletteDelegate">
            <summary>
            Gets access to the need paint palette delegate.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.ForceViewLayout">
            <summary>
            Force the control to perform a krypton layout to calculate size and positioning.
            </summary>
            <returns>True if layout was p</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.InvokeLayout">
            <summary>
            Request a layout be performed before any painting occurs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.MarkLayoutDirty">
            <summary>
            Mark the layout as being dirty and needing to be performed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.NeedTransparentPaint">
            <summary>
            Gets a value indicating if transparent paint is needed
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.PaintBackground(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Rectangle)">
            <summary>
            Perform background painting with the provided default values.
            </summary>
            <param name="g">Graphics reference for drawing.</param>
            <param name="backBrush">Brush to use when painting.</param>
            <param name="backRect">Client area to paint.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.CanProcessMnemonic">
            <summary>
            Gets a value indicating is processing of mnemonics should be allowed.
            </summary>
            <returns>True to allow; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.EvalTransparentPaint">
            <summary>
            Work out if this control needs to paint transparent areas.
            </summary>
            <returns>True if paint required; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.EvalInvokePaint">
            <summary>
            Work out if this control needs to use Invoke to force a repaint.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.TransparentParent">
            <summary>
            Gets the control reference that is the parent for transparent drawing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Processes a notification from palette storage of a button spec change.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnPaletteChanged(System.EventArgs)">
            <summary>
            Raises the PaletteChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnPaletteNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.CreateRedirector">
            <summary>
            Create the redirector instance.
            </summary>
            <returns>PaletteRedirect derived class.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Raises the RightToLeftChanged event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnGlobalPaletteChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the global palette has been changed.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.OnUserPreferenceChanged(System.Object,Microsoft.Win32.UserPreferenceChangedEventArgs)">
            <summary>
            Occurs when a user preference has changed.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Event details.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContainerControlBase.ContextMenuClosed">
            <summary>
            Called when a context menu has just been closed.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualSimpleBase">
            <summary>
            Extends the control base with some common changes relevant to krypton simple controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualSimpleBase.#ctor">
            <summary>
            Initialize a new instance of the VisualSimpleBase class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualSimpleBase.AutoSizeMode">
            <summary>
            Gets and sets the auto size mode.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualSimpleBase.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Get the preferred size of the control based on a proposed size.
            </summary>
            <param name="proposedSize">Starting size proposed by the caller.</param>
            <returns>Calculated preferred size.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualSimpleBase.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualSimpleBase.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualSimpleBase.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualControlBase">
            <summary>
            Base class used for implementation of actual controls.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.VisualControlBase.PaletteChanged">
            <summary>
            Occurs when the palette changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.#ctor">
            <summary>
            Initialize a new instance of the VisualControl class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.ContextMenuStrip">
            <summary>
            Gets or sets the ContextMenuStrip associated with this control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu to show when right clicked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.CheckPerformLayout">
            <summary>
            Check if the layout is dirty and if so perform the layout now.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.PaletteMode">
            <summary>
            Gets or sets the palette to be applied.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.ResetPaletteMode">
            <summary>
            Resets the PaletteMode property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.Palette">
            <summary>
            Gets and sets the custom palette implementation.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.ResetPalette">
            <summary>
            Resets the Palette property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.Renderer">
            <summary>
            Gets access to the current renderer.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.CreateToolStripRenderer">
            <summary>
            Create a tool strip renderer appropriate for the current renderer/palette pair.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.BackgroundImage">
            <summary>
            Gets or sets the background image displayed in the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.GetViewManager">
            <summary>
            Gets the ViewManager instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.GetResolvedPalette">
            <summary>
            Gets the resolved palette to actually use when drawing.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.DirtyPaletteCounter">
            <summary>
            Gets and sets the dirty palette counter.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.AttachGlobalEvents">
            <summary>
            Attach the control to global events.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.UnattachGlobalEvents">
            <summary>
            Attach the control to global events.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.KryptonResetCounters">
            <summary>
            Reset the internal counters.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.KryptonLayoutCounter">
            <summary>
            Gets the number of layout cycles performed since last reset.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.KryptonPaintCounter">
            <summary>
            Gets the number of paint cycles performed since last reset.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.ViewFromPoint(System.Drawing.Point)">
            <summary>
            Gets the view associated with the provided client location.
            </summary>
            <param name="pt">Point to lookup.</param>
            <returns>ViewBase associated with the point.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.ViewManager">
            <summary>
            Gets and sets the ViewManager instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.Redirector">
            <summary>
            Gets access to the palette redirector.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.NeedPaintDelegate">
            <summary>
            Gets access to the need paint delegate.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.NeedPaintPaletteDelegate">
            <summary>
            Gets access to the need paint palette delegate.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.ForceViewLayout">
            <summary>
            Force the control to perform a krypton layout to calculate size and positioning.
            </summary>
            <returns>True if layout was p</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.InvokeLayout">
            <summary>
            Request a layout be performed before any painting occurs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.MarkLayoutDirty">
            <summary>
            Mark the layout as being dirty and needing to be performed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.NeedTransparentPaint">
            <summary>
            Gets a value indicating if transparent paint is needed
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.PaintBackground(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Rectangle)">
            <summary>
            Perform background painting with the provided default values.
            </summary>
            <param name="g">Graphics reference for drawing.</param>
            <param name="backBrush">Brush to use when painting.</param>
            <param name="backRect">Client area to paint.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.CanProcessMnemonic">
            <summary>
            Gets a value indicating is processing of mnemonics should be allowed.
            </summary>
            <returns>True to allow; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.EvalTransparentPaint">
            <summary>
            Work out if this control needs to paint transparent areas.
            </summary>
            <returns>True if paint required; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.EvalInvokePaint">
            <summary>
            Work out if this control needs to use Invoke to force a repaint.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlBase.TransparentParent">
            <summary>
            Gets the control reference that is the parent for transparent drawing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Processes a notification from palette storage of a button spec change.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnPaletteChanged(System.EventArgs)">
            <summary>
            Raises the PaletteChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnPaletteNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.CreateRedirector">
            <summary>
            Create the redirector instance.
            </summary>
            <returns>PaletteRedirect derived class.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.UpdateGlobalEvents(System.Boolean)">
            <summary>
            Update global event attachments.
            </summary>
            <param name="attach">True if attaching; otherwise false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Raises the RightToLeftChanged event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnGlobalPaletteChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the global palette has been changed.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.OnUserPreferenceChanged(System.Object,Microsoft.Win32.UserPreferenceChangedEventArgs)">
            <summary>
            Occurs when a user preference has changed.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Event details.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Processes a command key.
            </summary>
            <param name="msg">A Message, passed by reference, that represents the window message to process.</param>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
            <returns>True is handled; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlBase.ContextMenuClosed">
            <summary>
            Called when a context menu has just been closed.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.DateTimeNullableConverter">
            <summary>
            Add DBNull/Null conversion for date time types.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DateTimeNullableConverter.#ctor">
            <summary>
            Initialize a new instance of the DateTimeNullableConverter class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DateTimeNullableConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedButtonConverter.#ctor">
            <summary>
            Initialize a new instance of the KryptonCheckedButtonConverter class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckedButtonConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
            Returns a value indicating whether a particular value can be added to the standard values collection.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides an additional context.</param>
            <param name="value">The value to check.</param>
            <returns></returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemBase">
            <summary>
            Base class that all menu types must derive from and implement.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemBase.PropertyChanged">
            <summary>
            Occurs when a property has changed value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemBase.#ctor">
            <summary>
            Initialize a new instance of the KryptonContextMenuItem class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemBase.ItemChildCount">
            <summary>
            Returns the number of child menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemBase.Item(System.Int32)">
            <summary>
            Returns the indexed child menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemBase.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemBase.GenerateView(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,System.Object,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,System.Boolean,System.Boolean)">
            <summary>
            Returns a view appropriate for this item based on the object it is inside.
            </summary>
            <param name="provider">Provider of context menu information.</param>
            <param name="parent">Owning object reference.</param>
            <param name="columns">Containing columns.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
            <param name="imageColumn">Draw an image background for the item images.</param>
            <returns>ViewBase that is the root of the view hierachy being added.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemBase.Tag">
            <summary>
            Gets and sets user-defined data associated with the object.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemBase.Visible">
            <summary>
            Gets and sets if the item is visible in the context menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">A PropertyChangedEventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuSeparator">
            <summary>
            Provide a context menu separator.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuSeparator.#ctor">
            <summary>
            Initialize a new instance of the KryptonContextMenuSeparator class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuSeparator.ToString">
            <summary>
            Returns a description of the instance.
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuSeparator.ItemChildCount">
            <summary>
            Returns the number of child menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuSeparator.Item(System.Int32)">
            <summary>
            Returns the indexed child menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuSeparator.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuSeparator.GenerateView(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,System.Object,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,System.Boolean,System.Boolean)">
            <summary>
            Returns a view appropriate for this item based on the object it is inside.
            </summary>
            <param name="provider">Provider of context menu information.</param>
            <param name="parent">Owning object reference.</param>
            <param name="columns">Containing columns.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
            <param name="imageColumn">Draw an image background for the item images.</param>
            <returns>ViewBase that is the root of the view hierachy being added.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuSeparator.Horizontal">
            <summary>
            Gets and sets if the separator is a horizontal or vertical break.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuSeparator.StateNormal">
            <summary>
            Gets access to the separator instance specific appearance values.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox">
            <summary>
            Provide a RichTextBox with Krypton styling applied.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.InternalRichTextBox.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the InternalComboBox.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.InternalRichTextBox.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the InternalComboBox.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.InternalRichTextBox.#ctor(ComponentFactory.Krypton.Toolkit.KryptonRichTextBox)">
            <summary>
            Initialize a new instance of the InternalTextBox class.
            </summary>
            <param name="kryptonRichTextBox">Reference to owning control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.InternalRichTextBox.MouseOver">
            <summary>
            Gets and sets if the mouse is currently over the combo box.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.InternalRichTextBox.Print(System.Int32,System.Int32,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Print the specified range of characters.
            </summary>
            <param name="charFrom">Start character.</param>
            <param name="charTo">End character.</param>
            <param name="gr">Graphics instance to use.</param>
            <param name="bounds">Drawing bounds.</param>
            <returns>Pointer to returned result.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.InternalRichTextBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.InternalRichTextBox.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.InternalRichTextBox.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.RichTextBoxButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecAny instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.RichTextBoxButtonSpecCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonRichTextBox)">
            <summary>
            Initialize a new instance of the RichTextBoxButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.AcceptsTabChanged">
            <summary>
            Occurs when the value of the AcceptsTab property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.HideSelectionChanged">
            <summary>
            Occurs when the value of the HideSelection property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ModifiedChanged">
            <summary>
            Occurs when the value of the Modified property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.MultilineChanged">
            <summary>
            Occurs when the value of the Multiline property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ReadOnlyChanged">
            <summary>
            Occurs when the value of the ReadOnly property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionChanged">
            <summary>
            Occurs when the current selection has changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Protected">
            <summary>
            Occurs when the user takes an action that would change a protected range of text.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.LinkClicked">
            <summary>
            Occurs when a hyperlink in the text is clicked.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.HScroll">
            <summary>
            Occurs when the horizontal scroll bar is clicked.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.VScroll">
            <summary>
            Occurs when the vertical scroll bar is clicked.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.BackColorChanged">
            <summary>
            Occurs when the value of the BackColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.BackgroundImageChanged">
            <summary>
            Occurs when the value of the BackgroundImage property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.BackgroundImageLayoutChanged">
            <summary>
            Occurs when the value of the BackgroundImageLayout property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ForeColorChanged">
            <summary>
            Occurs when the value of the ForeColor property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.#ctor">
            <summary>
            Initialize a new instance of the KryptonRichTextBox class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.TabStop">
            <summary>
            Gets and sets if the control is in the tab chain.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.InRibbonDesignMode">
            <summary>
            Gets and sets if the control is in the ribbon design mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.RichTextBox">
            <summary>
            Gets access to the contained RichTextBox instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ContainedControl">
            <summary>
            Gets access to the contained input control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Focused">
            <summary>
            Gets a value indicating whether the control has input focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.AllowDrop">
            <summary>
            Gets or sets the ability to drag/drop onto the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.AutoSize">
            <summary>
            Gets and sets a value indicating if the control is automatically sized.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Text">
            <summary>
            Gets and sets the text associated associated with the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.TextLength">
            <summary>
            Gets the length of text in the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.CanRedo">
            <summary>
            Gets and sets if the control can redo a previously undo operation.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.CanUndo">
            <summary>
            Gets a value indicating whether the user can undo the previous operation in a rich text box control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Modified">
            <summary>
            Gets a value indicating whether the contents have changed since last last.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.LanguageOption">
            <summary>
            Gets and sets the language option.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.RedoActionName">
            <summary>
            Gets and sets the name of the action to be redone.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.UndoActionName">
            <summary>
            Gets and sets the name of the action to be undone.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.RichTextShortcutsEnabled">
            <summary>
            Gets and sets if keyboard shortcuts are enabled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Rtf">
            <summary>
            Gets and sets the text in rich text format.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectedRtf">
            <summary>
            Gets and sets the selection portion of the rich text format.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectedText">
            <summary>
            Gets and sets the selected text within the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionAlignment">
            <summary>
            Gets and sets the alignment of the selection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionBackColor">
            <summary>
            Gets and sets the background color of the selected area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionBullet">
            <summary>
            Gets and sets the bullet indentation of the selected area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionCharOffset">
            <summary>
            Gets and sets the character offset of the selection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionColor">
            <summary>
            Gets and sets the text color of the selected area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionFont">
            <summary>
            Gets and sets the text font for the selected area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionHangingIndent">
            <summary>
            Gets and sets the hanging indent for the selected area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionIndent">
            <summary>
            Gets and sets the indent for the selected area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionLength">
            <summary>
            Gets and sets the selection length for the selected area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionProtected">
            <summary>
            Gets and sets the protected setting for the selected area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionRightIndent">
            <summary>
            Gets and sets the right indent for the selected area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionStart">
            <summary>
            Gets and sets the starting point of text selected in the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionTabs">
            <summary>
            Gets and sets the tab settings for the selected area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectionType">
            <summary>
            Gets and sets the type of selection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether mnemonics will fire button spec buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.AlwaysActive">
            <summary>
            Gets and sets Determines if the control is always active or only when the mouse is over the control or has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Lines">
            <summary>
            Gets or sets the lines of text in a multiline edit, as an array of String values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ScrollBars">
            <summary>
            Gets or sets, for multiline edit controls, which scroll bars will be shown for this control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.WordWrap">
            <summary>
            Indicates if lines are automatically word-wrapped for multiline edit controls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.RightMargin">
            <summary>
            Defines the right margin dimensions.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ShowSelectionMargin">
            <summary>
            Turns on/off the selection margin.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ZoomFactor">
            <summary>
            Defines the current scaling factor of the KryptonRichTextBox display; 1.0 is normal viewing.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Multiline">
            <summary>
            Gets and sets whether the text in the control can span more than one line.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.AcceptsTab">
            <summary>
            Gets or sets a value indicating if tab characters are accepted as input for multiline edit controls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.HideSelection">
            <summary>
            Gets or sets a value indicating that the selection should be hidden when the edit control loses focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.MaxLength">
            <summary>
            Gets or sets the maximum number of characters that can be entered into the edit control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.AutoWordSelection">
            <summary>
            Turns on/off automatic word selection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.BulletIndent">
            <summary>
            Defines the indent for bullets in the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.DetectUrls">
            <summary>
            Indicates whether URLs are automatically formatted as links.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.EnableAutoDragDrop">
            <summary>
            Enable drag/drop of text, pictures and other data.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the text in the edit control can be changed or not.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ShortcutsEnabled">
            <summary>
            Gets or sets a value indicating whether shortcuts defined for the control are enabled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.InputControlStyle">
            <summary>
            Gets and sets the input control style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be displayed for button specs.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.StateCommon">
            <summary>
            Gets access to the common textbox appearance entries that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.StateDisabled">
            <summary>
            Gets access to the disabled textbox appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.StateNormal">
            <summary>
            Gets access to the normal textbox appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.StateActive">
            <summary>
            Gets access to the active textbox appearance entries.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.AppendText(System.String)">
            <summary>
            Appends text to the current text of a rich text box.
            </summary>
            <param name="text">The text to append to the current contents of the text box.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Clear">
            <summary>
            Clears all text from the text box control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ClearUndo">
            <summary>
            Clears information about the most recent operation from the undo buffer of the rich text box. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Copy">
            <summary>
            Copies the current selection in the text box to the Clipboard.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Cut">
            <summary>
            Moves the current selection in the text box to the Clipboard.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.DeselectAll">
            <summary>
            Specifies that the value of the SelectionLength property is zero so that no characters are selected in the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.CanPaste(System.Windows.Forms.DataFormats.Format)">
            <summary>
            Determines whether you can paste information from the Clipboard in the specified data format.
            </summary>
            <param name="clipFormat">One of the System.Windows.Forms.DataFormats.Format values.</param>
            <returns>true if you can paste data from the Clipboard in the specified data format; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Find(System.String)">
            <summary>
            Searches the text in a RichTextBox control for a string.
            </summary>
            <param name="str">The text to locate in the control.</param>
            <returns>The location within the control where the search text was found or -1 if the search string is not found or an empty search string is specified in the str parameter.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Find(System.Char[])">
            <summary>
            Searches the text of a RichTextBox control for the first instance of a character from a list of characters.
            </summary>
            <param name="characterSet">The array of characters to search for.</param>
            <returns>The location within the control where the search characters were found or -1 if the search characters are not found or an empty search character set is specified in the char parameter.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Find(System.Char[],System.Int32)">
            <summary>
            Searches the text of a RichTextBox control, at a specific starting point, for the first instance of a character from a list of characters.
            </summary>
            <param name="characterSet">The array of characters to search for.</param>
            <param name="start">The location within the control's text at which to begin searching.</param>
            <returns>The location within the control where the search characters are found.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Find(System.String,System.Windows.Forms.RichTextBoxFinds)">
            <summary>
            Searches the text in a RichTextBox control for a string with specific options applied to the search.
            </summary>
            <param name="str">The text to locate in the control.</param>
            <param name="options">A bitwise combination of the RichTextBoxFinds values.</param>
            <returns>The location within the control where the search text was found.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Find(System.Char[],System.Int32,System.Int32)">
            <summary>
            Searches a range of text in a RichTextBox control for the first instance of a character from a list of characters.
            </summary>
            <param name="characterSet">The array of characters to search for.</param>
            <param name="start">The location within the control's text at which to begin searching.</param>
            <param name="end">The location within the control's text at which to end searching.</param>
            <returns>The location within the control where the search characters are found.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Find(System.String,System.Int32,System.Windows.Forms.RichTextBoxFinds)">
            <summary>
            Searches the text in a RichTextBox control for a string at a specific location within the control and with specific options applied to the search.
            </summary>
            <param name="str">The text to locate in the control.</param>
            <param name="start">The location within the control's text at which to begin searching.</param>
            <param name="options">A bitwise combination of the RichTextBoxFinds values.</param>
            <returns>The location within the control where the search text was found.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Find(System.String,System.Int32,System.Int32,System.Windows.Forms.RichTextBoxFinds)">
            <summary>
            Searches the text in a RichTextBox control for a string within a range of text within the control and with specific options applied to the search.
            </summary>
            <param name="str">The text to locate in the control.</param>
            <param name="start">The location within the control's text at which to begin searching.</param>
            <param name="end">The location within the control's text at which to end searching. This value must be equal to negative one (-1) or greater than or equal to the start parameter.</param>
            <param name="options">A bitwise combination of the RichTextBoxFinds values.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.GetCharFromPosition(System.Drawing.Point)">
            <summary>
            Retrieves the character that is closest to the specified location within the control.
            </summary>
            <param name="pt">The location from which to seek the nearest character.</param>
            <returns>The character at the specified location.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.GetCharIndexFromPosition(System.Drawing.Point)">
            <summary>
            Retrieves the index of the character nearest to the specified location.
            </summary>
            <param name="pt">The location to search.</param>
            <returns>The zero-based character index at the specified location.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.GetFirstCharIndexFromLine(System.Int32)">
            <summary>
            Retrieves the index of the first character of a given line.
            </summary>
            <param name="lineNumber">The line for which to get the index of its first character.</param>
            <returns>The zero-based character index in the specified line.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.GetFirstCharIndexOfCurrentLine">
            <summary>
            Retrieves the index of the first character of the current line.
            </summary>
            <returns>The zero-based character index in the current line.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.GetLineFromCharIndex(System.Int32)">
            <summary>
            Retrieves the line number from the specified character position within the text of the RichTextBox control.
            </summary>
            <param name="index">The character index position to search.</param>
            <returns>The zero-based line number in which the character index is located.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.GetPositionFromCharIndex(System.Int32)">
            <summary>
            Retrieves the location within the control at the specified character index.
            </summary>
            <param name="index">The index of the character for which to retrieve the location.</param>
            <returns>The location of the specified character.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.LoadFile(System.String)">
            <summary>
            Loads a rich text format (RTF) or standard ASCII text file into the RichTextBox control.
            </summary>
            <param name="path">The name and location of the file to load into the control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.LoadFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)">
            <summary>
            Loads the contents of an existing data stream into the RichTextBox control.
            </summary>
            <param name="data">A stream of data to load into the RichTextBox control.</param>
            <param name="fileType">One of the RichTextBoxStreamType values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.LoadFile(System.String,System.Windows.Forms.RichTextBoxStreamType)">
            <summary>
            Loads a specific type of file into the RichTextBox control.
            </summary>
            <param name="path">The name and location of the file to load into the control.</param>
            <param name="fileType">One of the RichTextBoxStreamType values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Paste">
            <summary>
            Replaces the current selection in the text box with the contents of the Clipboard.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Undo">
            <summary>
            Undoes the last edit operation in the text box.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Paste(System.Windows.Forms.DataFormats.Format)">
            <summary>
            Pastes the contents of the Clipboard in the specified Clipboard format.
            </summary>
            <param name="clipFormat">The Clipboard format in which the data should be obtained from the Clipboard.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Redo">
            <summary>
            Reapplies the last operation that was undone in the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SaveFile(System.String)">
            <summary>
            Saves the contents of the RichTextBox to a rich text format (RTF) file.
            </summary>
            <param name="path">The name and location of the file to save.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SaveFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)">
            <summary>
            Saves the contents of a RichTextBox control to an open data stream.
            </summary>
            <param name="data">The data stream that contains the file to save to.</param>
            <param name="fileType">One of the RichTextBoxStreamType values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SaveFile(System.String,System.Windows.Forms.RichTextBoxStreamType)">
            <summary>
            Saves the contents of the KryptonRichTextBox to a specific type of file.
            </summary>
            <param name="path">The name and location of the file to save.</param>
            <param name="fileType">One of the RichTextBoxStreamType values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ScrollToCaret">
            <summary>
            Scrolls the contents of the control to the current caret position.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the control.
            </summary>
            <param name="start">The position of the first character in the current text selection within the text box.</param>
            <param name="length">The number of characters to select.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SelectAll">
            <summary>
            Selects all text in the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SetFixedState(System.Boolean)">
            <summary>
            Sets the fixed state of the control.
            </summary>
            <param name="active">Should the control be fixed as active.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ToolTipManager">
            <summary>
            Gets access to the ToolTipManager used for displaying tool tips.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.IsActive">
            <summary>
            Gets a value indicating if the input control is active.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Focus">
            <summary>
            Sets input focus to the control.
            </summary>
            <returns>true if the input focus request was successful; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Select">
            <summary>
            Activates the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Get the preferred size of the control based on a proposed size.
            </summary>
            <param name="proposedSize">Starting size proposed by the caller.</param>
            <returns>Calculated preferred size.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.DisplayRectangle">
            <summary>
            Gets the rectangle that represents the display area of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.Print(System.Int32,System.Int32,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Print the specified range of characters.
            </summary>
            <param name="charFrom">Start character.</param>
            <param name="charTo">End character.</param>
            <param name="gr">Graphics instance to use.</param>
            <param name="bounds">Drawing bounds.</param>
            <returns>Pointer to returned result.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.SetLayoutDisplayPadding(System.Windows.Forms.Padding)">
            <summary>
            Override the display padding for the layout fill.
            </summary>
            <param name="padding">Display padding value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.DesignerComponentFromPoint(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.DesignerMouseLeave">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.ForceControlLayout">
            <summary>
            Force the layout logic to size and position the controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnAcceptsTabChanged(System.EventArgs)">
            <summary>
            Raises the AcceptsTabChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnHideSelectionChanged(System.EventArgs)">
            <summary>
            Raises the HideSelectionChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnModifiedChanged(System.EventArgs)">
            <summary>
            Raises the ModifiedChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnMultilineChanged(System.EventArgs)">
            <summary>
            Raises the MultilineChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnVScroll(System.EventArgs)">
            <summary>
            Raises the VScroll event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnHScroll(System.EventArgs)">
            <summary>
            Raises the HScroll event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnSelectionChanged(System.EventArgs)">
            <summary>
            Raises the SelectionChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnProtected(System.EventArgs)">
            <summary>
            Raises the Protected event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)">
            <summary>
            Raises the LinkClicked event.
            </summary>
            <param name="e">A LinkClickedEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the KryptonTextBox.
            </summary>
            <returns>A new instance of Control.ControlCollection assigned to the control.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the BackColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnBackgroundImageChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageLayoutChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnForeColorChanged(System.EventArgs)">
            <summary>
            Raises the ForeColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnTabStopChanged(System.EventArgs)">
            <summary>
            Raises the TabStop event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnCausesValidationChanged(System.EventArgs)">
            <summary>
            Raises the CausesValidationChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRichTextBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonComboBox">
            <summary>
            Provide a ComboBox with Krypton styling applied.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalPanel.#ctor(ComponentFactory.Krypton.Toolkit.KryptonComboBox)">
            <summary>
            Initialise a new instance of the InternalPanel class.
            </summary>
            <param name="kryptonComboBox">Reference to owning control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalPanel.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalPanel.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalComboBox.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the InternalComboBox.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalComboBox.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the InternalComboBox.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalComboBox.#ctor(ComponentFactory.Krypton.Toolkit.KryptonComboBox)">
            <summary>
            Initialize a new instance of the InternalComboBox class.
            </summary>
            <param name="kryptonComboBox">Reference to owning control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalComboBox.Dropped">
            <summary>
            Gets and sets if the combo box is currently dropped.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalComboBox.MouseOver">
            <summary>
            Gets and sets if the mouse is currently over the combo box.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalComboBox.ClearAppThemed">
            <summary>
            Reset the app themed setting so it is retested when next required.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalComboBox.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalComboBox.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalComboBox.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalComboBox.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalComboBox.OnFontChanged(System.EventArgs)">
            <summary>
            Raises the FontChanged event.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalComboBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalComboBox.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InternalComboBox.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SubclassEdit.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the InternalComboBox.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SubclassEdit.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the InternalComboBox.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SubclassEdit.#ctor(System.IntPtr,ComponentFactory.Krypton.Toolkit.KryptonComboBox)">
            <summary>
            Initialize a new instance of the SubclassEdit class.
            </summary>
            <param name="editControl">Handle of the Edit control to subclass.</param>
            <param name="kryptonComboBox">Reference to top level control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SubclassEdit.MouseOver">
            <summary>
            Gets and sets if the mouse is currently over the combo box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SubclassEdit.Visible">
            <summary>
            Sets the visible state of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SubclassEdit.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SubclassEdit.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SubclassEdit.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonComboBox.ComboBoxButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecAny instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.ComboBoxButtonSpecCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonComboBox)">
            <summary>
            Initialize a new instance of the ComboBoxButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.Initialized">
            <summary>
            Occurs when the control is initialized.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DropDown">
            <summary>
            Occurs when the drop-down portion of the KryptonComboBox is shown.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DropDownClosed">
            <summary>
            Indicates that the drop-down portion of the KryptonComboBox has closed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DropDownStyleChanged">
            <summary>
            Occurs when the value of the DropDownStyle property changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SelectedIndexChanged">
            <summary>
            Occurs when the value of the SelectedIndex property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SelectionChangeCommitted">
            <summary>
            Occurs when an item is chosen from the drop-down list and the drop-down list is closed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DataSourceChanged">
            <summary>
            Occurs when the value of the DataSource property changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DisplayMemberChanged">
            <summary>
            Occurs when the value of the DisplayMember property changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.Format">
            <summary>
            Occurs when the list format has changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.FormatInfoChanged">
            <summary>
            Occurs when the value of the FormatInfo property changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.FormatStringChanged">
            <summary>
            Occurs when the value of the FormatString property changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.FormattingEnabledChanged">
            <summary>
            Occurs when the value of the FormattingEnabled property changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SelectedValueChanged">
            <summary>
            Occurs when the value of the SelectedValue property changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.ValueMemberChanged">
            <summary>
            Occurs when the value of the ValueMember property changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.TextUpdate">
            <summary>
            Occurs when the KryptonComboBox text has changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.BackColorChanged">
            <summary>
            Occurs when the value of the BackColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.BackgroundImageChanged">
            <summary>
            Occurs when the value of the BackgroundImage property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.BackgroundImageLayoutChanged">
            <summary>
            Occurs when the value of the BackgroundImageLayout property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.ForeColorChanged">
            <summary>
            Occurs when the value of the ForeColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.Paint">
            <summary>
            Occurs when the value of the Paint property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonComboBox.PaddingChanged">
            <summary>
            Occurs when the value of the PaddingChanged property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.#ctor">
            <summary>
            Initialize a new instance of the KryptonComboBox class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.IsInitialized">
            <summary>
            Gets a value indicating if the control is initialized.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.IsInitializing">
            <summary>
            Gets a value indicating if the control is initialized.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.TabStop">
            <summary>
            Gets and sets if the control is in the tab chain.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InRibbonDesignMode">
            <summary>
            Gets and sets if the control is in the ribbon design mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.ComboBox">
            <summary>
            Gets access to the contained ComboBox instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.ContainedControl">
            <summary>
            Gets access to the contained input control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.Focused">
            <summary>
            Gets a value indicating whether the control has input focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.Text">
            <summary>
            Gets and sets the text associated associated with the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SelectedItem">
            <summary>
            Gets and sets the selected item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SelectedText">
            <summary>
            Gets and sets the text that is selected in the editable portion of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SelectedIndex">
            <summary>
            Gets and sets the selected index.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SelectedValue">
            <summary>
            Gets and sets the selected value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DroppedDown">
            <summary>
            Gets and sets a value indicating whether the control is displaying its drop-down portion.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.ValueMember">
            <summary>
            Gets and sets the value member.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DataSource">
            <summary>
            Gets and sets the list that this control will use to gets its items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DisplayMember">
            <summary>
            Gets and sets the property to display for the items in this control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.FormatInfo">
            <summary>
            Gets and sets the formatting provider.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SelectionLength">
            <summary>
            Gets and sets the number of characters selected in the editable portion of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SelectionStart">
            <summary>
            Gets and sets the starting index of selected text in the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether mnemonics will fire button spec buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.AlwaysActive">
            <summary>
            Gets and sets Determines if the control is always active or only when the mouse is over the control or has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DropDownStyle">
            <summary>
            Gets and sets the appearance and functionality of the KryptonComboBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DropDownHeight">
            <summary>
            Gets and sets the height, in pixels, of the drop down box in a KryptonComboBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DropDownWidth">
            <summary>
            Gets and sets the width, in pixels, of the drop down box in a KryptonComboBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.ItemHeight">
            <summary>
            Gets and sets the height, in pixels, of items in an owner-draw KryptomComboBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.MaxDropDownItems">
            <summary>
            Gets and sets the maximum number of entries to display in the drop-down list.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.MaxLength">
            <summary>
            Gets or sets the maximum number of characters that can be entered into the edit control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.Sorted">
            <summary>
            Gets or sets whether the items in the list portion of the KryptonComboBox are sorted.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.Items">
            <summary>
            Gets or sets the items in the KryptonComboBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.InputControlStyle">
            <summary>
            Gets and sets the input control style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.ItemStyle">
            <summary>
            Gets and sets the item style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DropButtonStyle">
            <summary>
            Gets and sets the drop button style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DropBackStyle">
            <summary>
            Gets and sets the drop button style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be displayed for button specs.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.AutoCompleteCustomSource">
            <summary>
            Gets or sets the StringCollection to use when the AutoCompleteSource property is set to CustomSource.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.AutoCompleteMode">
            <summary>
            Gets or sets the text completion behavior of the combobox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.AutoCompleteSource">
            <summary>
            Gets or sets the autocomplete source, which can be one of the values from AutoCompleteSource enumeration.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.FormatString">
            <summary>
            Gets or sets the format specifier characters that indicate how a value is to be displayed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.FormattingEnabled">
            <summary>
            Gets or sets if this property is true, the value of FormatString is used to convert the value of DisplayMember into a value that can be displayed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.StateCommon">
            <summary>
            Gets access to the common combobox appearance entries that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.StateDisabled">
            <summary>
            Gets access to the disabled combobox appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.StateNormal">
            <summary>
            Gets access to the normal combobox appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.StateActive">
            <summary>
            Gets access to the active combobox appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.StateTracking">
            <summary>
            Gets access to the tracking combobox appearance entries.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.FindString(System.String)">
            <summary>
            Finds the first item in the combo box that starts with the specified string.
            </summary>
            <param name="str">The String to search for.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.FindString(System.String,System.Int32)">
            <summary>
            Finds the first item after the given index which starts with the given string. The search is not case sensitive.
            </summary>
            <param name="str">The String to search for.</param>
            <param name="startIndex">The zero-based index of the item before the first item to be searched. Set to -1 to search from the beginning of the control.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found, or 0 if the s parameter specifies Empty.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.FindStringExact(System.String)">
            <summary>
            Finds the first item in the combo box that matches the specified string.
            </summary>
            <param name="str">The String to search for.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.FindStringExact(System.String,System.Int32)">
            <summary>
            Finds the first item after the specified index that matches the specified string.
            </summary>
            <param name="str">The String to search for.</param>
            <param name="startIndex">The zero-based index of the item before the first item to be searched. Set to -1 to search from the beginning of the control.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found, or 0 if the s parameter specifies Empty.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.GetItemHeight(System.Int32)">
            <summary>
            Returns the height of an item in the ComboBox.
            </summary>
            <param name="index">The index of the item to return the height of.</param>
            <returns>The height, in pixels, of the item at the specified index.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.GetItemText(System.Object)">
            <summary>
            Returns the text representation of the specified item.
            </summary>
            <param name="item">The object from which to get the contents to display.</param>
            <returns>If the DisplayMember property is not specified, the value returned by GetItemText is the value of the item's ToString method. Otherwise, the method returns the string value of the member specified in the DisplayMember property for the object specified in the item parameter.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the control.
            </summary>
            <param name="start">The position of the first character in the current text selection within the text box.</param>
            <param name="length">The number of characters to select.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SelectAll">
            <summary>
            Selects all text in the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.BeginUpdate">
            <summary>
            Maintains performance when items are added to the ComboBox one at a time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.EndUpdate">
            <summary>
            Resumes painting the ComboBox control after painting is suspended by the BeginUpdate method. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SetFixedState(System.Boolean)">
            <summary>
            Sets the fixed state of the control.
            </summary>
            <param name="active">Should the control be fixed as active.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.IsActive">
            <summary>
            Gets a value indicating if the input control is active.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.ToolTipManager">
            <summary>
            Gets access to the ToolTipManager used for displaying tool tips.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.Focus">
            <summary>
            Sets input focus to the control.
            </summary>
            <returns>true if the input focus request was successful; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.Select">
            <summary>
            Activates the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Get the preferred size of the control based on a proposed size.
            </summary>
            <param name="proposedSize">Starting size proposed by the caller.</param>
            <returns>Calculated preferred size.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DisplayRectangle">
            <summary>
            Gets the rectangle that represents the display area of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SetLayoutDisplayPadding(System.Windows.Forms.Padding)">
            <summary>
            Override the display padding for the layout fill.
            </summary>
            <param name="padding">Display padding value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Internal desing mode method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DesignerComponentFromPoint(System.Drawing.Point)">
            <summary>
            Internal desing mode method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DesignerMouseLeave">
            <summary>
            Internal desing mode method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.ForceControlLayout">
            <summary>
            Force the layout logic to size and position the controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnInitialized(System.EventArgs)">
            <summary>
            Raises the Initialized event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnTextUpdate(System.EventArgs)">
            <summary>
            Raises the TextUpdate event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnSelectionChangeCommitted(System.EventArgs)">
            <summary>
            Raises the SelectionChangeCommitted event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnDropDownStyleChanged(System.EventArgs)">
            <summary>
            Raises the DropDownStyleChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnDataSourceChanged(System.EventArgs)">
            <summary>
            Raises the DataSourceChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnDisplayMemberChanged(System.EventArgs)">
            <summary>
            Raises the DisplayMemberChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)">
            <summary>
            Raises the Format event.
            </summary>
            <param name="e">An ListControlConvertEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnFormatInfoChanged(System.EventArgs)">
            <summary>
            Raises the FormatInfoChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnFormatStringChanged(System.EventArgs)">
            <summary>
            Raises the FormatStringChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnFormattingEnabledChanged(System.EventArgs)">
            <summary>
            Raises the FormattingEnabledChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnSelectedValueChanged(System.EventArgs)">
            <summary>
            Raises the SelectedValueChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnValueMemberChanged(System.EventArgs)">
            <summary>
            Raises the ValueMemberChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnDropDownClosed(System.EventArgs)">
            <summary>
            Raises the DropDownClosed event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnDropDown(System.EventArgs)">
            <summary>
            Raises the DropDown event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the KryptonComboBox.
            </summary>
            <returns>A new instance of Control.ControlCollection assigned to the control.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the BackColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnBackgroundImageChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageLayoutChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnForeColorChanged(System.EventArgs)">
            <summary>
            Raises the ForeColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the PaddingChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnTabStopChanged(System.EventArgs)">
            <summary>
            Raises the TabStop event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnCausesValidationChanged(System.EventArgs)">
            <summary>
            Raises the CausesValidationChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">An PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnUserPreferenceChanged(System.Object,Microsoft.Win32.UserPreferenceChangedEventArgs)">
            <summary>
            Occurs when a user preference has changed.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Event details.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
            <param name="x">The new Left property value of the control.</param>
            <param name="y">The new Top property value of the control.</param>
            <param name="width">The new Width property value of the control.</param>
            <param name="height">The new Height property value of the control.</param>
            <param name="specified">A bitwise combination of the BoundsSpecified values.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonComboBox.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnPaletteChanged(System.EventArgs)">
            <summary>
            Raises the PaletteChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.OnPaletteNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonComboBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridView">
            <summary>
            Display text and images with the styling features of the Krypton Toolkit
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.ToolTipContent.#ctor(System.String)">
            <summary>
            Initialize a new instance of the ToolTipContent class.
            </summary>
            <param name="toolTipText">Text to show as a tooltip.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.ToolTipContent.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.ToolTipContent.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.ToolTipContent.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.ToolTipContent.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.PaletteChanged">
            <summary>
            Occurs when the palette changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridView class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.BackgroundColor">
            <summary>
            Gets or sets the background color of the DataGridView.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.BorderStyle">
            <summary>
            Gets or sets the border style for the DataGridView.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.CellBorderStyle">
            <summary>
            Gets the cell border style for the DataGridView.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.ColumnHeadersBorderStyle">
            <summary>
            Gets the border style applied to the column headers.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.ColumnHeadersDefaultCellStyle">
            <summary>
            Gets or sets the default column header style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.DefaultCellStyle">
            <summary>
            Gets or sets the default cell style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.EnableHeadersVisualStyles">
            <summary>
            Gets or sets the use of visual styles for headers.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.GridColor">
            <summary>
            Gets or sets the color of the grid lines separating the cells of the DataGridView. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.RowHeadersBorderStyle">
            <summary>
            Gets or sets the border style of the row header cells.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.RowHeadersDefaultCellStyle">
            <summary>
            Gets or sets the default row header style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.ShowCellToolTips">
            <summary>
            Indicates if tool tips are displayed when the mouse hovers over the cell.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.HideOuterBorders">
            <summary>
            Gets and sets a value determining if the outer borders of the grid cells are drawn.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.PaletteMode">
            <summary>
            Gets or sets the palette to be applied.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.ResetPaletteMode">
            <summary>
            Resets the PaletteMode property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.Palette">
            <summary>
            Gets and sets the custom palette implementation.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.ResetPalette">
            <summary>
            Resets the Palette property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.Renderer">
            <summary>
            Gets access to the current renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.StateCommon">
            <summary>
            Gets access to the common data grid view appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.StateDisabled">
            <summary>
            Gets access to the disabled data grid view appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.StateNormal">
            <summary>
            Gets access to the normal data grid view appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.StateTracking">
            <summary>
            Gets access to the tracking data grid view appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.StatePressed">
            <summary>
            Gets access to the pressed data grid view appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.StateSelected">
            <summary>
            Gets access to the selected data grid view appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.GridStyles">
            <summary>
            Gets access to the grid styles.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.GetCellTriple(System.Windows.Forms.DataGridViewElementStates,System.Int32,System.Int32,ComponentFactory.Krypton.Toolkit.IPaletteBack@,ComponentFactory.Krypton.Toolkit.IPaletteBorder@,ComponentFactory.Krypton.Toolkit.IPaletteContent@)">
            <summary>
            Recovers the back/border/content palettes to use for drawing the provided cell.
            </summary>
            <param name="state">State of the cell.</param>
            <param name="rowIndex">Row index of cell (-1 for row headers).</param>
            <param name="columnIndex">Column index of cell (-1 for cell headers).</param>
            <param name="paletteBack">IPaletteBack to be used for cell drawing.</param>
            <param name="paletteBorder">IPaletteBorder to be used for cell drawing.</param>
            <param name="paletteContent">IPaletteContent to be used for cell drawing.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.GetViewManager">
            <summary>
            Gets the ViewManager instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.GetResolvedPalette">
            <summary>
            Gets the resolved palette to actually use when drawing.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.ViewManager">
            <summary>
            Gets and sets the ViewManager instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.NeedPaintDelegate">
            <summary>
            Gets access to the need paint delegate.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.OnNeedResyncPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.NeedTransparentPaint">
            <summary>
            Gets a value indicating if transparent paint is needed
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.OnPaletteChanged(System.EventArgs)">
            <summary>
            Raises the PaletteChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.EvalTransparentPaint">
            <summary>
            Work out if this control needs to paint transparent areas.
            </summary>
            <returns>True if paint required; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.EvalInvokePaint">
            <summary>
            Work out if this control needs to use Invoke to force a repaint.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.TransparentParent">
            <summary>
            Gets the control reference that is the parent for transparent drawing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Processes a notification from palette storage of a button spec change.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.  
            </summary>
            <param name="pevent">An PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            Raises the CellMouseEnter event. 
            </summary>
            <param name="e">A DataGridViewCellEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>
            Raises the CellMouseMove event. 
            </summary>
            <param name="e">A DataGridViewCellMouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            Raises the CellMouseLeave event. 
            </summary>
            <param name="e">A DataGridViewCellEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>
            Raises the CellMouseDown event. 
            </summary>
            <param name="e">A DataGridViewCellEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>
            Raises the CellMouseUp event. 
            </summary>
            <param name="e">A DataGridViewCellEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)">
            <summary>
            Raises the EditingControlShowing event.
            </summary>
            <param name="e">A DataGridViewEditingControlShowingEventArgs that contains information about the editing control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
            <summary>
            Raises the CellPainting event.
            </summary>
            <param name="e">A DataGridViewCellPaintingEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Paints the background of the DataGridView.
            </summary>
            <param name="graphics">The Graphics used to paint the background.</param>
            <param name="clipBounds">A Rectangle that represents the area of the DataGridView that needs to be painted.</param>
            <param name="gridBounds">A Rectangle that represents the area in which cells are drawn.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs that contains the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.DataGridViewColumnSpecCollection">
            <summary>
            Collection for managing ButtonSpecAny instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DataGridViewColumnSpecCollection.#ctor(System.Object)">
            <summary>
            Initialize a new instance of the DataGridViewColumnSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.DataGridViewButtonSpecClickEventArgs">
            <summary>
            Event argument data for a data grid view buttons spec.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DataGridViewButtonSpecClickEventArgs.#ctor(System.Windows.Forms.DataGridViewColumn,System.Windows.Forms.DataGridViewCell,ComponentFactory.Krypton.Toolkit.ButtonSpecAny)">
            <summary>
            Initialize a new instance of the DataGridViewButtonSpecClickEventArgs class.
            </summary>
            <param name="column">Reference to data grid view column.</param>
            <param name="cell">Reference to data grid view cell.</param>
            <param name="buttonSpec">Reference to button spec.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DataGridViewButtonSpecClickEventArgs.Column">
            <summary>
            Gets a reference to the column associated with the button spec.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DataGridViewButtonSpecClickEventArgs.Cell">
            <summary>
            Gets a reference to the cell that generated the click event.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DataGridViewButtonSpecClickEventArgs.ButtonSpec">
            <summary>
            Gets a reference to the button spec that is performing the click.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxColumn">
            <summary>
            Hosts a collection of KryptonDataGridViewTextBoxCell cells.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxColumn.ButtonSpecClick">
            <summary>
            Occurs when the user clicks a button spec.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxColumn.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewTextBoxColumn class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxColumn.ToString">
            <summary>
            Returns a String that represents the current Object.
            </summary>
            <returns>A String that represents the current Object.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxColumn.Clone">
            <summary>
            Create a cloned copy of the column.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxColumn.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxColumn.MaxInputLength">
            <summary>
            Gets or sets the maximum number of characters that can be entered into the text box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxColumn.SortMode">
            <summary>
            Gets or sets the sort mode for the column.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxColumn.CellTemplate">
            <summary>
            Gets or sets the template used to model cell appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxColumn.ButtonSpecs">
            <summary>
            Gets the collection of the button specifications.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxCell">
            <summary>
            Displays editable text information in a KryptonDataGridView control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxCell.#ctor">
            <summary>
            Constructor for the KryptonDataGridViewTextBoxCell cell type
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxCell.ToString">
            <summary>
            Returns a standard textual representation of the cell.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxCell.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxCell.EditType">
            <summary>
            Define the type of the cell's editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxCell.ValueType">
            <summary>
            Returns the type of the cell's Value property
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxCell.DetachEditingControl">
            <summary>
            DetachEditingControl gets called by the DataGridView control when the editing session is ending
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Custom implementation of the InitializeEditingControl function. This function is called by the DataGridView control 
            at the beginning of an editing session. It makes sure that the properties of the KryptonNumericUpDown editing control are 
            set according to the cell properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Custom implementation of the PositionEditingControl method called by the DataGridView control when it
            needs to relocate and/or resize the editing control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)">
            <summary>
            Customized implementation of the GetErrorIconBounds function in order to draw the potential 
            error icon next to the up/down buttons and not on top of them.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)">
            <summary>
            Custom implementation of the GetPreferredSize function.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxEditingControl">
            <summary>
            Defines the editing control for the DataGridViewTextBoxCell custom cell type.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxEditingControl.#ctor">
            <summary>
            Initalize a new instance of the KryptonDataGridViewTextBoxEditingControl class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxEditingControl.EditingControlDataGridView">
            <summary>
            Property which caches the grid that uses this editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxEditingControl.EditingControlFormattedValue">
            <summary>
            Property which represents the current formatted value of the editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxEditingControl.EditingControlRowIndex">
            <summary>
            Property which represents the row in which the editing control resides
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxEditingControl.EditingControlValueChanged">
            <summary>
            Property which indicates whether the value of the editing control has changed or not
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxEditingControl.EditingPanelCursor">
            <summary>
            Property which determines which cursor must be used for the editing panel, i.e. the parent of the editing control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxEditingControl.RepositionEditingControlOnValueChange">
            <summary>
            Property which indicates whether the editing control needs to be repositioned when its value changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Method called by the grid before the editing control is shown so it can adapt to the provided cell style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Method called by the grid on keystrokes to determine if the editing control is interested in the key or not.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            Returns the current value of the editing control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxEditingControl.PrepareEditingControlForEdit(System.Boolean)">
            <summary>
            Called by the grid to give the editing control a chance to prepare itself for the editing session.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxEditingControl.OnTextChanged(System.EventArgs)">
            <summary>
            Listen to the TextChanged notification to forward the change to the grid.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewTextBoxEditingControl.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>
            A few keyboard messages need to be forwarded to the inner textbox of the
            KryptonNumericUpDown control so that the first character pressed appears in it.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxColumn">
            <summary>
            Hosts a collection of KryptonDataGridViewCheckBoxCell cells.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxColumn.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewCheckBoxColumn class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxColumn.#ctor(System.Boolean)">
            <summary>
            Initialize a new instance of the KryptonDataGridViewCheckBoxColumn class.
            </summary>
            <param name="threeState">true to display check boxes with three states; false to display check boxes with two states.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxColumn.ToString">
            <summary>
            Returns a String that represents the current Object.
            </summary>
            <returns>A String that represents the current Object.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxColumn.CellTemplate">
            <summary>
            Gets or sets the template used to model cell appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxColumn.FalseValue">
            <summary>
            Gets or sets the underlying value corresponding to a cell value of false, which appears as an unchecked box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxColumn.IndeterminateValue">
            <summary>
            Gets or sets the underlying value corresponding to an indeterminate or a null reference (Nothing in Visual Basic) cell value, which appears as a disabled checkbox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxColumn.TrueValue">
            <summary>
            Gets or sets the underlying value corresponding to a cell value of true, which appears as a checked box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxColumn.ThreeState">
            <summary>
            Gets or sets a value indicating whether the hosted check box cells will allow three check states rather than two.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxCell">
            <summary>
            Displays a check box user interface (UI) to use in a DataGridView control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxCell.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewCheckBoxCell.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxCell.#ctor(System.Boolean)">
            <summary>
            Initialize a new instance of the KryptonDataGridViewCheckBoxCell.
            </summary>
            <param name="threeState">Enable binary or ternary operation.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)">
            <summary>
            Returns the bounding rectangle that encloses the cell's content area.
            </summary>
            <param name="graphics">Graphics instance for calculations.</param>
            <param name="cellStyle">Cell style to use in calculations.</param>
            <param name="rowIndex">The index of the cell's parent row.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)">
            <summary>
            This member overrides DataGridViewCell.GetPreferredSize. 
            </summary>
            <param name="graphics">Graphics instance used for calculations.</param>
            <param name="cellStyle">Individual cell style to apply.</param>
            <param name="rowIndex">Row of column being processed.</param>
            <param name="constraintSize">Maximum allowed size.</param>
            <returns>Requested ideal size for the cell.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewCheckBoxCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <summary>
            This member overrides DataGridViewCell.Paint.
            </summary>
            <param name="graphics">The Graphics used to paint the DataGridViewCell.</param>
            <param name="clipBounds">A Rectangle that represents the area of the DataGridView that needs to be repainted.</param>
            <param name="cellBounds">A Rectangle that contains the bounds of the DataGridViewCell that is being painted.</param>
            <param name="rowIndex">The row index of the cell that is being painted.</param>
            <param name="cellState">A bitwise combination of DataGridViewElementStates values that specifies the state of the cell.</param>
            <param name="value">The data of the DataGridViewCell that is being painted.</param>
            <param name="formattedValue">The formatted data of the DataGridViewCell that is being painted.</param>
            <param name="errorText">An error message that is associated with the cell.</param>
            <param name="cellStyle">A DataGridViewCellStyle that contains formatting and style information about the cell.</param>
            <param name="advancedBorderStyle">A DataGridViewAdvancedBorderStyle that contains border styles for the cell that is being painted.</param>
            <param name="paintParts">A bitwise combination of the DataGridViewPaintParts values that specifies which parts of the cell need to be painted.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonColumn">
            <summary>
            Hosts a collection of KryptonDataGridViewButtonCell cells.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonColumn.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewButtonColumn class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonColumn.ToString">
            <summary>
            Returns a String that represents the current Object.
            </summary>
            <returns>A String that represents the current Object.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonColumn.Clone">
            <summary>
            This member overrides DataGridViewButtonColumn.Clone.
            </summary>
            <returns>New object instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonColumn.CellTemplate">
            <summary>
            Gets or sets the template used to model cell appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonColumn.DefaultCellStyle">
            <summary>
            Gets or sets the column's default cell style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonColumn.Text">
            <summary>
            Gets or sets the default text displayed on the button cell.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonColumn.UseColumnTextForButtonValue">
            <summary>
            Gets or sets a value indicating whether the Text property value is displayed as the button text for cells in this column.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonColumn.ButtonStyle">
            <summary>
            Gets or sets a value indicating whether the Text property value is displayed as the button text for cells in this column.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonCell">
            <summary>
            Displays a button-like user interface (UI) for use in a DataGridView control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonCell.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewCheckBoxCell.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonCell.Clone">
            <summary>
            This member overrides KryptonDataGridViewButtonCell.Clone.
            </summary>
            <returns>New object instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonCell.ButtonStyle">
            <summary>
            Gets and sets the button style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)">
            <summary>
            Returns the bounding rectangle that encloses the cell's content area.
            </summary>
            <param name="graphics">Graphics instance for calculations.</param>
            <param name="cellStyle">Cell style to use in calculations.</param>
            <param name="rowIndex">The index of the cell's parent row.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)">
            <summary>
            This member overrides DataGridViewCell.GetPreferredSize. 
            </summary>
            <param name="graphics">Graphics instance used for calculations.</param>
            <param name="cellStyle">Individual cell style to apply.</param>
            <param name="rowIndex">Row of column being processed.</param>
            <param name="constraintSize">Maximum allowed size.</param>
            <returns>Requested ideal size for the cell.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewButtonCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <summary>
            This member overrides DataGridViewCell.Paint.
            </summary>
            <param name="graphics">The Graphics used to paint the DataGridViewCell.</param>
            <param name="clipBounds">A Rectangle that represents the area of the DataGridView that needs to be repainted.</param>
            <param name="cellBounds">A Rectangle that contains the bounds of the DataGridViewCell that is being painted.</param>
            <param name="rowIndex">The row index of the cell that is being painted.</param>
            <param name="cellState">A bitwise combination of DataGridViewElementStates values that specifies the state of the cell.</param>
            <param name="value">The data of the DataGridViewCell that is being painted.</param>
            <param name="formattedValue">The formatted data of the DataGridViewCell that is being painted.</param>
            <param name="errorText">An error message that is associated with the cell.</param>
            <param name="cellStyle">A DataGridViewCellStyle that contains formatting and style information about the cell.</param>
            <param name="advancedBorderStyle">A DataGridViewAdvancedBorderStyle that contains border styles for the cell that is being painted.</param>
            <param name="paintParts">A bitwise combination of the DataGridViewPaintParts values that specifies which parts of the cell need to be painted.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkColumn">
            <summary>
            Hosts a collection of KryptonDataGridViewLinkColumn cells.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkColumn.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewLinkColumn class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkColumn.ToString">
            <summary>
            Returns a String that represents the current Object.
            </summary>
            <returns>A String that represents the current Object.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkColumn.Clone">
            <summary>
            This member overrides DataGridViewButtonColumn.Clone.
            </summary>
            <returns>New object instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkColumn.CellTemplate">
            <summary>
            Gets or sets the template used to model cell appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkColumn.Text">
            <summary>
            Gets or sets the default text displayed on the link cell.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkColumn.LabelStyle">
            <summary>
            Gets or sets the default label style of link cell.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkColumn.LinkBehavior">
            <summary>
            Gets or sets a value that represents the behavior of links within cells in the column.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkColumn.TrackVisitedState">
            <summary>
            Gets or sets a value indicating whether the link changes color when it is visited.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkColumn.UseColumnTextForLinkValue">
            <summary>
            Gets or sets a value indicating whether the Text property value is displayed as the link text for cells in this column.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkCell">
            <summary>
            Displays a link label-like user interface (UI) for use in a DataGridView control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkCell.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewLinkCell.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkCell.LinkBehavior">
            <summary>
            Gets or sets a value that represents the behavior of links.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkCell.LabelStyle">
            <summary>
            Gets or sets a display style for drawing link cell.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)">
            <summary>
            Returns the bounding rectangle that encloses the cell's content area.
            </summary>
            <param name="graphics">Graphics instance for calculations.</param>
            <param name="cellStyle">Cell style to use in calculations.</param>
            <param name="rowIndex">The index of the cell's parent row.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)">
            <summary>
            This member overrides DataGridViewCell.GetPreferredSize. 
            </summary>
            <param name="graphics">Graphics instance used for calculations.</param>
            <param name="cellStyle">Individual cell style to apply.</param>
            <param name="rowIndex">Row of column being processed.</param>
            <param name="constraintSize">Maximum allowed size.</param>
            <returns>Requested ideal size for the cell.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewLinkCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <summary>
            This member overrides DataGridViewCell.Paint.
            </summary>
            <param name="graphics">The Graphics used to paint the DataGridViewCell.</param>
            <param name="clipBounds">A Rectangle that represents the area of the DataGridView that needs to be repainted.</param>
            <param name="cellBounds">A Rectangle that contains the bounds of the DataGridViewCell that is being painted.</param>
            <param name="rowIndex">The row index of the cell that is being painted.</param>
            <param name="cellState">A bitwise combination of DataGridViewElementStates values that specifies the state of the cell.</param>
            <param name="value">The data of the DataGridViewCell that is being painted.</param>
            <param name="formattedValue">The formatted data of the DataGridViewCell that is being painted.</param>
            <param name="errorText">An error message that is associated with the cell.</param>
            <param name="cellStyle">A DataGridViewCellStyle that contains formatting and style information about the cell.</param>
            <param name="advancedBorderStyle">A DataGridViewAdvancedBorderStyle that contains border styles for the cell that is being painted.</param>
            <param name="paintParts">A bitwise combination of the DataGridViewPaintParts values that specifies which parts of the cell need to be painted.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn">
            <summary>
            Hosts a collection of KryptonDataGridViewNumericUpDownCell cells.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.ButtonSpecClick">
            <summary>
            Occurs when the user clicks a button spec.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewNumericUpDownColumn class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.ToString">
            <summary>
            Returns a standard compact string representation of the column.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.Clone">
            <summary>
            Create a cloned copy of the column.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.CellTemplate">
            <summary>
            Represents the implicit cell that gets cloned when adding rows to the grid.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.ButtonSpecs">
            <summary>
            Gets the collection of the button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.DecimalPlaces">
            <summary>
            Replicates the DecimalPlaces property of the KryptonDataGridViewNumericUpDownCell cell type.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.Hexadecimal">
            <summary>
            Gets or sets wheather the numeric up-down should display its value in hexadecimal.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.Increment">
            <summary>
            Replicates the Increment property of the DataGridViewNumericUpDownCell cell type.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.ShouldSerializeIncrement">
            Indicates whether the Increment property should be persisted.
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.Maximum">
            <summary>
            Replicates the Maximum property of the KryptonDataGridViewNumericUpDownCell cell type.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.ShouldSerializeMaximum">
            Indicates whether the Maximum property should be persisted.
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.Minimum">
            <summary>
            Replicates the Minimum property of the KryptonDataGridViewNumericUpDownCell cell type.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.ShouldSerializeMinimum">
            Indicates whether the Maximum property should be persisted.
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.ThousandsSeparator">
            <summary>
            Replicates the ThousandsSeparator property of the KryptonDataGridViewNumericUpDownCell cell type.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownColumn.NumericUpDownCellTemplate">
            <summary>
            Small utility function that returns the template cell as a KryptonDataGridViewNumericUpDownCell
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell">
            <summary>
            Defines a KryptonNumericUpDown cell type for the KryptonDataGridView control
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.#ctor">
            <summary>
            Constructor for the DataGridViewNumericUpDownCell cell type
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.ToString">
            <summary>
            Returns a standard textual representation of the cell.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.EditType">
            <summary>
            Define the type of the cell's editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.DecimalPlaces">
            <summary>
            The DecimalPlaces property replicates the one from the KryptonNumericUpDown control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.Hexadecimal">
            <summary>
            Indicates wheather the numeric up-down should display its value in hexadecimal.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.Increment">
            <summary>
            The Increment property replicates the one from the KryptonNumericUpDown control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.Maximum">
            <summary>
            The Maximum property replicates the one from the KryptonNumericUpDown control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.Minimum">
            <summary>
            The Minimum property replicates the one from the KryptonNumericUpDown control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.ThousandsSeparator">
            <summary>
            The ThousandsSeparator property replicates the one from the KryptonNumericUpDown control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.ValueType">
            <summary>
            Returns the type of the cell's Value property
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.Clone">
            <summary>
            Clones a DataGridViewNumericUpDownCell cell, copies all the custom properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.DetachEditingControl">
            <summary>
            DetachEditingControl gets called by the DataGridView control when the editing session is ending
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Custom implementation of the InitializeEditingControl function. This function is called by the DataGridView control 
            at the beginning of an editing session. It makes sure that the properties of the KryptonNumericUpDown editing control are 
            set according to the cell properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.KeyEntersEditMode(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Custom implementation of the KeyEntersEditMode function. This function is called by the DataGridView control
            to decide whether a keystroke must start an editing session or not. In this case, a new session is started when
            a digit or negative sign key is hit.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Custom implementation of the PositionEditingControl method called by the DataGridView control when it
            needs to relocate and/or resize the editing control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)">
            <summary>
            Customized implementation of the GetErrorIconBounds function in order to draw the potential 
            error icon next to the up/down buttons and not on top of them.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            Customized implementation of the GetFormattedValue function in order to include the decimal and thousand separator
            characters in the formatted representation of the cell value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)">
            <summary>
            Custom implementation of the GetPreferredSize function.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl">
            <summary>
            Defines the editing control for the DataGridViewNumericUpDownCell custom cell type.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl.#ctor">
            <summary>
            Initalize a new instance of the KryptonDataGridViewNumericUpDownEditingControl class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl.EditingControlDataGridView">
            <summary>
            Property which caches the grid that uses this editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl.EditingControlFormattedValue">
            <summary>
            Property which represents the current formatted value of the editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl.EditingControlRowIndex">
            <summary>
            Property which represents the row in which the editing control resides
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl.EditingControlValueChanged">
            <summary>
            Property which indicates whether the value of the editing control has changed or not
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl.EditingPanelCursor">
            <summary>
            Property which determines which cursor must be used for the editing panel, i.e. the parent of the editing control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl.RepositionEditingControlOnValueChange">
            <summary>
            Property which indicates whether the editing control needs to be repositioned when its value changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Method called by the grid before the editing control is shown so it can adapt to the provided cell style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Method called by the grid on keystrokes to determine if the editing control is interested in the key or not.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            Returns the current value of the editing control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl.PrepareEditingControlForEdit(System.Boolean)">
            <summary>
            Called by the grid to give the editing control a chance to prepare itself for the editing session.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Listen to the KeyPress notification to know when the value changed, and notify the grid of the change.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl.OnValueChanged(System.EventArgs)">
            <summary>
            Listen to the ValueChanged notification to forward the change to the grid.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewNumericUpDownEditingControl.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>
            A few keyboard messages need to be forwarded to the inner textbox of the
            KryptonNumericUpDown control so that the first character pressed appears in it.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownColumn">
            <summary>
            Hosts a collection of KryptonDataGridViewDomainUpDownCell cells.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownColumn.ButtonSpecClick">
            <summary>
            Occurs when the user clicks a button spec.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownColumn.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewDomainUpDownColumn class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownColumn.ToString">
            <summary>
            Returns a standard compact string representation of the column.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownColumn.Clone">
            <summary>
            Create a cloned copy of the column.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownColumn.CellTemplate">
            <summary>
            Represents the implicit cell that gets cloned when adding rows to the grid.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownColumn.ButtonSpecs">
            <summary>
            Gets the collection of the button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownColumn.Items">
            <summary>
            Gets the collection of allowable items of the domain up down.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownColumn.DomainUpDownCellTemplate">
            <summary>
            Small utility function that returns the template cell as a KryptonDataGridViewDomainUpDownCell
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownCell">
            <summary>
            Defines a KryptonDomainUpDown cell type for the KryptonDataGridView control
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownCell.#ctor">
            <summary>
            Constructor for the KryptonDataGridViewDomainUpDownCell cell type
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownCell.ToString">
            <summary>
            Returns a standard textual representation of the cell.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownCell.EditType">
            <summary>
            Define the type of the cell's editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownCell.ValueType">
            <summary>
            Returns the type of the cell's Value property
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownCell.DetachEditingControl">
            <summary>
            DetachEditingControl gets called by the DataGridView control when the editing session is ending
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Custom implementation of the InitializeEditingControl function. This function is called by the DataGridView control 
            at the beginning of an editing session. It makes sure that the properties of the KryptonNumericUpDown editing control are 
            set according to the cell properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Custom implementation of the PositionEditingControl method called by the DataGridView control when it
            needs to relocate and/or resize the editing control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)">
            <summary>
            Customized implementation of the GetErrorIconBounds function in order to draw the potential 
            error icon next to the up/down buttons and not on top of them.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)">
            <summary>
            Custom implementation of the GetPreferredSize function.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownEditingControl">
            <summary>
            Defines the editing control for the DataGridViewDomainUpDownCell custom cell type.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownEditingControl.#ctor">
            <summary>
            Initalize a new instance of the KryptonDataGridViewDomainUpDownEditingControl class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownEditingControl.EditingControlDataGridView">
            <summary>
            Property which caches the grid that uses this editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownEditingControl.EditingControlFormattedValue">
            <summary>
            Property which represents the current formatted value of the editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownEditingControl.EditingControlRowIndex">
            <summary>
            Property which represents the row in which the editing control resides
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownEditingControl.EditingControlValueChanged">
            <summary>
            Property which indicates whether the value of the editing control has changed or not
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownEditingControl.EditingPanelCursor">
            <summary>
            Property which determines which cursor must be used for the editing panel, i.e. the parent of the editing control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownEditingControl.RepositionEditingControlOnValueChange">
            <summary>
            Property which indicates whether the editing control needs to be repositioned when its value changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Method called by the grid before the editing control is shown so it can adapt to the provided cell style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Method called by the grid on keystrokes to determine if the editing control is interested in the key or not.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            Returns the current value of the editing control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownEditingControl.PrepareEditingControlForEdit(System.Boolean)">
            <summary>
            Called by the grid to give the editing control a chance to prepare itself for the editing session.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownEditingControl.OnTextChanged(System.EventArgs)">
            <summary>
            Listen to the TextChanged notification to forward the change to the grid.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDomainUpDownEditingControl.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>
            A few keyboard messages need to be forwarded to the inner textbox of the
            KryptonNumericUpDown control so that the first character pressed appears in it.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn">
            <summary>
            Hosts a collection of KryptonDataGridViewComboBoxCell cells.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.ButtonSpecClick">
            <summary>
            Occurs when the user clicks a button spec.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewComboBoxColumn class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.ToString">
            <summary>
            Returns a standard compact string representation of the column.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.Clone">
            <summary>
            Create a cloned copy of the column.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.CellTemplate">
            <summary>
            Represents the implicit cell that gets cloned when adding rows to the grid.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.ButtonSpecs">
            <summary>
            Gets the collection of the button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.Items">
            <summary>
            Gets the collection of allowable items of the domain up down.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.DropDownStyle">
            <summary>
            Gets and sets the appearance and functionality of the KryptonComboBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.MaxDropDownItems">
            <summary>
            Gets and sets the maximum number of entries to display in the drop-down list.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.DropDownHeight">
            <summary>
            Gets and sets the height, in pixels, of the drop down box in a KryptonComboBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.DropDownWidth">
            <summary>
            Gets and sets the width, in pixels, of the drop down box in a KryptonComboBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.AutoCompleteCustomSource">
            <summary>
            Gets or sets the StringCollection to use when the AutoCompleteSource property is set to CustomSource.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.AutoCompleteMode">
            <summary>
            Gets or sets the text completion behavior of the combobox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.AutoCompleteSource">
            <summary>
            Gets or sets the autocomplete source, which can be one of the values from AutoCompleteSource enumeration.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.DisplayMember">
            <summary>
            Gets and sets the appearance and functionality of the KryptonComboBox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxColumn.ComboBoxCellTemplate">
            <summary>
            Small utility function that returns the template cell as a KryptonDataGridViewDomainUpDownCell
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell">
            <summary>
            Defines a KryptonComboBox cell type for the KryptonDataGridView control
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.#ctor">
            <summary>
            Constructor for the KryptonDataGridViewComboBoxCell cell type
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.ToString">
            <summary>
            Returns a standard textual representation of the cell.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.EditType">
            <summary>
            Define the type of the cell's editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.ValueType">
            <summary>
            Returns the type of the cell's Value property
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.Clone">
            <summary>
            Clones a DataGridViewComboBoxCell cell, copies all the custom properties.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.DropDownStyle">
            <summary>
            The DropDownStyle property replicates the one from the KryptonComboBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.MaxDropDownItems">
            <summary>
            The MaxDropDownItems property replicates the one from the KryptonComboBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.DropDownHeight">
            <summary>
            The DropDownHeight property replicates the one from the KryptonComboBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.DropDownWidth">
            <summary>
            The DropDownWidth property replicates the one from the KryptonComboBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.AutoCompleteMode">
            <summary>
            The AutoCompleteMode property replicates the one from the KryptonComboBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.AutoCompleteSource">
            <summary>
            The AutoCompleteSource property replicates the one from the KryptonComboBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.DisplayMember">
            <summary>
            The DisplayMember property replicates the one from the KryptonComboBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.ValueMember">
            <summary>
            The ValueMember property replicates the one from the KryptonComboBox control
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.DetachEditingControl">
            <summary>
            DetachEditingControl gets called by the DataGridView control when the editing session is ending
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Custom implementation of the InitializeEditingControl function. This function is called by the DataGridView control 
            at the beginning of an editing session. It makes sure that the properties of the KryptonNumericUpDown editing control are 
            set according to the cell properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Custom implementation of the PositionEditingControl method called by the DataGridView control when it
            needs to relocate and/or resize the editing control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)">
            <summary>
            Customized implementation of the GetErrorIconBounds function in order to draw the potential 
            error icon next to the up/down buttons and not on top of them.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)">
            <summary>
            Custom implementation of the GetPreferredSize function.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl">
            <summary>
            Defines the editing control for the DataGridViewComboBoxCell custom cell type.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl.#ctor">
            <summary>
            Initalize a new instance of the KryptonDataGridViewComboBoxEditingControl class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl.EditingControlDataGridView">
            <summary>
            Property which caches the grid that uses this editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl.EditingControlFormattedValue">
            <summary>
            Property which represents the current formatted value of the editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl.EditingControlRowIndex">
            <summary>
            Property which represents the row in which the editing control resides
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl.EditingControlValueChanged">
            <summary>
            Property which indicates whether the value of the editing control has changed or not
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl.EditingPanelCursor">
            <summary>
            Property which determines which cursor must be used for the editing panel, i.e. the parent of the editing control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl.RepositionEditingControlOnValueChange">
            <summary>
            Property which indicates whether the editing control needs to be repositioned when its value changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Method called by the grid before the editing control is shown so it can adapt to the provided cell style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Method called by the grid on keystrokes to determine if the editing control is interested in the key or not.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            Returns the current value of the editing control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl.PrepareEditingControlForEdit(System.Boolean)">
            <summary>
            Called by the grid to give the editing control a chance to prepare itself for the editing session.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl.OnTextChanged(System.EventArgs)">
            <summary>
            Listen to the TextChanged notification to forward the change to the grid.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Listen to the SelectedIndexChanged notification to forward the change to the grid.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewComboBoxEditingControl.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>
            A few keyboard messages need to be forwarded to the inner textbox of the
            KryptonComboBox control so that the first character pressed appears in it.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn">
            <summary>
            Hosts a collection of KryptonDataGridViewDateTimePickerCell cells.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.ButtonSpecClick">
            <summary>
            Occurs when the user clicks a button spec.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewDateTimePickerColumn class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.ToString">
            <summary>
            Returns a standard compact string representation of the column.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.Clone">
            <summary>
            Create a cloned copy of the column.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.CellTemplate">
            <summary>
            Represents the implicit cell that gets cloned when adding rows to the grid.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.ButtonSpecs">
            <summary>
            Gets the collection of the button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.ShowCheckBox">
            <summary>
            Replicates the ShowCheckBox property of the KryptonDataGridViewDateTimePickerCell cell type.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.ShowUpDown">
            <summary>
            Replicates the ShowUpDown property of the KryptonDataGridViewDateTimePickerCell cell type.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.Format">
            <summary>
            Replicates the Format property of the KryptonDataGridViewDateTimePickerCell cell type.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.AutoShift">
            <summary>
            Replicates the AutoShift property of the KryptonDataGridViewDateTimePickerCell cell type.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.Checked">
            <summary>
            Gets or sets a value indicating if the check box is checked and if the ValueNullable is DBNull or a DateTime value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.CustomFormat">
            <summary>
            Gets or sets the custom date/time format string.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.CustomNullText">
            <summary>
            Gets or sets the custom text to show when control is not checked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.MaxDate">
            <summary>
            Gets or sets the maximum date and time that can be selected in the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.ShouldSerializeMaxDate">
            <summary>
            Should the MaxDate property be serialized.
            </summary>
            <returns>True if property needs to be serialized.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.MinDate">
            <summary>
            Gets or sets the minimum date and time that can be selected in the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.ShouldSerializeMinDate">
            <summary>
            Should the MinDate property be serialized.
            </summary>
            <returns>True if property needs to be serialized.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.CalendarDimensions">
            <summary>
            Gets or sets the number of columns and rows of months displayed. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.CalendarTodayText">
            <summary>
            Gets or sets the label text for todays text. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.ResetCalendarTodayText">
            <summary>
            Reset the value of the CalendarTodayText property.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.CalendarFirstDayOfWeek">
            <summary>
            First day of the week.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.CalendarShowToday">
            <summary>
            Gets and sets if the control will display todays date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.CalendarCloseOnTodayClick">
            <summary>
            Gets and sets if clicking the Today button closes the drop down menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.CalendarShowTodayCircle">
            <summary>
            Gets and sets if the control will circle the today date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.CalendarShowWeekNumbers">
            <summary>
            Gets and sets if week numbers to the left of each row.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.CalendarTodayDate">
            <summary>
            Gets or sets today's date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.CalendarAnnuallyBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determines which annual days are displayed in bold.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.ShouldSerializeCalendarAnnuallyBoldedDates">
            <summary>
            Should the CalendarAnnuallyBoldedDates property be serialized.
            </summary>
            <returns>True if property needs to be serialized.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.CalendarMonthlyBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determine which monthly days to bold. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.ShouldSerializeCalendarMonthlyBoldedDates">
            <summary>
            Should the CalendarMonthlyBoldedDates property be serialized.
            </summary>
            <returns>True if property needs to be serialized.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.CalendarBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determines which nonrecurring dates are displayed in bold.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.ShouldSerializeCalendarBoldedDates">
            <summary>
            Should the CalendarBoldedDates property be serialized.
            </summary>
            <returns>True if property needs to be serialized.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerColumn.DateTimePickerCellTemplate">
            <summary>
            Small utility function that returns the template cell as a KryptonDataGridViewDateTimePickerCell
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell">
            <summary>
            Defines a KryptonDateTimePicker cell type for the KryptonDataGridView control
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.#ctor">
            <summary>
            Constructor for the KryptonDataGridViewDateTimePickerCell cell type
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.ToString">
            <summary>
            Returns a standard textual representation of the cell.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.EditType">
            <summary>
            Define the type of the cell's editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.ValueType">
            <summary>
            Returns the type of the cell's Value property
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.Clone">
            <summary>
            Clones a DataGridViewDateTimePickerCell cell, copies all the custom properties.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.ShowCheckBox">
            <summary>
            The ShowCheckBox property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.ShowUpDown">
            <summary>
            The ShowUpDown property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.AutoShift">
            <summary>
            The AutoShift property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.Checked">
            <summary>
            The Checked property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.CustomFormat">
            <summary>
            The CustomFormat property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.CustomNullText">
            <summary>
            The CustomNullText property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.MaxDate">
            <summary>
            The MaxDate property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.ShouldSerializeMaxDate">
            <summary>
            Should the MaxDate property be serialized.
            </summary>
            <returns>True if property needs to be serialized.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.MinDate">
            <summary>
            The MaxDate property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.ShouldSerializeMinDate">
            <summary>
            Should the MinDate property be serialized.
            </summary>
            <returns>True if property needs to be serialized.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.Format">
            <summary>
            The Format property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.CalendarDimensions">
            <summary>
            The CalendarDimensions property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.CalendarTodayText">
            <summary>
            The CalendarTodayText property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.CalendarFirstDayOfWeek">
            <summary>
            The CalendarFirstDayOfWeek property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.CalendarShowToday">
            <summary>
            The CalendarShowToday property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.CalendarCloseOnTodayClick">
            <summary>
            The CalendarCloseOnTodayClick property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.CalendarShowTodayCircle">
            <summary>
            The CalendarShowTodayCircle property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.CalendarShowWeekNumbers">
            <summary>
            The CalendarShowWeekNumbers property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.CalendarTodayDate">
            <summary>
            The CalendarTodayDate property replicates the one from the KryptonDateTimePicker control
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.DetachEditingControl">
            <summary>
            DetachEditingControl gets called by the DataGridView control when the editing session is ending
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Custom implementation of the InitializeEditingControl function. This function is called by the DataGridView control 
            at the beginning of an editing session. It makes sure that the properties of the KryptonDateTimePicker editing control are 
            set according to the cell properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            Gets the value of the cell as formatted for display. 
            </summary>
            <param name="value">The value to be formatted.</param>
            <param name="rowIndex">The index of the cell's parent row.</param>
            <param name="cellStyle">The DataGridViewCellStyle in effect for the cell.</param>
            <param name="valueTypeConverter">A TypeConverter associated with the value type that provides custom conversion to the formatted value type, or null if no such custom conversion is needed</param>
            <param name="formattedValueTypeConverter">A TypeConverter associated with the formatted value type that provides custom conversion from the value type, or null if no such custom conversion is needed.</param>
            <param name="context">A bitwise combination of DataGridViewDataErrorContexts values describing the context in which the formatted value is needed.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)">
            <summary>
            Converts a value formatted for display to an actual cell value.
            </summary>
            <param name="formattedValue">The display value of the cell.</param>
            <param name="cellStyle">The DataGridViewCellStyle in effect for the cell.</param>
            <param name="formattedValueTypeConverter">A TypeConverter for the display value type, or null to use the default converter.</param>
            <param name="valueTypeConverter">A TypeConverter for the cell value type, or null to use the default converter.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Custom implementation of the PositionEditingControl method called by the DataGridView control when it
            needs to relocate and/or resize the editing control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)">
            <summary>
            Customized implementation of the GetErrorIconBounds function in order to draw the potential 
            error icon next to the up/down buttons and not on top of them.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)">
            <summary>
            Custom implementation of the GetPreferredSize function.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <summary>
            Custom paints the cell. The base implementation of the DataGridViewTextBoxCell type is called first,
            dropping the icon error and content foreground parts. Those two parts are painted by this custom implementation.
            In this sample, the non-edited KryptonDateTimePicker control is painted by using a call to Control.DrawToBitmap. This is
            an easy solution for painting controls but it's not necessarily the most performant. An alternative would be to paint
            the KryptonDateTimePicker control piece by piece (text and up/down buttons).
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerEditingControl">
            <summary>
            Defines the editing control for the DataGridViewKryptonDateTimePickerCell custom cell type.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerEditingControl.#ctor">
            <summary>
            Initalize a new instance of the KryptonDataGridViewDateTimePickerEditingControl class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerEditingControl.EditingControlDataGridView">
            <summary>
            Property which caches the grid that uses this editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerEditingControl.EditingControlFormattedValue">
            <summary>
            Property which represents the current formatted value of the editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerEditingControl.EditingControlRowIndex">
            <summary>
            Property which represents the row in which the editing control resides
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerEditingControl.EditingControlValueChanged">
            <summary>
            Property which indicates whether the value of the editing control has changed or not
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerEditingControl.EditingPanelCursor">
            <summary>
            Property which determines which cursor must be used for the editing panel, i.e. the parent of the editing control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerEditingControl.RepositionEditingControlOnValueChange">
            <summary>
            Property which indicates whether the editing control needs to be repositioned when its value changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerEditingControl.PrepareEditingControlForEdit(System.Boolean)">
            <summary>
            Called by the grid to give the editing control a chance to prepare itself for the editing session.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Method called by the grid before the editing control is shown so it can adapt to the provided cell style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Method called by the grid on keystrokes to determine if the editing control is interested in the key or not.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            Returns the current value of the editing control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewDateTimePickerEditingControl.OnValueNullableChanged(System.EventArgs)">
            <summary>
            Listen to the ValueNullableChanged notification to forward the change to the grid.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn">
            <summary>
            Hosts a collection of KryptonDataGridViewMaskedTextBoxCell cells.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.ButtonSpecClick">
            <summary>
            Occurs when the user clicks a button spec.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.#ctor">
            <summary>
            Initialize a new instance of the KryptonDataGridViewMaskedTextBoxColumn class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.ToString">
            <summary>
            Returns a standard compact string representation of the column.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.Clone">
            <summary>
            Create a cloned copy of the column.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.CellTemplate">
            <summary>
            Represents the implicit cell that gets cloned when adding rows to the grid.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.ButtonSpecs">
            <summary>
            Gets the collection of the button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.PromptChar">
            <summary>
            Replicates the PromptChar property of the KryptonDataGridViewMaskedTextBoxCell cell type.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.AllowPromptAsInput">
            <summary>
            Gets or sets a value indicating whether PromptChar can be entered as valid data by the user.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.AsciiOnly">
            <summary>
            Gets or sets a value indicating whether the MaskedTextBox control accepts characters outside of the ASCII character set.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.BeepOnError">
            <summary>
            Gets or sets a value indicating whether the masked text box control raises the system beep for each user key stroke that it rejects.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.CutCopyMaskFormat">
            <summary>
            Gets or sets a value that determines whether literals and prompt characters are copied to the clipboard.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.HidePromptOnLeave">
            <summary>
            Gets or sets a value indicating whether the prompt characters in the input mask are hidden when the masked text box loses focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.HideSelection">
            <summary>
            Gets or sets a value indicating that the selection should be hidden when the edit control loses focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.InsertKeyMode">
            <summary>
            Gets or sets the text insertion mode of the masked text box control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.Mask">
            <summary>
            Gets or sets the input mask to use at run time. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.PasswordChar">
            <summary>
            Gets or sets a the character to display for password input for single-line edit controls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.RejectInputOnFirstFailure">
            <summary>
            Gets or sets a value indicating whether the parsing of user input should stop after the first invalid character is reached.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.ResetOnPrompt">
            <summary>
            Gets or sets a value that determines how an input character that matches the prompt character should be handled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.ResetOnSpace">
            <summary>
            Gets or sets a value that determines how a space input character should be handled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.SkipLiterals">
            <summary>
            Gets or sets a value indicating whether the user is allowed to reenter literal values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.TextMaskFormat">
            <summary>
            Gets or sets a value that determines whether literals and prompt characters are included in the formatted string.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.UseSystemPasswordChar">
            <summary>
            Gets or sets a value indicating if the text in the edit control should appear as the default password character.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxColumn.MaskedTextBoxCellTemplate">
            <summary>
            Small utility function that returns the template cell as a KryptonDataGridViewMaskedTextBoxCell
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell">
            <summary>
            Defines a KryptonMaskedTextBox cell type for the KryptonDataGridView control
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.#ctor">
            <summary>
            Constructor for the KryptonDataGridViewMaskedTextBoxCell cell type
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.ToString">
            <summary>
            Returns a standard textual representation of the cell.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.EditType">
            <summary>
            Define the type of the cell's editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.ValueType">
            <summary>
            Returns the type of the cell's Value property
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.PromptChar">
            <summary>
            The PromptChar property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.AllowPromptAsInput">
            <summary>
            The AllowPromptAsInput property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.AsciiOnly">
            <summary>
            The AsciiOnly property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.BeepOnError">
            <summary>
            The BeepOnError property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.CutCopyMaskFormat">
            <summary>
            The CutCopyMaskFormat property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.HidePromptOnLeave">
            <summary>
            The HidePromptOnLeave property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.HideSelection">
            <summary>
            The HideSelection property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.InsertKeyMode">
            <summary>
            The InsertKeyMode property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.Mask">
            <summary>
            The Mask property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.PasswordChar">
            <summary>
            The PasswordChar property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.RejectInputOnFirstFailure">
            <summary>
            The RejectInputOnFirstFailure property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.ResetOnPrompt">
            <summary>
            The ResetOnPrompt property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.ResetOnSpace">
            <summary>
            The ResetOnSpace property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.SkipLiterals">
            <summary>
            The SkipLiterals property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.TextMaskFormat">
            <summary>
            The TextMaskFormat property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.UseSystemPasswordChar">
            <summary>
            The UseSystemPasswordChar property replicates the one from the KryptonMaskedTextBox control
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.Clone">
            <summary>
            Clones a DataGridViewMaskedTextBoxCell cell, copies all the custom properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.DetachEditingControl">
            <summary>
            DetachEditingControl gets called by the DataGridView control when the editing session is ending
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Custom implementation of the InitializeEditingControl function. This function is called by the DataGridView control 
            at the beginning of an editing session. It makes sure that the properties of the KryptonNumericUpDown editing control are 
            set according to the cell properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Custom implementation of the PositionEditingControl method called by the DataGridView control when it
            needs to relocate and/or resize the editing control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)">
            <summary>
            Customized implementation of the GetErrorIconBounds function in order to draw the potential 
            error icon next to the up/down buttons and not on top of them.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)">
            <summary>
            Custom implementation of the GetPreferredSize function.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxEditingControl">
            <summary>
            Defines the editing control for the DataGridViewMaskedTextBoxCell custom cell type.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxEditingControl.#ctor">
            <summary>
            Initalize a new instance of the KryptonDataGridViewMaskedTextBoxEditingControl class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxEditingControl.EditingControlDataGridView">
            <summary>
            Property which caches the grid that uses this editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxEditingControl.EditingControlFormattedValue">
            <summary>
            Property which represents the current formatted value of the editing control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxEditingControl.EditingControlRowIndex">
            <summary>
            Property which represents the row in which the editing control resides
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxEditingControl.EditingControlValueChanged">
            <summary>
            Property which indicates whether the value of the editing control has changed or not
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxEditingControl.EditingPanelCursor">
            <summary>
            Property which determines which cursor must be used for the editing panel, i.e. the parent of the editing control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxEditingControl.RepositionEditingControlOnValueChange">
            <summary>
            Property which indicates whether the editing control needs to be repositioned when its value changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Method called by the grid before the editing control is shown so it can adapt to the provided cell style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Method called by the grid on keystrokes to determine if the editing control is interested in the key or not.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>
            Returns the current value of the editing control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxEditingControl.PrepareEditingControlForEdit(System.Boolean)">
            <summary>
            Called by the grid to give the editing control a chance to prepare itself for the editing session.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxEditingControl.OnTextChanged(System.EventArgs)">
            <summary>
            Listen to the TextChanged notification to forward the change to the grid.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDataGridViewMaskedTextBoxEditingControl.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>
            A few keyboard messages need to be forwarded to the inner textbox of the
            KryptonNumericUpDown control so that the first character pressed appears in it.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonRadioButton">
            <summary>
            Display radio button with text and images with the styling features of the Krypton Toolkit
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.DoubleClick">
            <summary>
            Occurs when the control is double clicked with the mouse.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.MouseDoubleClick">
            <summary>
            Occurs when the control is mouse double clicked with the mouse.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.ImeModeChanged">
            <summary>
            Occurs when the value of the ImeMode property is changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.CheckedChanged">
            <summary>
            Occurs when the value of the Checked property has changed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.#ctor">
            <summary>
            Initialize a new instance of the RadioButton class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.AutoSize">
            <summary>
            Gets and sets the automatic resize of the control to fit contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.AutoSizeMode">
            <summary>
            Gets and sets the mode for when auto sizing.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.Text">
            <summary>
            Gets or sets the text associated with this control. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.Orientation">
            <summary>
            Gets and sets the visual orientation of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.CheckPosition">
            <summary>
            Gets and sets the position of the radio button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.LabelStyle">
            <summary>
            Gets and sets the label style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.Values">
            <summary>
            Gets access to the label content.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.Images">
            <summary>
            Gets access to the image value overrides.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.StateCommon">
            <summary>
            Gets access to the common label appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.StateDisabled">
            <summary>
            Gets access to the disabled label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.StateNormal">
            <summary>
            Gets access to the normal label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.OverrideFocus">
            <summary>
            Gets access to the label appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether an ampersand is included in the text of the control. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.Checked">
            <summary>
            Gets or sets a value indicating if the component is in the checked state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.AutoCheck">
            <summary>
            Gets or sets a value indicating if the radio button is automatically changed state when clicked. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.Focus">
            <summary>
            Sets input focus to the control.
            </summary>
            <returns>true if the input focus request was successful; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.Select">
            <summary>
            Activates the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.SetFixedState(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="focus">Focus state for display.</param>
            <param name="enabled">Enabled state for display.</param>
            <param name="tracking">Tracking state for display.</param>
            <param name="pressed">Pressed state for display.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.OnMouseDoubleClick(System.EventArgs)">
            <summary>
            Raises the MouseDoubleClick event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.OnMouseImeModeChanged(System.EventArgs)">
            <summary>
            Raises the ImeModeChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the CheckedChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.SetLabelStyle(ComponentFactory.Krypton.Toolkit.LabelStyle)">
            <summary>
            Update the view elements based on the requested label style.
            </summary>
            <param name="style">New label style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processsed; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Raises the RightToLeftChanged event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonRadioButton.EvalTransparentPaint">
            <summary>
            Work out if this control needs to paint transparent areas.
            </summary>
            <returns>True if paint required; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonCheckBox">
            <summary>
            Display check box with text and images with the styling features of the Krypton Toolkit
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.DoubleClick">
            <summary>
            Occurs when the control is double clicked with the mouse.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.MouseDoubleClick">
            <summary>
            Occurs when the control is mouse double clicked with the mouse.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.ImeModeChanged">
            <summary>
            Occurs when the value of the ImeMode property is changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.CheckedChanged">
            <summary>
            Occurs when the value of the Checked property has changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.CheckStateChanged">
            <summary>
            Occurs when the value of the CheckState property has changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.KryptonCommandChanged">
            <summary>
            Occurs when the value of the KryptonCommand property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.#ctor">
            <summary>
            Initialize a new instance of the KryptonCheckBox class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.AutoSize">
            <summary>
            Gets and sets the automatic resize of the control to fit contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.AutoSizeMode">
            <summary>
            Gets and sets the mode for when auto sizing.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.Text">
            <summary>
            Gets or sets the text associated with this control. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.Orientation">
            <summary>
            Gets and sets the visual orientation of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.CheckPosition">
            <summary>
            Gets and sets the position of the check box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.LabelStyle">
            <summary>
            Gets and sets the label style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.Values">
            <summary>
            Gets access to the label content.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.Images">
            <summary>
            Gets access to the image value overrides.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.StateCommon">
            <summary>
            Gets access to the common label appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.StateDisabled">
            <summary>
            Gets access to the disabled label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.StateNormal">
            <summary>
            Gets access to the normal label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.OverrideFocus">
            <summary>
            Gets access to the label appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether an ampersand is included in the text of the control. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.Checked">
            <summary>
            Gets or sets a value indicating if the component is in the checked state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.AutoCheck">
            <summary>
            Gets or sets a value indicating if the check box is automatically changed state when clicked. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.ThreeState">
            <summary>
            Gets or sets a value indicating if the component allows three states instead of two.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.CheckState">
            <summary>
            Gets or sets a value indicating the checked state of the component.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.SetFixedState(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="focus">Focus state for display.</param>
            <param name="enabled">Enabled state for display.</param>
            <param name="tracking">Tracking state for display.</param>
            <param name="pressed">Pressed state for display.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.OnMouseDoubleClick(System.EventArgs)">
            <summary>
            Raises the MouseDoubleClick event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.OnMouseImeModeChanged(System.EventArgs)">
            <summary>
            Raises the ImeModeChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the CheckedChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.OnCheckStateChanged(System.EventArgs)">
            <summary>
            Raises the CheckStateChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.OnKryptonCommandChanged(System.EventArgs)">
            <summary>
            Raises the KryptonCommandChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.OnClick(System.EventArgs)">
            <summary>
            Raises the CheckStateChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.SetLabelStyle(ComponentFactory.Krypton.Toolkit.LabelStyle)">
            <summary>
            Update the view elements based on the requested label style.
            </summary>
            <param name="style">New label style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processsed; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Raises the RightToLeftChanged event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckBox.EvalTransparentPaint">
            <summary>
            Work out if this control needs to paint transparent areas.
            </summary>
            <returns>True if paint required; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonForm">
            <summary>
            Draws the window chrome using a Krypton palette.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonForm.FormButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecAny instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.FormButtonSpecCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonForm)">
            <summary>
            Initialize a new instance of the FormButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonForm.FormFixedButtonSpecCollection">
            <summary>
            Collection for managing NavigatorButtonSpec instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.FormFixedButtonSpecCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonForm)">
            <summary>
            Initialize a new instance of the FormFixedButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.#ctor">
            <summary>
            Initialize a new instance of the KryptonForm class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.TextExtra">
            <summary>
            Gets or sets the extra text associated with the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be displayed for button specs.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.AllowFormChrome">
            <summary>
            Gets or sets a value indicating if custome chrome is allowed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.AllowStatusStripMerge">
            <summary>
            Gets or sets a value indicating if the form status strip be considered for merging into chrome.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.HeaderStyle">
            <summary>
            Gets and sets the header style for a main form.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.GroupBorderStyle">
            <summary>
            Gets and sets the chrome group border style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.GroupBackStyle">
            <summary>
            Gets and sets the chrome group background style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.StateCommon">
            <summary>
            Gets access to the common form appearance entries that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.StateInactive">
            <summary>
            Gets access to the inactive form appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.StateActive">
            <summary>
            Gets access to the active form appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.ButtonSpecMin">
            <summary>
            Gets access to the minimize button spec.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.ButtonSpecMax">
            <summary>
            Gets access to the minimize button spec.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.ButtonSpecClose">
            <summary>
            Gets access to the minimize button spec.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.InertForm">
            <summary>
            Gets and sets a value indicating if the border should be inert to changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.InjectViewElement(ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.ViewDockStyle)">
            <summary>
            Allow an extra view element to be injected into the caption area.
            </summary>
            <param name="element">Reference to view element.</param>
            <param name="style">Docking style of the element.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.RevokeViewElement(ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.ViewDockStyle)">
            <summary>
            Remove a previously injected view element from the caption area.
            </summary>
            <param name="element">Reference to view element.</param>
            <param name="style">Docking style of the element.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.AllowIconDisplay">
            <summary>
            Gets and sets a value indicating if the icon is allowed to be shown.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.RecreateMinMaxCloseButtons">
            <summary>
            Next time a layout occurs the min/max/close buttons need recreating.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.ToolTipManager">
            <summary>
            Gets access to the ToolTipManager used for displaying tool tips.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.GetWindowState">
            <summary>
            Gets the current state of the window.
            </summary>
            <returns>FormWindowState enumeration value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.WindowChromeCompositionLayout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,System.Drawing.Rectangle)">
            <summary>
            Perform layout on behalf of the composition element using our root element.
            </summary>
            <param name="context">Layout context.</param>
            <param name="compRect">Rectangle for composition element.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.WindowChromeCompositionPaint(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform painting on behalf of the composition element using our root element.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.HitTestMinButton(System.Drawing.Point)">
            <summary>
            Gets a value indicating if the provided point is inside the minimize button.
            </summary>
            <param name="pt">Window relative point to test.</param>
            <returns>True if inside the button; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.HitTestMaxButton(System.Drawing.Point)">
            <summary>
            Gets a value indicating if the provided point is inside the maximize button.
            </summary>
            <param name="pt">Window relative point to test.</param>
            <returns>True if inside the button; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.HitTestCloseButton(System.Drawing.Point)">
            <summary>
            Gets a value indicating if the provided point is inside the close button.
            </summary>
            <param name="pt">Window relative point to test.</param>
            <returns>True if inside the button; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonForm.CustomCaptionArea">
            <summary>
            Gets and sets a rectangle to treat as a custom caption area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for showing on the title bar.
            </summary>
            <param name="state">Form state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Form state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.GetShortText">
            <summary>
            Gets the short text used as the main caption title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.GetLongText">
            <summary>
            Gets the long text used as the secondary caption title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlAdded event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlRemoved event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.OnLoad(System.EventArgs)">
            <summary>
            Raises the Load event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Processes a notification from palette storage of a button spec change.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.OnWindowActiveChanged">
            <summary>
            Called when the active state of the window changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.OnPaletteChanged(System.EventArgs)">
            <summary>
            Raises the PaletteChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.OnAllowFormChromeChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the AllowFormChromeChanged event is fired for the current palette.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.WindowChromeStart">
            <summary>
            Perform setup for custom chrome.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.WindowChromeEnd">
            <summary>
            Perform cleanup when custom chrome ending.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.WindowChromeHitTest(System.Drawing.Point,System.Boolean)">
            <summary>
            Perform hit testing.
            </summary>
            <param name="pt">Point in window coordinates.</param>
            <param name="composition">Are we performing composition.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.WindowChromePaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Perform painting of the window chrome.
            </summary>
            <param name="g">Graphics instance to use for drawing.</param>
            <param name="bounds">Bounds enclosing the window chrome.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonForm.WindowChromeLeftMouseDown(System.Drawing.Point)">
            <summary>
            Process the left mouse down event.
            </summary>
            <param name="pt">Window coordinate of the mouse up.</param>
            <returns>True if event is processed; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonTextBox">
            <summary>
            Provide a TextBox with Krypton styling applied.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTextBox.InternalTextBox.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the InternalTextBox.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTextBox.InternalTextBox.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the InternalTextBox.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.InternalTextBox.#ctor(ComponentFactory.Krypton.Toolkit.KryptonTextBox)">
            <summary>
            Initialize a new instance of the InternalTextBox class.
            </summary>
            <param name="kryptonTextBox">Reference to owning control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.InternalTextBox.MouseOver">
            <summary>
            Gets and sets if the mouse is currently over the combo box.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.InternalTextBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.InternalTextBox.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.InternalTextBox.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonTextBox.TextBoxButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecAny instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.TextBoxButtonSpecCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonTextBox)">
            <summary>
            Initialize a new instance of the TextBoxButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTextBox.AcceptsTabChanged">
            <summary>
            Occurs when the value of the AcceptsTab property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTextBox.HideSelectionChanged">
            <summary>
            Occurs when the value of the HideSelection property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTextBox.TextAlignChanged">
            <summary>
            Occurs when the value of the TextAlign property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTextBox.ModifiedChanged">
            <summary>
            Occurs when the value of the Modified property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTextBox.MultilineChanged">
            <summary>
            Occurs when the value of the Multiline property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTextBox.ReadOnlyChanged">
            <summary>
            Occurs when the value of the ReadOnly property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTextBox.TrackMouseEnter">
            <summary>
            Occurs when the mouse enters the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTextBox.TrackMouseLeave">
            <summary>
            Occurs when the mouse leaves the control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTextBox.BackColorChanged">
            <summary>
            Occurs when the value of the BackColor property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTextBox.BackgroundImageChanged">
            <summary>
            Occurs when the value of the BackgroundImage property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTextBox.BackgroundImageLayoutChanged">
            <summary>
            Occurs when the value of the BackgroundImageLayout property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonTextBox.ForeColorChanged">
            <summary>
            Occurs when the value of the ForeColor property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.#ctor">
            <summary>
            Initialize a new instance of the KryptonTextBox class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.TabStop">
            <summary>
            Gets and sets if the control is in the tab chain.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.InRibbonDesignMode">
            <summary>
            Gets and sets if the control is in the ribbon design mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.TextBox">
            <summary>
            Gets access to the contained TextBox instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.ContainedControl">
            <summary>
            Gets access to the contained input control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.AutoSize">
            <summary>
            Gets and sets a value indicating if the control is automatically sized.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Focused">
            <summary>
            Gets a value indicating whether the control has input focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Text">
            <summary>
            Gets and sets the text associated with the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.CanUndo">
            <summary>
            Gets a value indicating whether the user can undo the previous operation in a rich text box control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Modified">
            <summary>
            Gets a value indicating whether the contents have changed since last last.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.SelectedText">
            <summary>
            Gets and sets the selected text within the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.SelectionLength">
            <summary>
            Gets and sets the selection length for the selected area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.SelectionStart">
            <summary>
            Gets and sets the starting point of text selected in the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.TextLength">
            <summary>
            Gets the length of text in the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether mnemonics will fire button spec buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.AlwaysActive">
            <summary>
            Gets and sets Determines if the control is always active or only when the mouse is over the control or has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Lines">
            <summary>
            Gets or sets the lines of text in a multiline edit, as an array of String values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.ScrollBars">
            <summary>
            Gets or sets, for multiline edit controls, which scroll bars will be shown for this control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.TextAlign">
            <summary>
            Gets or sets how the text should be aligned for edit controls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.WordWrap">
            <summary>
            Indicates if lines are automatically word-wrapped for multiline edit controls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Multiline">
            <summary>
            Gets and sets whether the text in the control can span more than one line.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.AcceptsReturn">
            <summary>
            Gets or sets a value indicating if return characters are accepted as input for multiline edit controls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.AcceptsTab">
            <summary>
            Gets or sets a value indicating if tab characters are accepted as input for multiline edit controls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.CharacterCasing">
            <summary>
            Gets or sets a value indicating if all the characters should be left alone or converted to uppercase or lowercase.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.HideSelection">
            <summary>
            Gets or sets a value indicating that the selection should be hidden when the edit control loses focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.MaxLength">
            <summary>
            Gets or sets the maximum number of characters that can be entered into the edit control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the text in the edit control can be changed or not.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.ShortcutsEnabled">
            <summary>
            Gets or sets a value indicating whether shortcuts defined for the control are enabled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.PasswordChar">
            <summary>
            Gets or sets a the character to display for password input for single-line edit controls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.UseSystemPasswordChar">
            <summary>
            Gets or sets a value indicating if the text in the edit control should appear as the default password character.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.InputControlStyle">
            <summary>
            Gets and sets the input control style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.AutoCompleteCustomSource">
            <summary>
            Gets or sets the StringCollection to use when the AutoCompleteSource property is set to CustomSource.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.AutoCompleteMode">
            <summary>
            Gets or sets the text completion behavior of the textbox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.AutoCompleteSource">
            <summary>
            Gets or sets the autocomplete source, which can be one of the values from AutoCompleteSource enumeration.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be displayed for button specs.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.StateCommon">
            <summary>
            Gets access to the common textbox appearance entries that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.StateDisabled">
            <summary>
            Gets access to the disabled textbox appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.StateNormal">
            <summary>
            Gets access to the normal textbox appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.StateActive">
            <summary>
            Gets access to the active textbox appearance entries.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.AppendText(System.String)">
            <summary>
            Appends text to the current text of a rich text box.
            </summary>
            <param name="text">The text to append to the current contents of the text box.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Clear">
            <summary>
            Clears all text from the text box control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.ClearUndo">
            <summary>
            Clears information about the most recent operation from the undo buffer of the rich text box. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Copy">
            <summary>
            Copies the current selection in the text box to the Clipboard.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Cut">
            <summary>
            Moves the current selection in the text box to the Clipboard.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Paste">
            <summary>
            Replaces the current selection in the text box with the contents of the Clipboard.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.ScrollToCaret">
            <summary>
            Scrolls the contents of the control to the current caret position.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the control.
            </summary>
            <param name="start">The position of the first character in the current text selection within the text box.</param>
            <param name="length">The number of characters to select.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.SelectAll">
            <summary>
            Selects all text in the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Undo">
            <summary>
            Undoes the last edit operation in the text box.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.DeselectAll">
            <summary>
            Specifies that the value of the SelectionLength property is zero so that no characters are selected in the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.GetCharFromPosition(System.Drawing.Point)">
            <summary>
            Retrieves the character that is closest to the specified location within the control.
            </summary>
            <param name="pt">The location from which to seek the nearest character.</param>
            <returns>The character at the specified location.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.GetCharIndexFromPosition(System.Drawing.Point)">
            <summary>
            Retrieves the index of the character nearest to the specified location.
            </summary>
            <param name="pt">The location to search.</param>
            <returns>The zero-based character index at the specified location.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.GetFirstCharIndexFromLine(System.Int32)">
            <summary>
            Retrieves the index of the first character of a given line.
            </summary>
            <param name="lineNumber">The line for which to get the index of its first character.</param>
            <returns>The zero-based character index in the specified line.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.GetFirstCharIndexOfCurrentLine">
            <summary>
            Retrieves the index of the first character of the current line.
            </summary>
            <returns>The zero-based character index in the current line.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.GetLineFromCharIndex(System.Int32)">
            <summary>
            Retrieves the line number from the specified character position within the text of the RichTextBox control.
            </summary>
            <param name="index">The character index position to search.</param>
            <returns>The zero-based line number in which the character index is located.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.GetPositionFromCharIndex(System.Int32)">
            <summary>
            Retrieves the location within the control at the specified character index.
            </summary>
            <param name="index">The index of the character for which to retrieve the location.</param>
            <returns>The location of the specified character.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.SetFixedState(System.Boolean)">
            <summary>
            Sets the fixed state of the control.
            </summary>
            <param name="active">Should the control be fixed as active.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.ToolTipManager">
            <summary>
            Gets access to the ToolTipManager used for displaying tool tips.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.IsActive">
            <summary>
            Gets a value indicating if the input control is active.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Focus">
            <summary>
            Sets input focus to the control.
            </summary>
            <returns>true if the input focus request was successful; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.Select">
            <summary>
            Activates the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Get the preferred size of the control based on a proposed size.
            </summary>
            <param name="proposedSize">Starting size proposed by the caller.</param>
            <returns>Calculated preferred size.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.DisplayRectangle">
            <summary>
            Gets the rectangle that represents the display area of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.DesignerComponentFromPoint(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.DesignerMouseLeave">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.ForceControlLayout">
            <summary>
            Force the layout logic to size and position the controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnAcceptsTabChanged(System.EventArgs)">
            <summary>
            Raises the AcceptsTabChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnTextAlignChanged(System.EventArgs)">
            <summary>
            Raises the TextAlignChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnHideSelectionChanged(System.EventArgs)">
            <summary>
            Raises the HideSelectionChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnModifiedChanged(System.EventArgs)">
            <summary>
            Raises the ModifiedChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnMultilineChanged(System.EventArgs)">
            <summary>
            Raises the MultilineChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnTrackMouseEnter(System.EventArgs)">
            <summary>
            Raises the TrackMouseEnter event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnTrackMouseLeave(System.EventArgs)">
            <summary>
            Raises the TrackMouseLeave event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the KryptonTextBox.
            </summary>
            <returns>A new instance of Control.ControlCollection assigned to the control.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the BackColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnBackgroundImageChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageLayoutChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnForeColorChanged(System.EventArgs)">
            <summary>
            Raises the ForeColorChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
            <param name="x">The new Left property value of the control.</param>
            <param name="y">The new Top property value of the control.</param>
            <param name="width">The new Width property value of the control.</param>
            <param name="height">The new Height property value of the control.</param>
            <param name="specified">A bitwise combination of the BoundsSpecified values.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonTextBox.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the PaddingChanged event.
            </summary>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnTabStopChanged(System.EventArgs)">
            <summary>
            Raises the TabStop event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.OnCausesValidationChanged(System.EventArgs)">
            <summary>
            Raises the CausesValidationChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonTextBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenu">
            <summary>
            Represents a shortcut menu with Krypton palette styling.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Opening">
            <summary>
            Occurs when the context menu is opening.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Opened">
            <summary>
            Occurs when the context menu is opended.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Closing">
            <summary>
            Occurs when the context menu is about to close.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Closed">
            <summary>
            Occurs when the context menu has been closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.#ctor">
            <summary>
             Initialize a new instance of the KryptonContextMenu class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Images">
            <summary>
            Gets access to the image value overrides.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.StateCommon">
            <summary>
            Gets access to the common context menu appearance entries that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.StateDisabled">
            <summary>
            Gets access to the context menu disabled appearance values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.StateNormal">
            <summary>
            Gets access to the context menu normal appearance values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.StateChecked">
            <summary>
            Gets access to the context menu normal appearance values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.StateHighlight">
            <summary>
            Gets access to the context menu highlight appearance values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Items">
            <summary>
            Collection of menu items for display.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Tag">
            <summary>
            Gets and sets user-defined data associated with the object.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Enabled">
            <summary>
            Gets and sets if the context menu is enabled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.PaletteMode">
            <summary>
            Gets or sets the palette to be applied.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.ResetPaletteMode">
            <summary>
            Resets the PaletteMode property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Palette">
            <summary>
            Gets and sets the custom palette implementation.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.ResetPalette">
            <summary>
            Resets the Palette property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Caller">
            <summary>
            Gets a reference to the caller that caused the context menu to be shown.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Show(System.Object)">
            <summary>
            Show the context menu at the current mouse location.
            </summary>
            <returns>Has the context menu become displayed.</returns>
            <param name="caller">Reference to object causing the context menu to be shown.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Show(System.Object,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV)">
            <summary>
            Show the context menu relative to the current mouse location.
            </summary>
            <param name="caller">Reference to object causing the context menu to be shown.</param>
            <param name="horz">Horizontal location relative to screen rectangle.</param>
            <param name="vert">Vertical location relative to screen rectangle.</param>
            <returns>Has the context menu become displayed.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Show(System.Object,System.Drawing.Point)">
            <summary>
            Show the context menu relative to the provided screen point.
            </summary>
            <param name="caller">Reference to object causing the context menu to be shown.</param>
            <param name="screenPt">Screen location.</param>
            <returns>Has the context menu become displayed.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Show(System.Object,System.Drawing.Rectangle)">
            <summary>
            Show the context menu relative to the provided screen rectangle.
            </summary>
            <param name="caller">Reference to object causing the context menu to be shown.</param>
            <param name="screenRect">Screen rectangle.</param>
            <returns>Has the context menu become displayed.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Show(System.Object,System.Drawing.Point,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV)">
            <summary>
            Show the context menu relative to the provided screen point.
            </summary>
            <param name="caller">Reference to object causing the context menu to be shown.</param>
            <param name="screenPt">Screen location.</param>
            <param name="horz">Horizontal location relative to screen rectangle.</param>
            <param name="vert">Vertical location relative to screen rectangle.</param>
            <returns>Has the context menu become displayed.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Show(System.Object,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV)">
            <summary>
            Show the context menu relative to the provided screen rectangle.
            </summary>
            <param name="caller">Reference to object causing the context menu to be shown.</param>
            <param name="screenRect">Screen rectangle.</param>
            <param name="horz">Horizontal location relative to screen rectangle.</param>
            <param name="vert">Vertical location relative to screen rectangle.</param>
            <returns>Has the context menu become displayed.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Show(System.Object,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV,System.Boolean,System.Boolean)">
            <summary>
            Show the context menu relative to the provided screen rectangle.
            </summary>
            <param name="caller">Reference to object causing the context menu to be shown.</param>
            <param name="screenRect">Screen rectangle.</param>
            <param name="horz">Horizontal location relative to screen rectangle.</param>
            <param name="vert">Vertical location relative to screen rectangle.</param>
            <param name="keyboardActivated">Was context menu initiated via a keyboard action.</param>
            <param name="constrain">Should size and position of menu be constrained by display size.</param>
            <returns>Has the context menu become displayed.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Close">
            <summary>
            Close any showing context menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.Close(System.Windows.Forms.ToolStripDropDownCloseReason)">
            <summary>
            Close any showing context menu.
            </summary>
            <param name="reason">Reason why the context menu is being closed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.CreateContextMenu(ComponentFactory.Krypton.Toolkit.KryptonContextMenu,ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteMode,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRedirectContextMenu,ComponentFactory.Krypton.Toolkit.KryptonContextMenuCollection,System.Boolean,System.Boolean)">
            <summary>
            Create a new visual context menu for showing the defined items.
            </summary>
            <param name="kcm">Owning KryptonContextMenu instance.</param>
            <param name="palette">Drawing palette.</param>
            <param name="paletteMode">Drawing palette mode.</param>
            <param name="redirector">Redirector for sourcing base values.</param>
            <param name="redirectorImages">Redirector for sourcing base images.</param>
            <param name="items">Colletion of menu items.</param>
            <param name="enabled">Enabled state of the menu.</param>
            <param name="keyboardActivated">True is menu was keyboard initiated.</param>
            <returns>VisualContextMenu reference.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.OnOpening(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the Opening event.
            </summary>
            <param name="e">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.OnOpened(System.EventArgs)">
            <summary>
            Raises the Opened event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the Closing event.
            </summary>
            <param name="e">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenu.OnClosed(System.Windows.Forms.ToolStripDropDownClosedEventArgs)">
            <summary>
            Raises the Closed event.
            </summary>
            <param name="e">An ToolStripDropDownClosedEventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualContextMenu">
            <summary>
            Base class for drawing a krypton context menu as a popup control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenu.#ctor(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,ComponentFactory.Krypton.Toolkit.KryptonContextMenuCollection,System.Boolean)">
            <summary>
             Initialize a new instance of the VisualContextMenu class.
            </summary>
            <param name="provider">Original source of provider details</param>
            <param name="items">Enabled state of the context menu.</param>
            <param name="keyboardActivated">Was the context menu activate by a keyboard action.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenu.#ctor(ComponentFactory.Krypton.Toolkit.KryptonContextMenu,ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteMode,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRedirectContextMenu,ComponentFactory.Krypton.Toolkit.KryptonContextMenuCollection,System.Boolean,System.Boolean)">
            <summary>
             Initialize a new instance of the VisualContextMenu class.
            </summary>
            <param name="contextMenu">Originating context menu instance.</param>
            <param name="palette">Local palette setting to use initially.</param>
            <param name="paletteMode">Palette mode setting to use initially.</param>
            <param name="redirector">Redirector used for obtaining palette values.</param>
            <param name="redirectorImages">Redirector used for obtaining images.</param>
            <param name="items">Collection of context menu items to be displayed.</param>
            <param name="enabled">Enabled state of the context menu.</param>
            <param name="keyboardActivated">Was the context menu activate by a keyboard action.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenu.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContextMenu.CloseReason">
            <summary>
            Sets the reason for the context menu being closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenu.Show">
            <summary>
            Show the context menu relative to the current mouse location.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenu.Show(System.Drawing.Point)">
            <summary>
            Show the context menu relative to the provided screen point.
            </summary>
            <param name="screenPt">Screen location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenu.Show(System.Drawing.Rectangle)">
            <summary>
            Show the context menu relative to the provided screen rectangle.
            </summary>
            <param name="screenRect">Screen rectangle.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenu.Show(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV)">
            <summary>
            Show the context menu relative to the provided screen rectangle.
            </summary>
            <param name="screenRect">Screen rectangle.</param>
            <param name="horz">Horizontal location relative to screen rectangle.</param>
            <param name="vert">Vertical location relative to screen rectangle.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenu.Show(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV,System.Boolean,System.Boolean)">
            <summary>
            Show the context menu relative to the provided screen rectangle.
            </summary>
            <param name="screenRect">Screen rectangle.</param>
            <param name="horz">Horizontal location relative to screen rectangle.</param>
            <param name="vert">Vertical location relative to screen rectangle.</param>
            <param name="bounce">Should the menu bounce around the monitor.</param>
            <param name="constrain">Should size and position of menu be constrained by display size.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenu.ShowFixed(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV)">
            <summary>
            Show the context menu at the fixed screen rectangle.
            </summary>
            <param name="screenRect">Screen rectangle.</param>
            <param name="horz">Horizontal location relative to screen rectangle.</param>
            <param name="vert">Vertical location relative to screen rectangle.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContextMenu.ShowHorz">
            <summary>
            Gets and sets the horizontal setting used to position the menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContextMenu.ShowVert">
            <summary>
            Gets and sets the vertical setting used to position the menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContextMenu.ViewContextMenuManager">
            <summary>
            Gets access to the view manager for the context menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenu.DoesStackedClientMouseDownBecomeCurrent(System.Windows.Forms.Message,System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause it to become the current tracking popup.
            </summary>
            <param name="m">Original message.</param>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualContextMenu.Redirector">
            <summary>
            Gets access to the palette redirector.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenu.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenu.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualContextMenu.OnPaletteNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualPopupToolTip">
            <summary>
            Visual display of tooltip information.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupToolTip.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the VisualPopupTooltip class.
            </summary>
            <param name="redirector">Redirector for recovering palette values.</param>
            <param name="contentValues">Source of content values.</param>
            <param name="renderer">Drawing renderer.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupToolTip.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.IRenderer,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle)">
            <summary>
            Initialize a new instance of the VisualPopupTooltip class.
            </summary>
            <param name="redirector">Redirector for recovering palette values.</param>
            <param name="contentValues">Source of content values.</param>
            <param name="renderer">Drawing renderer.</param>
            <param name="backStyle">Style for the tooltip background.</param>
            <param name="borderStyle">Style for the tooltip border.</param>
            <param name="contentStyle">Style for the tooltip content.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupToolTip.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopupToolTip.KeyboardInert">
            <summary>
            Gets a value indicating if the keyboard is passed to this popup.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupToolTip.AllowMouseMove(System.Windows.Forms.Message,System.Drawing.Point)">
            <summary>
            Should the mouse move at provided screen point be allowed.
            </summary>
            <param name="m">Original message.</param>
            <param name="pt">Client coordinates point.</param>
            <returns>True to alow; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupToolTip.ShowCalculatingSize(System.Drawing.Point)">
            <summary>
            Show the tooltip popup relative to the provided screen position.
            </summary>
            <param name="screenPt">Screen point of cursor.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupToolTip.ShowCalculatingSize(System.Drawing.Rectangle)">
            <summary>
            Show the tooltip popup relative to the provided screen position.
            </summary>
            <param name="screenRect">Screen position to display relative to.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupToolTip.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualPopupShadow">
            <summary>
            Displays a shadow effect for a visual popup.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupShadow.#ctor">
            <summary>
            Initialize a new instance of the VisualPopupShadow class. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupShadow.Dispose(System.Boolean)">
            <summary>
            Disposing of instance resources.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupShadow.Show(System.Drawing.Rectangle)">
            <summary>
            Show the popup using the provided rectangle as the screen rect.
            </summary>
            <param name="screenRect">Screen rectangle for showing the popup.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupShadow.DefinePaths(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Define the drawing paths for the shadow.
            </summary>
            <param name="path1">Outer path.</param>
            <param name="path2">Middle path.</param>
            <param name="path3">Inside path.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopupShadow.CreateParams">
            <summary>
            Gets the creation parameters.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupShadow.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="pevent">A PaintEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupShadow.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualPopup">
            <summary>
            Base class used for implementation of popup controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.#ctor(System.Boolean)">
            <summary>
            Initialize a new instance of the VisualPopup class.
            </summary>
            <param name="shadow">Does the popup need a shadow effect.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.#ctor(ComponentFactory.Krypton.Toolkit.IRenderer,System.Boolean)">
            <summary>
            Initialize a new instance of the VisualPopup class.
            </summary>
            <param name="renderer">Drawing renderer.</param>
            <param name="shadow">Does the popup need a shadow effect.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.#ctor(ComponentFactory.Krypton.Toolkit.ViewManager,ComponentFactory.Krypton.Toolkit.IRenderer,System.Boolean)">
            <summary>
            Initialize a new instance of the VisualPopup class.
            </summary>
            <param name="viewManager">View manager instance for managing view display.</param>
            <param name="renderer">Drawing renderer.</param>
            <param name="shadow">Does the popup need a shadow effect.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.Show(System.Drawing.Rectangle)">
            <summary>
            Show the popup using the provided rectangle as the screen rect.
            </summary>
            <param name="screenRect">Screen rectangle for showing the popup.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.Show(System.Drawing.Rectangle,System.Drawing.Size)">
            <summary>
            Show the popup with the given size but relative to the provided parent rectangle.
            </summary>
            <param name="parentScreenRect">Screen rectangle of parent area.</param>
            <param name="popupSize">Size of the popup to show.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.DefineShadowPaths(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Define the drawing paths for the shadow.
            </summary>
            <param name="path1">Outer path.</param>
            <param name="path2">Middle path.</param>
            <param name="path3">Inside path.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.DoesCurrentMouseDownEndAllTracking(System.Windows.Forms.Message,System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause an end to popup tracking.
            </summary>
            <param name="m">Original message.</param>
            <param name="pt">Client coordinates point.</param>
            <returns>True to end tracking; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.DoesCurrentMouseDownContinueTracking(System.Windows.Forms.Message,System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point allow tracking to continue.
            </summary>
            <param name="m">Original message.</param>
            <param name="pt">Client coordinates point.</param>
            <returns>True to continue tracking; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.DoesStackedClientMouseDownBecomeCurrent(System.Windows.Forms.Message,System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause it to become the current tracking popup.
            </summary>
            <param name="m">Original message.</param>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.DoesMouseDownGetEaten(System.Windows.Forms.Message,System.Drawing.Point)">
            <summary>
            Should the mouse down be eaten when the tracking has been ended.
            </summary>
            <param name="m">Original message.</param>
            <param name="pt">Screen coordinates point.</param>
            <returns>True to eat message; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopup.AllowBecomeActiveWhenCurrent">
            <summary>
            Is a change in active window to this popup when it is current allowed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.AllowMouseMove(System.Windows.Forms.Message,System.Drawing.Point)">
            <summary>
            Should the mouse move at provided screen point be allowed.
            </summary>
            <param name="m">Original message.</param>
            <param name="pt">Client coordinates point.</param>
            <returns>True to alow; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.CreateToolStripRenderer">
            <summary>
            Create a tool strip renderer appropriate for the current renderer/palette pair.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.GetResolvedPalette">
            <summary>
            Gets the resolved palette to actually use when drawing.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopup.Renderer">
            <summary>
            Gets access to the current renderer.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopup.DismissedDelegate">
            <summary>
            Gets and sets the delegate to fire when the popup is dismissed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopup.KeyboardInert">
            <summary>
            Gets a value indicating if the keyboard is passed to this popup.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.GetViewManager">
            <summary>
            Gets access to the view manager of the popup.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopup.ViewManager">
            <summary>
            Gets and sets the ViewManager instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopup.NeedPaintDelegate">
            <summary>
            Gets access to the need paint delegate.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopup.EvalInvokePaint">
            <summary>
            Work out if this control needs to use Invoke to force a repaint.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopup.CreateParams">
            <summary>
            Gets the creation parameters.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
            <returns>true if the key was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopup.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualForm">
            <summary>
            Base class that allows a form to have custom chrome applied. You should derive 
            a class from this that performs the specific chrome drawing that is required.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.VisualForm.PaletteChanged">
            <summary>
            Occurs when the palette changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.VisualForm.ApplyCustomChromeChanged">
            <summary>
            Occurs when the use of custom chrome changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.VisualForm.WindowActiveChanged">
            <summary>
            Occurs when the active window setting changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.#ctor">
            <summary>
            Initialize a new instance of the VisualForm class. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.ApplyCustomChrome">
            <summary>
            Gets and sets a value indicating if palette chrome should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.ApplyComposition">
            <summary>
            Gets a value indicating if composition is being applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.AllowComposition">
            <summary>
            Gets a value indicating if composition is allowed to be applied to custom chrome.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.RecalculateComposition">
            <summary>
            used to update the size of the composition area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.Composition">
            <summary>
            Gets and sets the interface to the composition interface cooperating with the form.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.PaletteMode">
            <summary>
            Gets or sets the palette to be applied.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.ResetPaletteMode">
            <summary>
            Resets the PaletteMode property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.Palette">
            <summary>
            Gets and sets the custom palette implementation.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.ResetPalette">
            <summary>
            Resets the Palette property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.Renderer">
            <summary>
            Gets access to the current renderer.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.GetResolvedPalette">
            <summary>
            Gets the resolved palette to actually use when drawing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.CreateToolStripRenderer">
            <summary>
            Create a tool strip renderer appropriate for the current renderer/palette pair.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.SendSysCommand(System.Int32)">
            <summary>
            Send the provided system command to the window for processing.
            </summary>
            <param name="sysCommand">System command.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.SendSysCommand(System.Int32,System.IntPtr)">
            <summary>
            Send the provided system command to the window for processing.
            </summary>
            <param name="sysCommand">System command.</param>
            <param name="lParam">LPARAM value.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.RealWindowBorders">
            <summary>
            Gets the size of the borders requested by the real window.
            </summary>
            <returns>Border sizing.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.PaintCount">
            <summary>
            Gets a count of the number of paints that have occured.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.WindowActive">
            <summary>
            Gets and sets the active state of the window.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.RedrawNonClient">
            <summary>
            Request the non-client area be repainted.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.RecalcNonClient">
            <summary>
            Request the non-client area be recalculated.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.WindowChromeCompositionLayout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,System.Drawing.Rectangle)">
            <summary>
            Perform layout on behalf of the composition element using our root element.
            </summary>
            <param name="context">Layout context.</param>
            <param name="compRect">Rectangle for composition element.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.WindowChromeCompositionPaint(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform painting on behalf of the composition element using our root element.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.KryptonResetCounters">
            <summary>
            Reset the internal counters.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.KryptonLayoutCounter">
            <summary>
            Gets the number of layout cycles performed since last reset.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.KryptonPaintCounter">
            <summary>
            Gets the number of paint cycles performed since last reset.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.ViewManager">
            <summary>
            Gets and sets the ViewManager instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.Redirector">
            <summary>
            Gets access to the palette redirector.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.NeedPaintDelegate">
            <summary>
            Gets access to the need paint delegate.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.ScreenToWindow(System.Drawing.Point)">
            <summary>
            Convert a screen location to a window location.
            </summary>
            <param name="screenPt">Screen point.</param>
            <returns>Point in window coordinates.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.InvalidateNonClient">
            <summary>
            Request the non-client area be repainted.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.InvalidateNonClient(System.Drawing.Rectangle)">
            <summary>
            Request the non-client area be repainted.
            </summary>
            <param name="invalidRect">Area to invalidate.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.InvalidateNonClient(System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Request the non-client area be repainted.
            </summary>
            <param name="invalidRect">Area to invalidate.</param>
            <param name="excludeClientArea">Should client area be excluded.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.RealWindowRectangle">
            <summary>
            Gets rectangle that is the real window rectangle based on Win32 API call.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.StartCapture(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Start capturing mouse input for a particular element that is inside the chrome.
            </summary>
            <param name="element">Target element for the capture events.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
            <param name="x">The new Left property value of the control.</param>
            <param name="y">The new Top property value of the control.</param>
            <param name="width">The new Width property value of the control.</param>
            <param name="height">The new Height property value of the control.</param>
            <param name="specified">A bitwise combination of the BoundsSpecified values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnActivated(System.EventArgs)">
            <summary>
            Raises the Activated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnDeactivate(System.EventArgs)">
            <summary>
            Raises the Deactivate event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="e">A PaintEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnShown(System.EventArgs)">
            <summary>
            Raises the Shown event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.SuspendPaint">
            <summary>
            Suspend processing of non-client painting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.ResumePaint">
            <summary>
            Resume processing of non-client painting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.CreateRedirector">
            <summary>
            Create the redirector instance.
            </summary>
            <returns>PaletteRedirect derived class.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Processes a notification from palette storage of a button spec change.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnPaletteChanged(System.EventArgs)">
            <summary>
            Raises the PaletteChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnApplyCustomChromeChanged(System.EventArgs)">
            <summary>
            Raises the ApplyCustomChrome event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnAllowFormChromeChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the AllowFormChromeChanged event is fired for the current palette.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnWM_NCCALCSIZE(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCCALCSIZE message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnWM_NCPAINT(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCPAINT message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnWM_NCHITTEST(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCHITTEST message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnCompWM_NCHITTEST(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCHITTEST message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnWM_NCACTIVATE(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCACTIVATE message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnPaintNonClient(System.Windows.Forms.Message@)">
            <summary>
            Process a windows message that requires the non client area be repainted.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnWM_NCMOUSEMOVE(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCMOUSEMOVE message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnWM_NCLBUTTONDOWN(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCLBUTTONDOWN message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>4
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnWM_NCLBUTTONUP(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_LBUTTONUP message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnWM_NCMOUSELEAVE(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCMOUSELEAVE message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnWM_MOUSEMOVE(System.Windows.Forms.Message@)">
            <summary>
            Process the OnWM_MOUSEMOVE message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnWM_LBUTTONUP(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_LBUTTONUP message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnWM_NCLBUTTONDBLCLK(System.Windows.Forms.Message@)">
            <summary>
            Process the WM_NCLBUTTONDBLCLK message when overriding window chrome.
            </summary>
            <param name="m">A Windows-based message.</param>
            <returns>True if the message was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnNonClientPaint(System.IntPtr)">
            <summary>
            Perform chrome window painting in the non-client areas.
            </summary>
            <param name="hWnd">Window handle of window being painted.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.OnWindowActiveChanged">
            <summary>
            Called when the active state of the window changes.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualForm.NeedLayout">
            <summary>
            Gets and sets the need to layout the view.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.WindowChromeStart">
            <summary>
            Perform setup for custom chrome.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.WindowChromeEnd">
            <summary>
            Perform cleanup when custom chrome ending.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.WindowChromeHitTest(System.Drawing.Point,System.Boolean)">
            <summary>
            Perform hit testing.
            </summary>
            <param name="pt">Point in window coordinates.</param>
            <param name="composition">Are we performing composition.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.WindowChromePaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Perform painting of the window chrome.
            </summary>
            <param name="g">Graphics instance to use for drawing.</param>
            <param name="bounds">Bounds enclosing the window chrome.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.WindowChromeNonClientMouseMove(System.Drawing.Point)">
            <summary>
            Perform non-client mouse movement processing.
            </summary>
            <param name="pt">Point in window coordinates.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.WindowChromeLeftMouseDown(System.Drawing.Point)">
            <summary>
            Process the left mouse down event.
            </summary>
            <param name="pt">Window coordinate of the mouse up.</param>
            <returns>True if event is processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.WindowChromeLeftMouseUp(System.Drawing.Point)">
            <summary>
            Process the left mouse up event.
            </summary>
            <param name="pt">Window coordinate of the mouse up.</param>
            <returns>True if event is processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualForm.WindowChromeMouseLeave">
            <summary>
            Perform mouse leave processing.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualPopupManager">
            <summary>
            Manage the filtering of message for popup controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupManager.#ctor">
            <summary>
            Initialize a new instance of the VisualPopupManager class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopupManager.Singleton">
            <summary>
            Gets access to the single instance of the VisualPopupManager class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopupManager.IsShowingCMS">
            <summary>
            Gets a value indicating if currently showing a context menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopupManager.IsTracking">
            <summary>
            Gets a value indicating if currently tracking a popup.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopupManager.CurrentPopup">
            <summary>
            Gets the current visual popup being tracked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPopupManager.StackedPopups">
            <summary>
            Gets the stacked set of popups as an array.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupManager.TrackingByType(System.Type)">
            <summary>
            Gets the popup that matches the proveded type.
            </summary>
            <param name="t">Type to find.</param>
            <returns>Matching instance; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupManager.StartTracking(ComponentFactory.Krypton.Toolkit.VisualPopup)">
            <summary>
            Start tracking the provided popup.
            </summary>
            <param name="popup">Popup instance to track.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupManager.EndAllTracking">
            <summary>
            Finish tracking all popups.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupManager.EndPopupTracking(ComponentFactory.Krypton.Toolkit.VisualPopup)">
            <summary>
            Finish tracking from the current back to and including the provided popup.
            </summary>
            <param name="popup">Popup that needs to be killed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupManager.EndCurrentTracking">
            <summary>
            Finish tracking the current popup.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupManager.ShowContextMenuStrip(System.Windows.Forms.ContextMenuStrip,System.Drawing.Point)">
            <summary>
            Show the provided context strip in a way compatible with any popups.
            </summary>
            <param name="cms">Reference to ContextMenuStrip.</param>
            <param name="screenPt">Screen position for showing the context menu strip.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupManager.ShowContextMenuStrip(System.Windows.Forms.ContextMenuStrip,System.Drawing.Point,System.EventHandler)">
            <summary>
            Show the provided context strip in a way compatible with any popups.
            </summary>
            <param name="cms">Reference to ContextMenuStrip.</param>
            <param name="screenPt">Screen position for showing the context menu strip.</param>
            <param name="cmsFinishDelegate">Delegate to call when strip dismissed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPopupManager.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched.
            </summary>
            <param name="m">The message to be dispatched. You cannot modify this message.</param>
            <returns>true to filter the message and stop it from being dispatched; false to allow the message to continue to the next filter or control.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecFormFixedConverter">
            <summary>
            Add conversion to a string for display in properties window at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormFixedConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="destinationType">A Type that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecFormFixedConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A CultureInfo. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">The Type to convert the value parameter to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.InputControlStyleConverter">
            <summary>
            Custom type converter so that InputControl values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.InputControlStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the InputControlStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.InputControlStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.DataGridViewStyleConverter">
            <summary>
            Custom type converter so that DataGridViewStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DataGridViewStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the DataGridViewStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DataGridViewStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.GridStyleConverter">
            <summary>
            Custom type converter so that GridStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GridStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the GridStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GridStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonDragRectangleEventArgs">
            <summary>
            Details for an event that discovers the rectangle that the mouse has to leave to begin dragging.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonDragRectangleEventArgs.#ctor(System.Drawing.Point)">
            <summary>
            Initialize a new instance of the ButtonDragRectangleEventArgs class.
            </summary>
            <param name="point">Left mouse down point.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonDragRectangleEventArgs.Point">
            <summary>
            Gets access to the left mouse down point.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonDragRectangleEventArgs.DragRect">
            <summary>
            Gets access to the drag rectangle area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonDragRectangleEventArgs.PreDragOffset">
            <summary>
            Gets and sets the need for pre drag offset events.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ContextMenuArgs">
            <summary>
            Details for context menu related events.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuArgs.#ctor">
            <summary>
            Initialize a new instance of the ContextMenuArgs class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuArgs.#ctor(System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Initialize a new instance of the ContextMenuArgs class.
            </summary>
            <param name="cms">Context menu strip that can be customized.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuArgs.#ctor(ComponentFactory.Krypton.Toolkit.KryptonContextMenu)">
            <summary>
            Initialize a new instance of the ContextMenuArgs class.
            </summary>
            <param name="kcm">KryptonContextMenu that can be customized.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuArgs.#ctor(System.Windows.Forms.ContextMenuStrip,ComponentFactory.Krypton.Toolkit.KryptonContextMenu)">
            <summary>
            Initialize a new instance of the ContextMenuArgs class.
            </summary>
            <param name="cms">Context menu strip that can be customized.</param>
            <param name="kcm">KryptonContextMenu that can be customized.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuArgs.ContextMenuStrip">
            <summary>
            Gets access to the context menu strip instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuArgs.KryptonContextMenu">
            <summary>
            Gets access to the KryptonContextMenu instance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.CloseReasonEventArgs">
            <summary>
            Details for close reason event handlers.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CloseReasonEventArgs.#ctor(System.Windows.Forms.ToolStripDropDownCloseReason)">
            <summary>
            Initialize a new instance of the CloseReasonEventArgs class.
            </summary>
            <param name="closeReason">Reason for the close action occuring.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CloseReasonEventArgs.CloseReason">
            <summary>
            Gets access to the reason for the context menu closing.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ColorEventArgs">
            <summary>
            Color event data.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ColorEventArgs.#ctor(System.Drawing.Color)">
            <summary>
            Initialize a new instance of the ColorEventArgs class.
            </summary>
            <param name="color">Color associated with the event.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ColorEventArgs.Color">
            <summary>
            Gets the color.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ContextPositionMenuArgs">
            <summary>
            Details for context menu related events that have a requested relative position.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextPositionMenuArgs.#ctor">
            <summary>
            Initialize a new instance of the ContextMenuArgs class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextPositionMenuArgs.#ctor(System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Initialize a new instance of the ContextMenuArgs class.
            </summary>
            <param name="cms">Context menu strip that can be customized.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextPositionMenuArgs.#ctor(ComponentFactory.Krypton.Toolkit.KryptonContextMenu,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV)">
            <summary>
            Initialize a new instance of the ContextMenuArgs class.
            </summary>
            <param name="kcm">KryptonContextMenu that can be customized.</param>
            <param name="positionH">Relative horizontal position of the KryptonContextMenu.</param>
            <param name="positionV">Relative vertical position of the KryptonContextMenu.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextPositionMenuArgs.#ctor(System.Windows.Forms.ContextMenuStrip,ComponentFactory.Krypton.Toolkit.KryptonContextMenu,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV)">
            <summary>
            Initialize a new instance of the ContextMenuArgs class.
            </summary>
            <param name="cms">Context menu strip that can be customized.</param>
            <param name="kcm">KryptonContextMenu that can be customized.</param>
            <param name="positionH">Relative horizontal position of the KryptonContextMenu.</param>
            <param name="positionV">Relative vertical position of the KryptonContextMenu.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextPositionMenuArgs.PositionH">
            <summary>
            Gets and sets the relative horizontal position of the KryptonContextMenu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextPositionMenuArgs.PositionV">
            <summary>
            Gets and sets the relative vertical position of the KryptonContextMenu.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.BreadCrumbMenuArgs">
            <summary>
            Details of the context menu showing related to a bread crumb.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.BreadCrumbMenuArgs.#ctor(ComponentFactory.Krypton.Toolkit.KryptonBreadCrumbItem,ComponentFactory.Krypton.Toolkit.KryptonContextMenu,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV)">
            <summary>
            Initialize a new instance of the ContextMenuArgs class.
            </summary>
            <param name="crumb">Reference to related crumb.</param>
            <param name="kcm">KryptonContextMenu that can be customized.</param>
            <param name="positionH">Relative horizontal position of the KryptonContextMenu.</param>
            <param name="positionV">Relative vertical position of the KryptonContextMenu.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.BreadCrumbMenuArgs.Crumb">
            <summary>
            Gets and sets the crumb related to the event.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonDragOffsetEventArgs">
            <summary>
            Details for an event that provides a button drag offset value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonDragOffsetEventArgs.#ctor(System.Drawing.Point)">
            <summary>
            Initialize a new instance of the ButtonDragOffsetEventArgs class.
            </summary>
            <param name="offset">Mouse offset for button dragging.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonDragOffsetEventArgs.PointOffset">
            <summary>
            Gets access to the left mouse dragging offer.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewControlHitTestArgs">
            <summary>
            Details for context menu related events.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControlHitTestArgs.#ctor(System.Drawing.Point)">
            <summary>
            Initialize a new instance of the ViewControlHitTestArgs class.
            </summary>
            <param name="pt">Point associated with hit test message.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewControlHitTestArgs.Point">
            <summary>
            Gets access to the point.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewControlHitTestArgs.Result">
            <summary>
            Gets and sets the result.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.DragStartEventCancelArgs">
            <summary>
            Details for an cancellable event that provides a position, offset and control value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DragStartEventCancelArgs.#ctor(System.Drawing.Point,System.Drawing.Point,System.Windows.Forms.Control)">
            <summary>
            Initialize a new instance of the DragStartEventCancelArgs class.
            </summary>
            <param name="point">Point associated with event.</param>
            <param name="offset">Offset associated with event.</param>
            <param name="c">Control that is generating the drag start.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DragStartEventCancelArgs.Offset">
            <summary>
            Gets and sets the offset.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DragStartEventCancelArgs.Control">
            <summary>
            Gets the control starting the drag.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.SplitterMoveRectMenuArgs">
            <summary>
            Provides a movement rectangle that will be used to limit separator movement.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SplitterMoveRectMenuArgs.#ctor(System.Drawing.Rectangle)">
            <summary>
            Initialize a new instance of the SplitterMoveRectMenuArgs class.
            </summary>
            <param name="moveRect">Initial movement rectangle that limits separator movements.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.SplitterMoveRectMenuArgs.MoveRect">
            <summary>
            Gets and sets the movement box for a separator.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.DateTimePickerCloseArgs">
            <summary>
            Details about the context menu that has been closed up on a KryptonDateTimePicker.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DateTimePickerCloseArgs.#ctor(ComponentFactory.Krypton.Toolkit.KryptonContextMenu)">
            <summary>
            Initialize a new instance of the DateTimePickerCloseArgs class.
            </summary>
            <param name="kcm">KryptonContextMenu that can be examined.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DateTimePickerCloseArgs.KryptonContextMenu">
            <summary>
            Gets access to the KryptonContextMenu instance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.DateTimePickerDropArgs">
            <summary>
            Details about the context menu about to be shown when clicking the drop down button on a KryptonDateTimePicker.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DateTimePickerDropArgs.#ctor(ComponentFactory.Krypton.Toolkit.KryptonContextMenu,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH,ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV)">
            <summary>
            Initialize a new instance of the DateTimePickerDropArgs class.
            </summary>
            <param name="kcm">KryptonContextMenu that can be customized.</param>
            <param name="positionH">Relative horizontal position of the KryptonContextMenu.</param>
            <param name="positionV">Relative vertical position of the KryptonContextMenu.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DateTimePickerDropArgs.KryptonContextMenu">
            <summary>
            Gets access to the KryptonContextMenu instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DateTimePickerDropArgs.PositionH">
            <summary>
            Gets and sets the relative horizontal position of the KryptonContextMenu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DateTimePickerDropArgs.PositionV">
            <summary>
            Gets and sets the relative vertical position of the KryptonContextMenu.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PointEventCancelArgs">
            <summary>
            Details for an cancellable event that provides a Point value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PointEventCancelArgs.#ctor(System.Drawing.Point)">
            <summary>
            Initialize a new instance of the PointEventCancelArgs class.
            </summary>
            <param name="point">Point associated with event.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PointEventCancelArgs.Point">
            <summary>
            Gets and sets the point.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ImageSelectEventArgs">
            <summary>
            Image select event data.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ImageSelectEventArgs.#ctor(System.Windows.Forms.ImageList,System.Int32)">
            <summary>
            Initialize a new instance of the ImageSelectEventArgs class.
            </summary>
            <param name="imageList">Defined image list.</param>
            <param name="imageIndex">Index within the image list.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ImageSelectEventArgs.ImageList">
            <summary>
            Gets the image list.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ImageSelectEventArgs.ImageIndex">
            <summary>
            Gets the image index.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PointEventArgs">
            <summary>
            Details for an event that provides a Point value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PointEventArgs.#ctor(System.Drawing.Point)">
            <summary>
            Initialize a new instance of the PointEventArgs class.
            </summary>
            <param name="point">Point associated with event.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PointEventArgs.Point">
            <summary>
            Gets and sets the point.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ToolTipEventArgs">
            <summary>
            Details for a tooltip related event.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipEventArgs.#ctor(ComponentFactory.Krypton.Toolkit.ViewBase,System.Drawing.Point)">
            <summary>
            Initialize a new instance of the ButtonSpecEventArgs class.
            </summary>
            <param name="target">Reference to view element that requires tooltip.</param>
            <param name="screenPt">Screen location of mouse when tooltip was required.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ToolTipEventArgs.Target">
            <summary>
            Gets the view element that is related to the tooltip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ToolTipEventArgs.ScreenPt">
            <summary>
            Gets the screen point of the mouse where tooltip is required.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.TypedHandler`1">
            <summary>
            Delegate used for hooking into TypedCollection events.
            </summary>
            <typeparam name="T">Type of the item inside the TypedCollection.</typeparam>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.TypedCollectionEventArgs`1">
            <summary>
            Details for typed collection related events.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollectionEventArgs`1.#ctor(`0,System.Int32)">
            <summary>
            Initialize a new instance of the TypedCollectionEventArgs class.
            </summary>
            <param name="item">Item effected by event.</param>
            <param name="index">Index of page in the owning collection.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TypedCollectionEventArgs`1.Item">
            <summary>
            Gets the item associated with the event.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TypedCollectionEventArgs`1.Index">
            <summary>
            Gets the index of the item associated with the event.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.BoolFlags31">
            <summary>
            Manages a collection of 31 boolean flags.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.BoolFlags31.Flags">
            <summary>
            Gets and sets the entire flags value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.BoolFlags31.SetFlags(System.Int32)">
            <summary>
            Set all the provided flags to true.
            </summary>
            <param name="flags">Flags to set.</param>
            <return>Set of flags that have changed in value.</return>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.BoolFlags31.ClearFlags(System.Int32)">
            <summary>
            Clear all the provided flags to false.
            </summary>
            <param name="flags">Flags to clear.</param>
            <return>Set of flags that have changed in value.</return>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.BoolFlags31.AreFlagsSet(System.Int32)">
            <summary>
            Are all the provided flags set to true.
            </summary>
            <param name="flags">Flags to test.</param>
            <returns>True if all flags are set; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecAny">
            <summary>
            Button specification that can be assigned as any button type.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.#ctor">
            <summary>
            Initialize a new instance of the AnyButtonSpec class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.Clone">
            <summary>
            Make a clone of this object.
            </summary>
            <returns>New instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.Visible">
            <summary>
            Gets and sets if the button should be shown.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.ResetVisible">
            <summary>
            Resets the Visible property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.Enabled">
            <summary>
            Gets and sets the button enabled state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.ResetEnabled">
            <summary>
            Resets the Enabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.Checked">
            <summary>
            Gets and sets if the button is checked or capable of being checked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.ResetChecked">
            <summary>
            Resets the Checked property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.Type">
            <summary>
            Gets and sets the button type.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.ResetType">
            <summary>
            Resets the Type property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.CopyFrom(ComponentFactory.Krypton.Toolkit.ButtonSpecAny)">
            <summary>
            Value copy form the provided source to ourself.
            </summary>
            <param name="source">Source instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.GetVisible(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.GetEnabled(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.GetChecked(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.OnButtonSpecPropertyChanged(System.String)">
            <summary>
            Raises the ButtonSpecPropertyChanged event.
            </summary>
            <param name="propertyName">Name of the appearance property that has changed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecAny.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerDraw">
            <summary>
            Manage a collection of button specs for placing within a collection of ViewDrawDocker instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerDraw.#ctor(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase,ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase,ComponentFactory.Krypton.Toolkit.ViewDrawDocker[],ComponentFactory.Krypton.Toolkit.IPaletteMetric[],ComponentFactory.Krypton.Toolkit.PaletteMetricInt[],ComponentFactory.Krypton.Toolkit.PaletteMetricPadding[],ComponentFactory.Krypton.Toolkit.GetToolStripRenderer,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ButtonSpecManagerDraw class.
            </summary>
            <param name="control">Control that owns the button manager.</param>
            <param name="redirector">Palette redirector.</param>
            <param name="variableSpecs">Variable set of button specifications.</param>
            <param name="fixedSpecs">Fixed set of button specifications.</param>
            <param name="viewDockers">Array of target view dockers.</param>
            <param name="viewMetrics">Array of target metric providers.</param>
            <param name="viewMetricInt">Array of target metrics for outside/inside spacer size.</param>
            <param name="viewMetricPaddings">Array of target metrics for button padding.</param>
            <param name="getRenderer">Delegate for returning a tool strip renderer.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerDraw.#ctor(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase,ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase,ComponentFactory.Krypton.Toolkit.ViewDrawDocker[],ComponentFactory.Krypton.Toolkit.IPaletteMetric[],ComponentFactory.Krypton.Toolkit.PaletteMetricInt[],ComponentFactory.Krypton.Toolkit.PaletteMetricInt[],ComponentFactory.Krypton.Toolkit.PaletteMetricPadding[],ComponentFactory.Krypton.Toolkit.GetToolStripRenderer,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ButtonSpecManagerDraw class.
            </summary>
            <param name="control">Control that owns the button manager.</param>
            <param name="redirector">Palette redirector.</param>
            <param name="variableSpecs">Variable set of button specifications.</param>
            <param name="fixedSpecs">Fixed set of button specifications.</param>
            <param name="viewDockers">Array of target view dockers.</param>
            <param name="viewMetrics">Array of target metric providers.</param>
            <param name="viewMetricIntOutside">Array of target metrics for outside spacer size.</param>
            <param name="viewMetricIntInside">Array of target metrics for inside spacer size.</param>
            <param name="viewMetricPaddings">Array of target metrics for button padding.</param>
            <param name="getRenderer">Delegate for returning a tool strip renderer.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerDraw.DockerCount">
            <summary>
            Gets the number of dockers.
            </summary>
            <returns>Number of dockers.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerDraw.DockerIndex(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the index of the provided docker.
            </summary>
            <param name="viewDocker">View docker reference.</param>
            <returns>Index of docker; otherwise -1.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerDraw.IndexDocker(System.Int32)">
            <summary>
            Gets the docker at the specified index.
            </summary>
            <param name="i">Index.</param>
            <returns>View docker reference; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerDraw.DockerOrientation(System.Int32)">
            <summary>
            Gets the orientation of the docker at the specified index.
            </summary>
            <param name="i">Index.</param>
            <returns>VisualOrientation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerDraw.GetDockerForeground(System.Int32)">
            <summary>
            Gets the element that represents the foreground color.
            </summary>
            <param name="i">Index.</param>
            <returns>View content instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerDraw.AddViewToDocker(System.Int32,ComponentFactory.Krypton.Toolkit.ViewDockStyle,ComponentFactory.Krypton.Toolkit.ViewBase,System.Boolean)">
            <summary>
            Add a view element to a docker.
            </summary>
            <param name="i">Index of view docker.</param>
            <param name="dockStyle">Dock style for placement.</param>
            <param name="view">Actual view to add.</param>
            <param name="usingSpacers">Are view spacers being used.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerDraw.AddSpacersToDocker(System.Int32,ComponentFactory.Krypton.Toolkit.ViewLayoutMetricSpacer,ComponentFactory.Krypton.Toolkit.ViewLayoutMetricSpacer)">
            <summary>
            Add the spacing views into the indexed docker.
            </summary>
            <param name="i">Index of docker.</param>
            <param name="spacerL">Spacer for the left side.</param>
            <param name="spacerR">Spacer for the right side.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecView">
            <summary>
            Create and manage the view for a ButtonSpec definition.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecView.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding,ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase,ComponentFactory.Krypton.Toolkit.ButtonSpec)">
            <summary>
            Initialize a new instance of the ButtonSpecView class.
            </summary>
            <param name="redirector">Palette redirector.</param>
            <param name="paletteMetric">Source for metric values.</param>
            <param name="metricPadding">Padding metric for border padding.</param>
            <param name="manager">Reference to owning manager.</param>
            <param name="buttonSpec">Access</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecView.Manager">
            <summary>
            Gets access to the owning manager.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecView.ButtonSpec">
            <summary>
            Gets access to the monitored button spec
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecView.ViewCenter">
            <summary>
            Gets access to the view centering that contains the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecView.ViewButton">
            <summary>
            Gets access to the view centering that contains the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecView.RemapPalette">
            <summary>
            Gets access to the remapping palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecView.DrawButtonSpecOnComposition">
            <summary>
            Gets and sets the composition setting for the button.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecView.PerformNeedPaint(System.Boolean)">
            <summary>
            Requests a repaint and optional layout be performed.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecView.UpdateButtonStyle">
            <summary>
            Update the button style to reflect new button style setting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecView.UpdateVisible">
            <summary>
            Update view button to reflect new button visible setting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecView.UpdateEnabled">
            <summary>
            Update view button to reflect new button enabled setting.
            </summary>
            <returns>True is a change in state has occured.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecView.UpdateChecked">
            <summary>
            Update view button to reflect new button checked setting.
            </summary>
            <returns>True is a change in state has occured.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecView.Destruct">
            <summary>
            Destruct the previously created views.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecView.CreateController(ComponentFactory.Krypton.Toolkit.ViewDrawButton,ComponentFactory.Krypton.Toolkit.NeedPaintHandler,System.Windows.Forms.MouseEventHandler)">
            <summary>
            Create a button controller for the view.
            </summary>
            <param name="viewButton">View to be controlled.</param>
            <param name="needPaint">Paint delegate.</param>
            <param name="clickHandler">Reference to click handler.</param>
            <returns>Controller instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecView.OnFinishDelegate(System.Object,System.EventArgs)">
            <summary>
            Processes the finish of the button being pressed.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecView.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecView.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image transparent color.
            </summary>
            <param name="state">The state for which the image color is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecView.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecView.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpec">
            <summary>
            Specifition for a button.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonSpec.Click">
            <summary>
            Occurs whenever a button specification property has changed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonSpec.ButtonSpecPropertyChanged">
            <summary>
            Occurs whenever a button specification property has changed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.#ctor">
            <summary>
            Initialize a new instance of the ButtonSpec class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ToString">
            <summary>
            Returns a string that represents the current defaulted state.
            </summary>
            <returns>A string that represents the current defaulted state.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.Clone">
            <summary>
            Make a clone of this object.
            </summary>
            <returns>New instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.Image">
            <summary>
            Gets and sets the button image.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetImage">
            <summary>
            Resets the Image property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.ImageTransparentColor">
            <summary>
            Gets and sets the button image.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetImageTransparentColor">
            <summary>
            Resets the ImageTransparentColor property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.ImageStates">
            <summary>
            Gets access to the state specific images for the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.Text">
            <summary>
            Gets and sets the button text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.ExtraText">
            <summary>
            Gets and sets the button extra text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetExtraText">
            <summary>
            Resets the ExtraText property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.ToolTipImage">
            <summary>
            Gets and sets the button tooltip image.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetToolTipImage">
            <summary>
            Resets the ToolTipImage property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.ToolTipImageTransparentColor">
            <summary>
            Gets and sets the tooltip image transparent color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetToolTipImageTransparentColor">
            <summary>
            Resets the ToolTipImageTransparentColor property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.ToolTipTitle">
            <summary>
            Gets and sets the button title tooltip text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetToolTipTitle">
            <summary>
            Resets the ToolTipTitle property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.ToolTipBody">
            <summary>
            Gets and sets the button body tooltip text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetToolTipBody">
            <summary>
            Resets the ToolTipBody property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.ToolTipStyle">
            <summary>
            Gets and sets the tooltip label style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetToolTipStyle">
            <summary>
            Resets the ToolTipStyle property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.UniqueName">
            <summary>
            Gets and sets the unique name of the ButtonSpec.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetUniqueName">
            <summary>
            Resets the UniqueName property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.AllowInheritImage">
            <summary>
            Gets and sets if the button image be inherited if defined as null.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetAllowInheritImage">
            <summary>
            Resets the AllowInheritImage property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.AllowInheritText">
            <summary>
            Gets and sets if the button text be inherited if defined as empty.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetAllowInheritText">
            <summary>
            Resets the AllowInheritText property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.AllowInheritExtraText">
            <summary>
            Gets and sets if the button extra text be inherited if defined as empty.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetAllowInheritExtraText">
            <summary>
            Resets the AllowInheritExtraText property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.AllowInheritToolTipTitle">
            <summary>
            Gets and sets if the button tooltip title be inherited if defined as empty.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetAllowInheritToolTipTitle">
            <summary>
            Resets the AllowInheritToolTipTitle property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.AllowComponent">
            <summary>
            Gets a value indicating if the component is allowed to be selected at design time.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.ColorMap">
            <summary>
            Gets and sets image color to remap to container foreground.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetColorMap">
            <summary>
            Resets the ColorMap property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.Style">
            <summary>
            Gets and sets the button style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetStyle">
            <summary>
            Resets the Style property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.Orientation">
            <summary>
            Gets and sets the button orientation.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ResetOrientation">
            <summary>
            Resets the Orientation property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.Edge">
            <summary>
            Gets and sets the header edge to display the button against.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.ContextMenuStrip">
            <summary>
            Gets and sets the context menu strip for the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.KryptonContextMenu">
            <summary>
            Gets and sets the krypton context menu for the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.Owner">
            <summary>
            Gets and sets user-defined data associated with the object.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.Tag">
            <summary>
            Gets and sets user-defined data associated with the object.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.CopyFrom(ComponentFactory.Krypton.Toolkit.ButtonSpec)">
            <summary>
            Value copy from the provided source to ourself.
            </summary>
            <param name="source">Source instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.PerformClick">
            <summary>
            Generates a Click event for the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.PerformClick(System.EventArgs)">
            <summary>
            Generates a Click event for the control.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetImage(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the button image.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <param name="state">State for which an image is needed.</param>
            <returns>Button image.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the image transparent color.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetShortText(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button short text.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Short text string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetLongText(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button long text.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Long text string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetToolTipTitle(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button tooltip title text.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Tooltip title string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetColorMap(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the color to remap from the image to the container foreground.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetStyle(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button style.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetOrientation(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button orienation.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button orientation.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetEdge(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the edge for the button.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button edge.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetLocation(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button location.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button location.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetEnabled(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.SetView(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Sets the current view associated with the button spec.
            </summary>
            <param name="view">View element reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetView">
            <summary>
            Get the current view associated with the button spec.
            </summary>
            <returns>View element reference.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetViewEnabled">
            <summary>
            Gets a value indicating if the associated view is enabled.
            </summary>
            <returns>True if enabled; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetVisible(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GetChecked(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.GenerateClick(System.EventArgs)">
            <summary>
            Generates the Click event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.OnButtonSpecPropertyChanged(System.String)">
            <summary>
            Raises the ButtonSpecPropertyChanged event.
            </summary>
            <param name="propertyName">Name of the appearance property that has changed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpec.ProtectedType">
            <summary>
            Gets and sets the actual type of the button.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ConvertToRelativeEdgeAlign(ComponentFactory.Krypton.Toolkit.PaletteRelativeEdgeAlign)">
            <summary>
            Convert from palette specific edge alignment to resolved edge alignment.
            </summary>
            <param name="paletteRelativeEdgeAlign">Palette specific edge alignment.</param>
            <returns>Resolved edge alignment.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ConvertToButtonOrientation(ComponentFactory.Krypton.Toolkit.PaletteButtonOrientation)">
            <summary>
            Convert from palette specific button orientation to resolved button orientation.
            </summary>
            <param name="paletteButtonOrientation">Palette specific button orientation.</param>
            <returns>Resolved button orientation.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpec.ConvertToButtonStyle(ComponentFactory.Krypton.Toolkit.PaletteButtonStyle)">
            <summary>
            Convert from palette specific button style to resolved button style.
            </summary>
            <param name="paletteButtonStyle">Palette specific button style.</param>
            <returns>Resolve button style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase">
            <summary>
            Manage a collection of ButtonSpec instances.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase.Inserting">
            <summary>
            Occurs when a spec is about to be added/inserted to the collection.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase.Inserted">
            <summary>
            Occurs when a spec has been added/inserted to the collection.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase.Removing">
            <summary>
            Occurs when a spec is about to be removed from the collection.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase.Removed">
            <summary>
            Occurs when a spec is removed from the collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase.#ctor(System.Object)">
            <summary>
            Initialize a new instance of the ButtonSpecCollectionBase class.
            </summary>
            <param name="owner">Reference to owning object instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase.Enumerate">
            <summary>
            Provide access to the derived generic enumerator.
            </summary>
            <returns>IEnumerable instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase.Owner">
            <summary>
            Gets and sets the owner of the collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase.OnInserting(ComponentFactory.Krypton.Toolkit.ButtonSpecEventArgs)">
            <summary>
            Raises the Inserting event.
            </summary>
            <param name="e">A NavButtonSpecEventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase.OnInserted(ComponentFactory.Krypton.Toolkit.ButtonSpecEventArgs)">
            <summary>
            Raises the Inserted event.
            </summary>
            <param name="e">A NavButtonSpecEventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase.OnRemoving(ComponentFactory.Krypton.Toolkit.ButtonSpecEventArgs)">
            <summary>
            Raises the Removing event.
            </summary>
            <param name="e">A NavButtonSpecEventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase.OnRemoved(ComponentFactory.Krypton.Toolkit.ButtonSpecEventArgs)">
            <summary>
            Raises the Removed event.
            </summary>
            <param name="e">A NavButtonSpecEventArgs instance containing event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1">
            <summary>
            Manage a collection of ButtonSpec instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.#ctor(System.Object)">
            <summary>
            Initialize a new instance of the ButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.Add(System.Object)">
            <summary>
            Append a button spec to the collection.
            </summary>
            <param name="value">Object reference.</param>
            <returns>The position into which the new button spec was inserted.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.AddRange(`0[])">
            <summary>
            Append an array of button spec instances.
            </summary>
            <param name="array">Array of instances.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.Contains(System.Object)">
            <summary>
            Determines whether the collection contains the button spec.
            </summary>
            <param name="value">Object reference.</param>
            <returns>True if button spec found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.IndexOf(System.Object)">
            <summary>
            Determines the index of the specified spec in the collection.
            </summary>
            <param name="value">Object reference.</param>
            <returns>-1 if not found; otherwise index position.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a button spec to the collection at the specified index.
            </summary>
            <param name="index">Insert index.</param>
            <param name="value">Object reference.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.Remove(System.Object)">
            <summary>
            Removes first occurance of specified object.
            </summary>
            <param name="value">Object reference.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the button spec at the specified index.
            </summary>
            <param name="index">Object index.</param>
            <returns>Object at specified index.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.IndexOf(`0)">
            <summary>
            Determines the index of the specified spec in the collection.
            </summary>
            <param name="item">T reference.</param>
            <returns>-1 if not found; otherwise index position.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts a button spec to the collection at the specified index.
            </summary>
            <param name="index">Insert index.</param>
            <param name="item">T reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the button spec at the specified index.
            </summary>
            <param name="index">Remove index.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the button spec at the specified index.
            </summary>
            <param name="index">T index.</param>
            <returns>T at specified index.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.Item(System.String)">
            <summary>
            Gets the button spec with the provided unique name.
            </summary>
            <param name="uniqueName">Unique name of the ButtonSpec instance.</param>
            <returns>T at specified index.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.Add(`0)">
            <summary>
            Append a button spec to the collection.
            </summary>
            <param name="item">T reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.Contains(`0)">
            <summary>
            Determines whether the collection contains the button spec.
            </summary>
            <param name="item">T reference.</param>
            <returns>True if spec found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies button specs to specified array starting at particular index.
            </summary>
            <param name="array">Target array.</param>
            <param name="arrayIndex">Starting array index.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.Count">
            <summary>
            Gets the number of button specs in collection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.Remove(`0)">
            <summary>
            Removes first occurance of specified spec.
            </summary>
            <param name="item">T reference.</param>
            <returns>True if removed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the current collection to the specified Array. 
            </summary>
            <param name="array">The Array that is the destination of the elements copied from the collection.</param>
            <param name="index">The index in array at which copying begins.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.Clear">
            <summary>
            Remove all pages from the collection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.Enumerate">
            <summary>
            Provide non generic access to the enumerator.
            </summary>
            <returns>IEnumerable instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.GetEnumerator">
            <summary>
            Shallow enumerate over button specs in the collection.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Enumerate using non-generic interface.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerLayout">
            <summary>
            Manage a collection of button specs for placing within a collection of ViewLayoutDocker instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerLayout.#ctor(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase,ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase,ComponentFactory.Krypton.Toolkit.ViewLayoutDocker[],ComponentFactory.Krypton.Toolkit.IPaletteMetric[],ComponentFactory.Krypton.Toolkit.PaletteMetricInt[],ComponentFactory.Krypton.Toolkit.PaletteMetricPadding[],ComponentFactory.Krypton.Toolkit.GetToolStripRenderer,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ButtonSpecManagerLayout class.
            </summary>
            <param name="control">Control that owns the button manager.</param>
            <param name="redirector">Palette redirector.</param>
            <param name="variableSpecs">Variable set of button specifications.</param>
            <param name="fixedSpecs">Fixed set of button specifications.</param>
            <param name="viewDockers">Array of target view dockers.</param>
            <param name="viewMetrics">Array of target metric providers.</param>
            <param name="viewMetricInt">Array of target metrics for outside/inside spacer size.</param>
            <param name="viewMetricPaddings">Array of target metrics for button padding.</param>
            <param name="getRenderer">Delegate for returning a tool strip renderer.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerLayout.#ctor(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase,ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase,ComponentFactory.Krypton.Toolkit.ViewLayoutDocker[],ComponentFactory.Krypton.Toolkit.IPaletteMetric[],ComponentFactory.Krypton.Toolkit.PaletteMetricInt[],ComponentFactory.Krypton.Toolkit.PaletteMetricInt[],ComponentFactory.Krypton.Toolkit.PaletteMetricPadding[],ComponentFactory.Krypton.Toolkit.GetToolStripRenderer,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ButtonSpecManagerLayout class.
            </summary>
            <param name="control">Control that owns the button manager.</param>
            <param name="redirector">Palette redirector.</param>
            <param name="variableSpecs">Variable set of button specifications.</param>
            <param name="fixedSpecs">Fixed set of button specifications.</param>
            <param name="viewDockers">Array of target view dockers.</param>
            <param name="viewMetrics">Array of target metric providers.</param>
            <param name="viewMetricIntOutside">Array of target metrics for outside spacer size.</param>
            <param name="viewMetricIntInside">Array of target metrics for inside spacer size.</param>
            <param name="viewMetricPaddings">Array of target metrics for button padding.</param>
            <param name="getRenderer">Delegate for returning a tool strip renderer.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerLayout.DockerCount">
            <summary>
            Gets the number of dockers.
            </summary>
            <returns>Number of dockers.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerLayout.DockerIndex(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the index of the provided docker.
            </summary>
            <param name="viewDocker">View docker reference.</param>
            <returns>Index of docker; otherwise -1.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerLayout.IndexDocker(System.Int32)">
            <summary>
            Gets the docker at the specified index.
            </summary>
            <param name="i">Index.</param>
            <returns>View docker reference; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerLayout.DockerOrientation(System.Int32)">
            <summary>
            Gets the orientation of the docker at the specified index.
            </summary>
            <param name="i">Index.</param>
            <returns>VisualOrientation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerLayout.GetDockerForeground(System.Int32)">
            <summary>
            Gets the element that represents the foreground color.
            </summary>
            <param name="i">Index.</param>
            <returns>View content instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerLayout.AddViewToDocker(System.Int32,ComponentFactory.Krypton.Toolkit.ViewDockStyle,ComponentFactory.Krypton.Toolkit.ViewBase,System.Boolean)">
            <summary>
            Add a view element to a docker.
            </summary>
            <param name="i">Index of view docker.</param>
            <param name="dockStyle">Dock style for placement.</param>
            <param name="view">Actual view to add.</param>
            <param name="usingSpacers">Are view spacers being used.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerLayout.AddSpacersToDocker(System.Int32,ComponentFactory.Krypton.Toolkit.ViewLayoutMetricSpacer,ComponentFactory.Krypton.Toolkit.ViewLayoutMetricSpacer)">
            <summary>
            Add the spacing views into the indexed docker.
            </summary>
            <param name="i">Index of docker.</param>
            <param name="spacerL">Spacer for the left side.</param>
            <param name="spacerR">Spacer for the right side.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentView">
            <summary>
            Redirect requests for image/text colors to remap.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentView.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.ButtonSpec)">
            <summary>
            Initialize a new instance of the ButtonSpecRemapByContentView class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="buttonSpec">Reference to button specification.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentView.Foreground">
            <summary>
            Gets and sets the foreground to use for color map redirection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentView.PaletteContent">
            <summary>
            Gets the palette content to use for remapping.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentView.PaletteState">
            <summary>
            Gets the state of the remapping area
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentCache">
            <summary>
            Redirect requests for image/text colors to remap.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentCache.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.ButtonSpec)">
            <summary>
            Initialize a new instance of the ButtonSpecRemapByContentCache class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="buttonSpec">Reference to button specification.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentCache.SetPaletteContent(ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Set the palette content to use for remapping.
            </summary>
            <param name="paletteContent">Palette for requesting foreground colors.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentCache.SetPaletteState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Set the palette state of the remapping element.
            </summary>
            <param name="paletteState">Palette state.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentCache.PaletteContent">
            <summary>
            Gets the palette content to use for remapping.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentCache.PaletteState">
            <summary>
            Gets the state of the remapping area
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.LinkLabelController">
            <summary>
            Process mouse events for a link label control.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.LinkLabelController.Click">
            <summary>
            Occurs when the mouse is used to left click the target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.#ctor(ComponentFactory.Krypton.Toolkit.ViewDrawContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the LinkLabelController class.
            </summary>
            <param name="target">Target for state changes.</param>
            <param name="paletteDisabled">Palette to use in the disabled state.</param>
            <param name="paletteNormal">Palette to use in the normal state.</param>
            <param name="paletteTracking">Palette to use in the tracking state.</param>
            <param name="palettePressed">Palette to use in the pressed state.</param>
            <param name="pressed">Override to update with the pressed state.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.LinkLabelController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.LinkLabelController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.LinkLabelController.Target">
            <summary>
            Gets access to the associated target of the controller.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.Update(System.Windows.Forms.Control)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="c">Control that controller is operating within.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.LinkLabelController.IsOperating">
            <summary>
            Get a value indicating if the controller is operating
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.LinkLabelController.IsOnlyPressedWhenOver">
            <summary>
            Gets a value indicating if the state is pressed only when over button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.LinkLabelController.Captured">
            <summary>
            Gets a value indicating if mouse input is being captured.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.UpdateTargetState(System.Windows.Forms.Control)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="c">Owning control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the target with correct state and palette.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.UpdateTargetPalette">
            <summary>
            Update the palette to match the target state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.OnClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge">
            <summary>
            Display text and images with the styling features of the Krypton Toolkit
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.#ctor">
            <summary>
            Initialize a new instance of the KryptonBorderEdge class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.TabIndex">
            <summary>
            Gets or sets the tab order of the KryptonSplitterPanel within its KryptonSplitContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.TabStop">
            <summary>
            Gets or sets a value indicating whether the user can give the focus to this KryptonSplitterPanel using the TAB key.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.AutoSize">
            <summary>
            Gets and sets the automatic resize of the control to fit contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.AutoSizeMode">
            <summary>
            Gets and sets the auto size mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.BorderStyle">
            <summary>
            Gets and sets the border style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.Orientation">
            <summary>
            Gets and sets the orientation of the border edge used to determine sizing.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.StateCommon">
            <summary>
            Gets access to the common border edge appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.StateDisabled">
            <summary>
            Gets access to the disabled border edge appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.StateNormal">
            <summary>
            Gets access to the normal border edge appearance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Get the preferred size of the control based on a proposed size.
            </summary>
            <param name="proposedSize">Starting size proposed by the caller.</param>
            <returns>Calculated preferred size.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonBorderEdge.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.TabStyleConverter">
            <summary>
            Custom type converter so that TabStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TabStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the TabStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TabStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.TabBorderStyleConverter">
            <summary>
            Custom type converter so that TabBorderStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TabBorderStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the TabBorderStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TabBorderStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDrawBordersConverter">
            <summary>
            Custom type converter so that PaletteDrawBorders values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDrawBordersConverter.#ctor">
            <summary>
            Initialize a new instance of the PaletteDrawBordersConverter clas.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDrawBordersConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A CultureInfo object. If a null reference the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">The Type to convert the value parameter to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDrawBordersConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTextTrimConverter">
            <summary>
            Custom type converter so that PaletteTextTrim values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTextTrimConverter.#ctor">
            <summary>
            Initialize a new instance of the PaletteTextTrimConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTextTrimConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteButtonOrientationConverter">
            <summary>
            Custom type converter so that PaletteButtonOrientation values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteButtonOrientationConverter.#ctor">
            <summary>
            Initialize a new instance of the PaletteButtonOrientation clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteButtonOrientationConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteImageEffectConverter">
            <summary>
            Custom type converter so that PaletteImageEffect values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteImageEffectConverter.#ctor">
            <summary>
            Initialize a new instance of the PaletteImageEffectConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteImageEffectConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteImageStyleConverter">
            <summary>
            Custom type converter so that PaletteImageStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteImageStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the PaletteImageStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteImageStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonLinkBehaviorConverter">
            <summary>
            Custom type converter so that KryptonLinkBehavior values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLinkBehaviorConverter.#ctor">
            <summary>
            Initialize a new instance of the KryptonLinkBehaviorConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLinkBehaviorConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.Clipping">
            <summary>
            Restrict graphics clipping using the provided path/region instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.Clipping.#ctor(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Initialize a new instance of the Clipping class.
            </summary>
            <param name="graphics">Graphics context.</param>
            <param name="path">Path to clip.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.Clipping.#ctor(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
            <summary>
            Initialize a new instance of the Clipping class.
            </summary>
            <param name="graphics">Graphics context.</param>
            <param name="path">Path to clip.</param>
            <param name="exclude">Exclude path from clipping.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.Clipping.#ctor(System.Drawing.Graphics,System.Drawing.Region)">
            <summary>
            Initialize a new instance of the Clipping class.
            </summary>
            <param name="graphics">Graphics context.</param>
            <param name="region">Clipping region.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.Clipping.#ctor(System.Drawing.Graphics,System.Drawing.Region,System.Boolean)">
            <summary>
            Initialize a new instance of the Clipping class.
            </summary>
            <param name="graphics">Graphics context.</param>
            <param name="region">Clipping region.</param>
            <param name="exclude">Exclude region from clipping.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.Clipping.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Initialize a new instance of the Clipping class.
            </summary>
            <param name="graphics">Graphics context.</param>
            <param name="rect">Clipping rectangle.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.Clipping.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Initialize a new instance of the Clipping class.
            </summary>
            <param name="graphics">Graphics context.</param>
            <param name="rect">Clipping rectangle.</param>
            <param name="exclude">Exclude rectangle from clipping.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.Clipping.Dispose">
            <summary>
            Reverse the smoothing mode change.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.AntiAlias">
            <summary>
            Set the SmoothingMode=AntiAlias until instance disposed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.AntiAlias.#ctor(System.Drawing.Graphics)">
            <summary>
            Initialize a new instance of the UseAntiAlias class.
            </summary>
            <param name="g">Graphics instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.AntiAlias.Dispose">
            <summary>
            Revert the SmoothingMode back to original setting.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.AntiAliasNone">
            <summary>
            Set the SmoothingMode=None until instance disposed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.AntiAliasNone.#ctor(System.Drawing.Graphics)">
            <summary>
            Initialize a new instance of the AntiAliasNone class.
            </summary>
            <param name="g">Graphics instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.AntiAliasNone.Dispose">
            <summary>
            Revert the SmoothingMode back to original setting.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ContextMenuProvider">
            <summary>
            Implementation class used to provide context menu details to view elements.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.Dispose">
            <summary>
            Raises the Dispose event.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.Closing">
            <summary>
            Raises the Closing event.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.Close">
            <summary>
            Raises the Close event.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.#ctor(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,ComponentFactory.Krypton.Toolkit.ViewContextMenuManager,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ContextMenuProvider class.
            </summary>
            <param name="provider">Original provider.</param>
            <param name="needPaintDelegate">Delegate for requesting paint changes.</param>
            <param name="viewManager">Reference to view manager.</param>
            <param name="viewColumns">Columns view element.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.#ctor(ComponentFactory.Krypton.Toolkit.KryptonContextMenu,ComponentFactory.Krypton.Toolkit.ViewContextMenuManager,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteMode,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRedirectContextMenu,ComponentFactory.Krypton.Toolkit.NeedPaintHandler,System.Boolean)">
            <summary>
            Initialize a new instance of the ContextMenuProvider class.
            </summary>
            <param name="contextMenu">Originating context menu instance.</param>
            <param name="viewManager">Reference to view manager.</param>
            <param name="viewColumns">Columns view element.</param>
            <param name="palette">Local palette setting to use initially.</param>
            <param name="paletteMode">Palette mode setting to use initially.</param>
            <param name="redirector">Redirector used for obtaining palette values.</param>
            <param name="redirectorImages">Redirector used for obtaining images.</param>
            <param name="needPaintDelegate">Delegate for requesting paint changes.</param>
            <param name="enabled">Enabled state of the context menu.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.#ctor(ComponentFactory.Krypton.Toolkit.ViewContextMenuManager,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteMode,ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect,ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemState,ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemState,ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateHighlight,ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateChecked,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRedirectContextMenu,ComponentFactory.Krypton.Toolkit.NeedPaintHandler,System.Boolean)">
            <summary>
            Initialize a new instance of the ContextMenuProvider class.
            </summary>
            <param name="viewManager">Reference to view manager.</param>
            <param name="viewColumns">Columns view element.</param>
            <param name="palette">Local palette setting to use initially.</param>
            <param name="paletteMode">Palette mode setting to use initially.</param>
            <param name="stateCommon">State used to provide common palette values.</param>
            <param name="stateNormal">State used to provide normal palette values.</param>
            <param name="stateDisabled">State used to provide disabled palette values.</param>
            <param name="stateHighlight">State used to provide highlight palette values.</param>
            <param name="stateChecked">State used to provide checked palette values.</param>
            <param name="redirector">Redirector used for obtaining palette values.</param>
            <param name="redirectorImages">Redirector used for obtaining images.</param>
            <param name="needPaintDelegate">Delegate for requesting paint changes.</param>
            <param name="enabled">Enabled state of the context menu.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.OnDispose(System.EventArgs)">
            <summary>
            Fires the Dispose event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Fires the Closing event.
            </summary>
            <param name="cea">An CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.OnClose(ComponentFactory.Krypton.Toolkit.CloseReasonEventArgs)">
            <summary>
            Fires the Close event.
            </summary>
            <param name="e">A CloseReasonEventArgs containing the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.HasParentProvider">
            <summary>
            Does this provider have a parent provider.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderEnabled">
            <summary>
            Is the entire context menu enabled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderCanCloseMenu">
            <summary>
            Is context menu capable of being closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderShowSubMenuFixed(ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem)">
            <summary>
            Should the sub menu be shown at fixed screen location for this menu item.
            </summary>
            <param name="menuItem">Menu item that needs to show sub menu.</param>
            <returns>True if the sub menu should be a fixed size.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderShowSubMenuFixedRect(ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem)">
            <summary>
            Should the sub menu be shown at fixed screen location for this menu item.
            </summary>
            <param name="menuItem">Menu item that needs to show sub menu.</param>
            <returns>Screen rectangle to use as display rectangle.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderCloseReason">
            <summary>
            Sets the reason for the context menu being closed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderShowHorz">
            <summary>
            Gets and sets the horizontal setting used to position the menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderShowVert">
            <summary>
            Gets and sets the vertical setting used to position the menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderViewColumns">
            <summary>
            Gets access to the layout for context menu columns.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderViewManager">
            <summary>
            Gets access to the context menu specific view manager.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderStateCommon">
            <summary>
            Gets access to the context menu common state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderStateDisabled">
            <summary>
            Gets access to the context menu disabled state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderStateNormal">
            <summary>
            Gets access to the context menu normal state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderStateHighlight">
            <summary>
            Gets access to the context menu highlight state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderStateChecked">
            <summary>
            Gets access to the context menu checked state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderImages">
            <summary>
            Gets access to the context menu images.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderPalette">
            <summary>
            Gets access to the custom palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderPaletteMode">
            <summary>
            Gets access to the palette mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderRedirector">
            <summary>
            Gets access to the context menu redirector.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuProvider.ProviderNeedPaintDelegate">
            <summary>
            Gets a delegate used to indicate a repaint is required.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ScreenObscurer">
            <summary>
            Used to obscrure an area of the screen to hide form changes underneath.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ScreenObscurer.ObscurerForm.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="e">An PaintEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ScreenObscurer.ObscurerForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">An PaintEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ScreenObscurer.#ctor">
            <summary>
            Initialize a new instance of the ControlObscurer class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ScreenObscurer.#ctor(System.Windows.Forms.Form,System.Boolean)">
            <summary>
            Initialize a new instance of the ControlObscurer class.
            </summary>
            <param name="f">Form to obscure.</param>
            <param name="designMode">Is the source in design mode.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ScreenObscurer.#ctor(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Initialize a new instance of the ControlObscurer class.
            </summary>
            <param name="c">Control to obscure.</param>
            <param name="designMode">Is the source in design mode.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ScreenObscurer.Cover(System.Windows.Forms.Form)">
            <summary>
            Use the obscurer to cover the provided control.
            </summary>
            <param name="f">Form to obscure.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ScreenObscurer.Cover(System.Windows.Forms.Control)">
            <summary>
            Use the obscurer to cover the provided control.
            </summary>
            <param name="c">Control to obscure.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ScreenObscurer.Uncover">
            <summary>
            If covering an area then uncover it now.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ScreenObscurer.Dispose">
            <summary>
            Hide the obscurer from display.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.GlobalStrings">
            <summary>
            Expose a global set of strings used within Krypton and that are localizable.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GlobalStrings.#ctor">
            <summary>
            Initialize a new instance of the Clipping class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GlobalStrings.ToString">
            <summary>
            Returns a string that represents the current defaulted state.
            </summary>
            <returns>A string that represents the current defaulted state.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GlobalStrings.IsDefault">
            <summary>
            Gets a value indicating if all the strings are default values.
            </summary>
            <returns>True if all values are defaulted; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GlobalStrings.Reset">
            <summary>
            Reset all strings to default values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GlobalStrings.OK">
            <summary>
            Gets and sets the OK string used in message box buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GlobalStrings.Cancel">
            <summary>
            Gets and sets the Cancel string used in message box buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GlobalStrings.Yes">
            <summary>
            Gets and sets the Yes string used in message box buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GlobalStrings.No">
            <summary>
            Gets and sets the No string used in message box buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GlobalStrings.Abort">
            <summary>
            Gets and sets the Abort string used in message box buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GlobalStrings.Retry">
            <summary>
            Gets and sets the Retry string used in message box buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GlobalStrings.Ignore">
            <summary>
            Gets and sets the Ignore string used in message box buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GlobalStrings.Close">
            <summary>
            Gets and sets the Close string used in message box buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GlobalStrings.Today">
            <summary>
            Gets and sets the Close string used in calendars.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.CorrectContextControl">
            <summary>
            Temporary setup of the provided control in the context.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CorrectContextControl.#ctor(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,System.Windows.Forms.Control)">
            <summary>
            Initialize a new instance of the CorrectContextControl class.
            </summary>
            <param name="context">Context to update.</param>
            <param name="control">Actual parent control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CorrectContextControl.Dispose">
            <summary>
            Cleanup settings.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.DWM">
            <summary>
            Helper routines for interacting with the Desktop Window Manager.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DWM.IsCompositionEnabled">
            <summary>
            Is composition currently enabled for the deskop.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DWM.ExtendFrameIntoClientArea(System.IntPtr,System.Windows.Forms.Padding)">
            <summary>
            Change the distance the frame extends into the client area.
            </summary>
            <param name="hWnd">Window handle of form.</param>
            <param name="padding">Distance for each form edge.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonControlCollection">
            <summary>
            Base class for krypton specific control collections.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonControlCollection.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initialize a new instance of the KryptonControlCollection class.
            </summary>
            <param name="owner">Owning control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonControlCollection.AddInternal(System.Windows.Forms.Control)">
            <summary>
            Add a control to the collection overriding the normal checks.
            </summary>
            <param name="control">Control to be added.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonControlCollection.RemoveInternal(System.Windows.Forms.Control)">
            <summary>
            Add a control to the collection overriding the normal checks.
            </summary>
            <param name="control">Control to be added.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonControlCollection.ClearInternal">
            <summary>
            Clear out all the entries in the collection.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonReadOnlyControls">
            <summary>
            Restrict a controls collection of child controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonReadOnlyControls.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initialize a new instance of the KryptonReadOnlyControls class.
            </summary>
            <param name="owner">Owning control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonReadOnlyControls.AllowRemoveInternal">
            <summary>
            Clear out all the entries in the collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonReadOnlyControls.Add(System.Windows.Forms.Control)">
            <summary>
            Adds the specified control to the control collection.
            </summary>
            <param name="value">The Control to add to the control collection.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonReadOnlyControls.AddRange(System.Windows.Forms.Control[])">
            <summary>
            Adds an array of control objects to the collection.
            </summary>
            <param name="controls">An array of Control objects to add to the collection.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonReadOnlyControls.Remove(System.Windows.Forms.Control)">
            <summary>
            Removes the specified control from the control collection.
            </summary>
            <param name="value">The Control to remove from the Control.ControlCollection.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonReadOnlyControls.RemoveByKey(System.String)">
            <summary>
            Removes the child control with the specified key.
            </summary>
            <param name="key">The name of the child control to remove.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonReadOnlyControls.Clear">
            <summary>
            Removes all controls from the collection.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.NullContentValues">
            <summary>
            Implements the IContentValues interface by providing null information.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.NullContentValues.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.NullContentValues.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.NullContentValues.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.NullContentValues.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ToolTipController">
            <summary>
            Snoop incoming mouse messages for an element and inform tooltip manager about them.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipController.#ctor(ComponentFactory.Krypton.Toolkit.ToolTipManager,ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.IMouseController)">
            <summary>
            Initialize an instance of the TooltipController class.
            </summary>
            <param name="manager">Reference to manager of all tooltip functionality.</param>
            <param name="targetElement">Target element that controller is for.</param>
            <param name="targetController">Target controller that we are snooping.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ToolTipController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ToolTipManager">
            <summary>
            Manages when tooltips are displayed in response to provided messages.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ToolTipManager.ShowToolTip">
            <summary>
            Occurs when a tooltip is required to be shown.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ToolTipManager.CancelToolTip">
            <summary>
            Ocurrs when the showing tooltip is no longer required.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipManager.#ctor">
            <summary>
            Initialize a new instance of the TooltipManager class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ToolTipManager.ShowInterval">
            <summary>
            Gets and sets the interval before a tooltip is shown.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ToolTipManager.CloseInterval">
            <summary>
            Gets and sets the interval before a tooltip is closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipManager.MouseEnter(ComponentFactory.Krypton.Toolkit.ViewBase,System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="targetElement">Target element for the mouse message.</param>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipManager.MouseMove(ComponentFactory.Krypton.Toolkit.ViewBase,System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="targetElement">Target element for the mouse message.</param>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipManager.MouseDown(ComponentFactory.Krypton.Toolkit.ViewBase,System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="targetElement">Target element for the mouse message.</param>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipManager.MouseUp(ComponentFactory.Krypton.Toolkit.ViewBase,System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="targetElement">Target element for the mouse message.</param>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipManager.MouseLeave(ComponentFactory.Krypton.Toolkit.ViewBase,System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="targetElement">Target element for the mouse message.</param>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipManager.DoubleClick(ComponentFactory.Krypton.Toolkit.ViewBase,System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="targetElement">Target element for the mouse message.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipManager.OnShowToolTip(ComponentFactory.Krypton.Toolkit.ToolTipEventArgs)">
            <summary>
            Raises the ShowTooltip event.
            </summary>
            <param name="e">A TooltipEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ToolTipManager.OnCancelToolTip">
            <summary>
            Raises the CancelTooltip event.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.TypedRestrictCollection`1">
            <summary>
            Manage a collection of references that must be one of a restricted set of types.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TypedRestrictCollection`1.RestrictTypes">
            <summary>
            Gets an array of types that the collection is restricted to contain.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedRestrictCollection`1.IsTypeAllowed(System.Object)">
            <summary>
            Discover if the incoming type is allowed to be in the collection.
            </summary>
            <param name="value">Instance to test.</param>
            <returns>True if allowed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedRestrictCollection`1.Add(System.Object)">
            <summary>
            Append an item to the collection.
            </summary>
            <param name="value">Object reference.</param>
            <returns>The position into which the new item was inserted.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedRestrictCollection`1.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the collection at the specified index.
            </summary>
            <param name="index">Insert index.</param>
            <param name="value">Object reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedRestrictCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the collection at the specified index.
            </summary>
            <param name="index">Insert index.</param>
            <param name="item">Item reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedRestrictCollection`1.Add(`0)">
            <summary>
            Append an item to the collection.
            </summary>
            <param name="item">Item reference.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.TypedCollection`1">
            <summary>
            Manage a collection of specified reference instances.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Inserting">
            <summary>
            Occurs when an item is about to be added/inserted to the collection.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Inserted">
            <summary>
            Occurs when an item has been added/inserted to the collection.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Removing">
            <summary>
            Occurs when an item is about to be removed from the collection.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Removed">
            <summary>
            Occurs when an item is removed from the collection.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Clearing">
            <summary>
            Occurs when an items are about to be removed from the collection.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Cleared">
            <summary>
            Occurs when an items have been removed from the collection.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Reordered">
            <summary>
            Occurs when items have been reordered inside the collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.#ctor">
            <summary>
            Initialize a new instance of the TypedCollection class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.AddRange(`0[])">
            <summary>
            Append an array of items.
            </summary>
            <param name="itemArray">Array of items to add.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Add(System.Object)">
            <summary>
            Append an item to the collection.
            </summary>
            <param name="value">Object reference.</param>
            <returns>The position into which the new item was inserted.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Contains(System.Object)">
            <summary>
            Determines whether the collection contains the item.
            </summary>
            <param name="value">Object reference.</param>
            <returns>True if item found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.IndexOf(System.Object)">
            <summary>
            Determines the index of the specified item in the collection.
            </summary>
            <param name="value">Object reference.</param>
            <returns>-1 if not found; otherwise index position.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the collection at the specified index.
            </summary>
            <param name="index">Insert index.</param>
            <param name="value">Object reference.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TypedCollection`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Remove(System.Object)">
            <summary>
            Removes first occurance of specified item.
            </summary>
            <param name="value">Object reference.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TypedCollection`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <param name="index">Object index.</param>
            <returns>Object at specified index.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.IndexOf(`0)">
            <summary>
            Determines the index of the specified item in the collection.
            </summary>
            <param name="item">Item reference.</param>
            <returns>-1 if not found; otherwise index position.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the collection at the specified index.
            </summary>
            <param name="index">Insert index.</param>
            <param name="item">Item reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">Remove index.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <param name="index">Item index.</param>
            <returns>Item at specified index.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Item(System.String)">
            <summary>
            Gets the item with the provided unique name.
            </summary>
            <param name="name">Name of the ribbon tab instance.</param>
            <returns>Item at specified index.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.MoveAfter(`0,`0)">
            <summary>
            Move the source item to be immediately after the target item.
            </summary>
            <param name="source">Source item to be moved.</param>
            <param name="target">Target item to place the source item after.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.MoveBefore(`0,`0)">
            <summary>
            Move the source item to be immediately before the target item.
            </summary>
            <param name="source">Source item to be moved.</param>
            <param name="target">Target item to place the source item before.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Add(`0)">
            <summary>
            Append an item to the collection.
            </summary>
            <param name="item">Item reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Clear">
            <summary>
            Remove all items from the collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Contains(`0)">
            <summary>
            Determines whether the collection contains the item.
            </summary>
            <param name="item">Item reference.</param>
            <returns>True if item found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies items to specified array starting at particular index.
            </summary>
            <param name="array">Target array.</param>
            <param name="arrayIndex">Starting array index.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Count">
            <summary>
            Gets the number of items in collection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TypedCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.Remove(`0)">
            <summary>
            Removes first occurance of specified item.
            </summary>
            <param name="item">Item reference.</param>
            <returns>True if removed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the current collection to the specified Array. 
            </summary>
            <param name="array">The Array that is the destination of the elements copied from the collection.</param>
            <param name="index">The index in array at which copying begins.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TypedCollection`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TypedCollection`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.GetEnumerator">
            <summary>
            Shallow enumerate over items in the collection.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Enumerate using non-generic interface.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.OnInserting(ComponentFactory.Krypton.Toolkit.TypedCollectionEventArgs{`0})">
            <summary>
            Raises the Inserting event.
            </summary>
            <param name="e">A KryptonRibbonTabEventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.OnInserted(ComponentFactory.Krypton.Toolkit.TypedCollectionEventArgs{`0})">
            <summary>
            Raises the Inserted event.
            </summary>
            <param name="e">A TypedCollectionEventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.OnRemoving(ComponentFactory.Krypton.Toolkit.TypedCollectionEventArgs{`0})">
            <summary>
            Raises the Removing event.
            </summary>
            <param name="e">A TypedCollectionEventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.OnRemoved(ComponentFactory.Krypton.Toolkit.TypedCollectionEventArgs{`0})">
            <summary>
            Raises the Removed event.
            </summary>
            <param name="e">A TypedCollectionEventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.OnClearing(System.EventArgs)">
            <summary>
            Raises the Clearing event.
            </summary>
            <param name="e">An EventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.OnCleared(System.EventArgs)">
            <summary>
            Raises the Cleared event.
            </summary>
            <param name="e">An EventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TypedCollection`1.OnReordered(System.EventArgs)">
            <summary>
            Raises the Reordered event.
            </summary>
            <param name="e">An EventArgs instance containing event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCollection">
            <summary>
            Manage the items that can be added to a top level context menu collection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCollection.RestrictTypes">
            <summary>
            Gets an array of types that the collection is restricted to contain.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCollection.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCollection.GenerateView(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,System.Object,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,System.Boolean,System.Boolean)">
            <summary>
            Create view elements appropriate for the collection items.
            </summary>
            <param name="provider">Context menu information provider.</param>
            <param name="parent">Parent object.</param>
            <param name="columns">Collection of columns to create view inside.</param>
            <param name="standardStyle">Should the standard style be applied.</param>
            <param name="imageColumn">Should the imgea column be applied.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCollection.OnInserted(ComponentFactory.Krypton.Toolkit.TypedCollectionEventArgs{ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemBase})">
            <summary>
            Raises the Inserted event.
            </summary>
            <param name="e">A TypedCollectionEventArgs instance containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuCollection.OnRemoving(ComponentFactory.Krypton.Toolkit.TypedCollectionEventArgs{ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemBase})">
            <summary>
            Raises the Removing event.
            </summary>
            <param name="e">A TypedCollectionEventArgs instance containing event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemCollection">
            <summary>
            Manage the items that can be added to a standard menu item collection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemCollection.RestrictTypes">
            <summary>
            Gets an array of types that the collection is restricted to contain.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonContextMenuItemCollection.ProcessShortcut(System.Windows.Forms.Keys)">
            <summary>
            Test for the provided shortcut and perform relevant action if a match is found.
            </summary>
            <param name="keyData">Key data to check against shorcut definitions.</param>
            <returns>True if shortcut was handled, otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBackColor1">
            <summary>
            Implement storage for palette background details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackColor1.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteBackColor1 class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackColor1.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackColor1.Draw">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackColor1.GraphicsHint">
            <summary>
            Gets the graphics hint for drawing the background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackColor1.Color2">
            <summary>
            Gets and sets the second background color.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackColor1.ColorStyle">
            <summary>
            Gets and sets the color drawing style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackColor1.ColorAlign">
            <summary>
            Gets and set the color alignment.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackColor1.ColorAngle">
            <summary>
            Gets and sets the color angle.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackColor1.Image">
            <summary>
            Gets and sets the background image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackColor1.ImageStyle">
            <summary>
            Gets and sets the background image style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackColor1.ImageAlign">
            <summary>
            Gets and set the image alignment.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBackLightenColors">
            <summary>
            Override the colors to provide lighter versions.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackLightenColors.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack)">
            <summary>
            Initialize a new instance of the PaletteBackLightenColors class.
            </summary>
            <param name="inherit"></param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackLightenColors.Inherit">
            <summary>
            Gets and sets the palette to inherit from.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackLightenColors.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackLightenColors.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackLightenColors.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackLightenColors.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackLightenColors.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackLightenColors.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackLightenColors.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackLightenColors.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackLightenColors.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackLightenColors.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBackToPalette">
            <summary>
            Redirect all background requests directly to the palette instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackToPalette.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteBackStyle)">
            <summary>
            Initialize a new instance of the PaletteBack class.
            </summary>
            <param name="palette">Source for getting all values.</param>
            <param name="style">Style of values required.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackToPalette.BackStyle">
            <summary>
            Gets and sets the fixed background style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackToPalette.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual background draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackToPalette.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual background graphics hint value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackToPalette.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackToPalette.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackToPalette.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackToPalette.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackToPalette.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackToPalette.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackToPalette.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackToPalette.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette">
            <summary>
            Redirect all border requests directly to the palette instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle)">
            <summary>
            Initialize a new instance of the PaletteBorderToPalette class.
            </summary>
            <param name="palette">Source for getting all values.</param>
            <param name="style">Style of values required.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.BorderStyle">
            <summary>
            Gets and sets the fixed border style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual border draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual borders to draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual border graphics hint value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual first border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border rounding.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderToPalette.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced">
            <summary>
            Allow the content values to be forced to fixed values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Initialize a new instance of the PaletteContentInheritForced class.
            </summary>
            <param name="inherit">Border palette to inherit from.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Gets and sets the palette to inherit from.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.ForceShortTextHCenter">
            <summary>
            Gets and sets if the short text is centered horizontally.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritForced.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContentJustShortText">
            <summary>
            Implement storage but remove accesss to the non short text properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentJustShortText.#ctor">
            <summary>
            Initialize a new instance of the PaletteContentJustShortText class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentJustShortText.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Initialize a new instance of the PaletteContentJustShortText class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentJustShortText.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteContentJustShortText class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentJustShortText.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentJustShortText.LongText">
            <summary>
            Gets access to the long text palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentJustShortText.AdjacentGap">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContentJustImage">
            <summary>
            Implement storage but remove accesss to the non image properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentJustImage.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteContentJustImage class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentJustImage.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentJustImage.DrawFocus">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentJustImage.ShortText">
            <summary>
            Gets access to the short text palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentJustImage.LongText">
            <summary>
            Gets access to the long text palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentJustImage.AdjacentGap">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContentJustText">
            <summary>
            Implement storage but remove accesss to the non text properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentJustText.#ctor">
            <summary>
            Initialize a new instance of the PaletteContentJustText class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentJustText.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Initialize a new instance of the PaletteContentJustText class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentJustText.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteContentJustText class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentJustText.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentJustText.DrawFocus">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentJustText.Image">
            <summary>
            Gets access to the image palette details.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette">
            <summary>
            Redirect all content requests directly to the palette instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteContentStyle)">
            <summary>
            Initialize a new instance of the PaletteContentToPalette class.
            </summary>
            <param name="palette">Source for getting all values.</param>
            <param name="style">Style of values required.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.ContentStyle">
            <summary>
            Gets and sets the fixed content style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content draw with focus value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content image horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content image vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual image drawing effect value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text font value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text rendering hint for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text trimming for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text horizontal multiline alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets an image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text font value.
            </summary>
            <returns>Font value.</returns>
            <param name="state">Palette value should be applicable to this state.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text rendering hint for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text trimming for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text horizontal multiline alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets an image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentToPalette.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritOverride">
            <summary>
            Inherit properties from primary source in preference to the backup source.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritOverride.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteElementColor,ComponentFactory.Krypton.Toolkit.IPaletteElementColor)">
            <summary>
            Initialize a new instance of the PaletteElementColorInheritOverride class.
            </summary>
            <param name="primary">First choice inheritence.</param>
            <param name="backup">Backup inheritence.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritOverride.SetPalettes(ComponentFactory.Krypton.Toolkit.IPaletteElementColor,ComponentFactory.Krypton.Toolkit.IPaletteElementColor)">
            <summary>
            Update the the primary and backup palettes.
            </summary>
            <param name="primary">New primary palette.</param>
            <param name="backup">New backup palette.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritOverride.Apply">
            <summary>
            Gets and sets a value indicating if override should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritOverride.Override">
            <summary>
            Gets and sets a value indicating if override state should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritOverride.OverrideState">
            <summary>
            Gets and sets the override palette state to use.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritOverride.GetElementColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritOverride.GetElementColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritOverride.GetElementColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritOverride.GetElementColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritOverride.GetElementColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteElementColorRedirect">
            <summary>
            Storage for element color values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteElementColorRedirect class.
            </summary>
            <param name="redirect">Source for inheriting values.</param>
            <param name="element">Element value.</param>
            <param name="needPaint">Delegate for notifying changes in value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteElementColorInherit">
            <summary>
            Provide inheritance of palette element colors.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInherit.GetElementColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInherit.GetElementColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInherit.GetElementColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInherit.GetElementColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInherit.GetElementColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritRedirect">
            <summary>
            Provide inheritance of palette element colors from source redirector.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteElement)">
            <summary>
            Initialize a new instance of the PaletteElementColorInheritRedirect class.
            </summary>
            <param name="redirect">Source for inherit requests.</param>
            <param name="element">Element value..</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritRedirect.Element">
            <summary>
            Gets and sets the element to use when inheriting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritRedirect.GetElementColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritRedirect.GetElementColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritRedirect.GetElementColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritRedirect.GetElementColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColorInheritRedirect.GetElementColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids">
            <summary>
            Redirect back/border/content based on the incoming grid state and style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.KryptonPaletteGrid)">
            <summary>
            Initialize a new instance of the PaletteRedirectTriple class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="grid">Grid reference for directing palette requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the background.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the border.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border drawing style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectGrids.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonBack">
            <summary>
            Redirect back/border ribbon values based on the incoming state of the request.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonBack.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteRedirectRibbonBack class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonBack.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack)">
            <summary>
            Initialize a new instance of the PaletteRedirectRibbonBack class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabledBack">Redirection for back disabled state requests.</param>
            <param name="normalBack">Redirection for back normal state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonBack.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack)">
            <summary>
            Initialize a new instance of the PaletteRedirectRibbonBack class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabledBack">Redirection for back disabled state requests.</param>
            <param name="normalBack">Redirection for back normal state requests.</param>
            <param name="pressedBack">Redirection for back pressed state requests.</param>
            <param name="trackingBack">Redirection for back tracking state requests.</param>
            <param name="selectedBack">Redirection for selected states requests.</param>
            <param name="focusOverrideBack">Redirection for back focus override state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonBack.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabledBack">Redirection for back disabled state requests.</param>
            <param name="normalBack">Redirection for back normal state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonBack.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabledBack">Redirection for back disabled state requests.</param>
            <param name="normalBack">Redirection for back normal state requests.</param>
            <param name="pressedBack">Redirection for back pressed state requests.</param>
            <param name="trackingBack">Redirection for back tracking state requests.</param>
            <param name="selectedBack">Redirection for selected states requests.</param>
            <param name="focusOverrideBack">Redirection for back focus override state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonBack.ResetRedirectStates">
            <summary>
            Reset the redirection states to null.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonBack.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background drawing style for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon back style requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonBack.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonBack.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonBack.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonBack.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonBack.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral">
            <summary>
            Redirect general ribbon values based on the incoming state of the request.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteRedirectRibbonGeneral class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral)">
            <summary>
            Initialize a new instance of the PaletteRedirectRibbonGeneral class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="pressed">Redirection for pressed state requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.GetRibbonDisabledDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the dark disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.GetRibbonDisabledLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the light disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.GetRibbonGroupDialogDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.GetRibbonGroupDialogLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.GetRibbonGroupSeparatorDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.GetRibbonGroupSeparatorLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.GetRibbonMinimizeBarDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.GetRibbonMinimizeBarLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.GetRibbonTabSeparatorColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.GetRibbonTabSeparatorContextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab context separators.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.GetRibbonTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.GetRibbonTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the ribbon font.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.GetRibbonQATButtonDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button dark content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonGeneral.GetRibbonQATButtonLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button light content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonDouble">
            <summary>
            Redirect back/border/text ribbon values based on the incoming state of the request.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonDouble.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteRedirectRibbonDouble class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonDouble.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText)">
            <summary>
            Initialize a new instance of the PaletteRedirectRibbonDouble class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabledBack">Redirection for back disabled state requests.</param>
            <param name="normalBack">Redirection for back normal state requests.</param>
            <param name="pressedBack">Redirection for back pressed state requests.</param>
            <param name="trackingBack">Redirection for back tracking state requests.</param>
            <param name="selectedBack">Redirection for selected states requests.</param>
            <param name="focusOverrideBack">Redirection for back focus override state requests.</param>
            <param name="disabledText">Redirection for text disabled state requests.</param>
            <param name="normalText">Redirection for text normal state requests.</param>
            <param name="pressedText">Redirection for text pressed state requests.</param>
            <param name="trackingText">Redirection for text tracking state requests.</param>
            <param name="selectedText">Redirection for text selected states requests.</param>
            <param name="focusOverrideText">Redirection for text focus override state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonDouble.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabledBack">Redirection for back disabled state requests.</param>
            <param name="normalBack">Redirection for back normal state requests.</param>
            <param name="pressedBack">Redirection for back pressed state requests.</param>
            <param name="trackingBack">Redirection for back tracking state requests.</param>
            <param name="selectedBack">Redirection for selected states requests.</param>
            <param name="focusOverrideBack">Redirection for back focus override state requests.</param>
            <param name="disabledText">Redirection for text disabled state requests.</param>
            <param name="normalText">Redirection for text normal state requests.</param>
            <param name="pressedText">Redirection for text pressed state requests.</param>
            <param name="trackingText">Redirection for text tracking state requests.</param>
            <param name="selectedText">Redirection for text selected states requests.</param>
            <param name="focusOverrideText">Redirection for text focus override state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonDouble.ResetRedirectStates">
            <summary>
            Reset the redirection states to null.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonDouble.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background drawing style for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon back style requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonDouble.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonDouble.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonDouble.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonDouble.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonDouble.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRibbonDouble.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect">
            <summary>
            Storage for ribbon background values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonBackRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Inheritence ribbon back style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background drawing style for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.BackColor1">
            <summary>
            Gets and sets the first background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.ResetBackColor1">
            <summary>
            Reset the BackColor1 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.BackColor2">
            <summary>
            Gets and sets the second background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.ResetBackColor2">
            <summary>
            Reset the BackColor2 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.BackColor3">
            <summary>
            Gets and sets the third background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.ResetBackColor3">
            <summary>
            Reset the BackColor3 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.BackColor4">
            <summary>
            Gets and sets the fourth background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.ResetBackColor4">
            <summary>
            Reset the BackColor4 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.BackColor5">
            <summary>
            Gets and sets the fifth background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.ResetBackColor5">
            <summary>
            Reset the BackColor5 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackRedirect.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect">
            <summary>
            Storage for ribbon background and text values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonDoubleRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Inheritence ribbon back style.</param>
            <param name="textStyle">Inheritence ribbon text style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background drawing style for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.BackColor1">
            <summary>
            Gets and sets the first background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.ResetBackColor1">
            <summary>
            Reset the BackColor1 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.BackColor2">
            <summary>
            Gets and sets the second background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.ResetBackColor2">
            <summary>
            Reset the BackColor2 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.BackColor3">
            <summary>
            Gets and sets the third background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.ResetBackColor3">
            <summary>
            Reset the BackColor3 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.BackColor4">
            <summary>
            Gets and sets the fourth background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.ResetBackColor4">
            <summary>
            Reset the BackColor4 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.BackColor5">
            <summary>
            Gets and sets the fifth background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.ResetBackColor5">
            <summary>
            Reset the BackColor5 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.TextColor">
            <summary>
            Gets and sets the Tab color for the item text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.ResetTextColor">
            <summary>
            Reset the TextColor to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleRedirect.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritOverride">
            <summary>
            Inherit properties from primary source in preference to the backup source.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritOverride.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Initialize a new instance of the PaletteRibbonDoubleInheritOverride class.
            </summary>
            <param name="primaryBack">First choice inheritence background.</param>
            <param name="primaryText">First choice inheritence text.</param>
            <param name="backupBack">Backup inheritence background.</param>
            <param name="backupText">Backup inheritence text.</param>
            <param name="state">Palette state to override.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritOverride.Apply">
            <summary>
            Gets and sets a value indicating if override should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritOverride.Override">
            <summary>
            Gets and sets a value indicating if override state should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritOverride.OverrideState">
            <summary>
            Gets and sets the override palette state to use.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritOverride.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritOverride.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritOverride.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritOverride.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritOverride.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritOverride.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritOverride.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextInheritRedirect">
            <summary>
            Provide inheritance of palette ribbon text properties from source redirector.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextInheritRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle)">
            <summary>
            Initialize a new instance of the PaletteRibbonTextInheritRedirect class.
            </summary>
            <param name="redirect">Source for inherit requests.</param>
            <param name="styleText">Ribbon item text style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextInheritRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextInheritRedirect.StyleText">
            <summary>
            Gets and sets the ribbon text style to use when inheriting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextInheritRedirect.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextInherit">
            <summary>
            Provide inheritance of palette ribbon text properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextInherit.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonText">
            <summary>
            Storage for ribbon text values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonText.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonText class.
            </summary>
            <param name="needPaint">Delegate for notifying changes in value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonText.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteRibbonText,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonText class.
            </summary>
            <param name="inheritText">Source for inheriting text values.</param>
            <param name="needPaint">Delegate for notifying changes in value.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonText.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonText.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteRibbonText)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonText.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonText.TextColor">
            <summary>
            Gets and sets the color for the item text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonText.ResetTextColor">
            <summary>
            Reset the TextColor to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonText.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect">
            <summary>
            Provide inheritance of palette ribbon general properties from source redirector.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Initialize a new instance of the PaletteRibbonGeneralInheritRedirect class.
            </summary>
            <param name="redirect">Source for inherit requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonShape">
            <summary>
            Gets access to ribbon shape.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonContextTextAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text alignment for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonContextTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonContextTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonDisabledDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the dark disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonDisabledLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the light disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonDropArrowLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonDropArrowDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonGroupDialogDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonGroupDialogLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonGroupSeparatorDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonGroupSeparatorLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonMinimizeBarDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonMinimizeBarLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonTabSeparatorColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonTabSeparatorContextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab context separators.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the ribbon font.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonQATButtonDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button dark content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInheritRedirect.GetRibbonQATButtonLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button light content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit">
            <summary>
            Provide inheritance of palette ribbon general properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonShape">
            <summary>
            Gets the ribbon shape that should be used.
            </summary>
            <returns>Ribbon shape value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonContextTextAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text alignment for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonContextTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonContextTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonDisabledDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the dark disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonDisabledLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the light disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonGroupDialogDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonGroupDialogLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonDropArrowDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonDropArrowLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonGroupSeparatorDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonGroupSeparatorLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonMinimizeBarDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonMinimizeBarLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonTabSeparatorColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonTabSeparatorContextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab context separators.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the ribbon font.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonQATButtonDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button dark content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneralInherit.GetRibbonQATButtonLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button light content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInheritRedirect">
            <summary>
            Provide inheritance of palette ribbon background properties from source redirector.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInheritRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle)">
            <summary>
            Initialize a new instance of the PaletteRibbonBackInheritRedirect class.
            </summary>
            <param name="redirect">Source for inherit requests.</param>
            <param name="styleBack">Ribbon item background style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInheritRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInheritRedirect.StyleBack">
            <summary>
            Gets and sets the ribbon background style to use when inheriting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInheritRedirect.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInheritRedirect.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInheritRedirect.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInheritRedirect.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInheritRedirect.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInheritRedirect.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInherit">
            <summary>
            Provide inheritance of palette ribbon background properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInherit.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInherit.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInherit.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInherit.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInherit.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackInherit.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack">
            <summary>
            Storage for ribbon background values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonBack class.
            </summary>
            <param name="inheritBack">Source for inheriting background values.</param>
            <param name="needPaint">Delegate for notifying changes in value.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background drawing style for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.BackColor1">
            <summary>
            Gets and sets the first background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.ResetBackColor1">
            <summary>
            Reset the BackColor1 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.BackColor2">
            <summary>
            Gets and sets the second background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.ResetBackColor2">
            <summary>
            Reset the BackColor2 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.BackColor3">
            <summary>
            Gets and sets the third background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.ResetBackColor3">
            <summary>
            Reset the BackColor3 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.BackColor4">
            <summary>
            Gets and sets the fourth background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.ResetBackColor4">
            <summary>
            Reset the BackColor4 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.BackColor5">
            <summary>
            Gets and sets the fifth background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.ResetBackColor5">
            <summary>
            Reset the BackColor5 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonBack.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInherit">
            <summary>
            Provide inheritance of palette ribbon background and text properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInherit.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInherit.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInherit.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInherit.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInherit.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInherit.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInherit.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritRedirect">
            <summary>
            Provide inheritance of palette ribbon background and text properties from source redirector.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle)">
            <summary>
            Initialize a new instance of the PaletteRibbonDoubleInheritRedirect class.
            </summary>
            <param name="redirect">Source for inherit requests.</param>
            <param name="styleBack">Ribbon item background style.</param>
            <param name="styleText">Ribbon item text style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritRedirect.StyleBack">
            <summary>
            Gets and sets the ribbon background style to use when inheriting.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritRedirect.StyleText">
            <summary>
            Gets and sets the ribbon text style to use when inheriting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritRedirect.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritRedirect.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritRedirect.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritRedirect.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritRedirect.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritRedirect.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDoubleInheritRedirect.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect">
            <summary>
            Implement storage for tab specific palette border, background and content.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTabTripleRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="contentStyle">Initial content style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.TabStyle)">
            <summary>
            Update the palette styles using a tab style.
            </summary>
            <param name="tabStyle">New tab style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.BackStyle">
            <summary>
            Gets and sets the back palette style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.BorderStyle">
            <summary>
            Gets and sets the border palette style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.Content">
            <summary>
            Gets access to the content palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.ContentStyle">
            <summary>
            Gets and sets the content palette style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTabTripleRedirect.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTabTriple">
            <summary>
            Implement storage for tab specific palette border, background and content.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTabTriple.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTabTriple class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTriple.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTabTriple.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTabTriple.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTriple.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTriple.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTriple.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTriple.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTriple.Content">
            <summary>
            Gets access to the content palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabTriple.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTabTriple.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTabBorder">
            <summary>
            Implement storage for palette tab border details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTabBorder.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTabBorder class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabBorder.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabBorder.DrawBorders">
            <summary>
            Gets a value indicating which borders should be drawn.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTabBorder.Rounding">
            <summary>
            Gets and sets the border rounding.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced">
            <summary>
            Allow the background values to be forced to fixed values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack)">
            <summary>
            Initialize a new instance of the PaletteBackInheritForced class.
            </summary>
            <param name="inherit">Background palette to inherit from.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteBack)">
            <summary>
            Gets and sets the palette to inherit from.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.BorderIgnoreNormal">
            <summary>
            Gets and sets the ignoring of normal borders.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.ForceGraphicsHint">
            <summary>
            Gets and sets the forced value for the graphics hint.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.ForceDraw">
            <summary>
            Gets and sets the forced value for the draw property.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritForced.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced">
            <summary>
            Allow the background values to be forced to fixed values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Initialize a new instance of the PaletteBorderInheritForced class.
            </summary>
            <param name="inherit">Border palette to inherit from.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Gets and sets the palette to inherit from.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.ForceBorderEdges(ComponentFactory.Krypton.Toolkit.PaletteDrawBorders)">
            <summary>
            Force the border edges to a particular value.
            </summary>
            <param name="forceBorderEdges">Borders to force.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.MaxBorderEdges">
            <summary>
            Gets and sets the maximum edges allowed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.BorderIgnoreNormal">
            <summary>
            Gets and sets the ignoring of normal borders.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.ForceGraphicsHint">
            <summary>
            Gets and sets the forced value for the graphics hint.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border rounding.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritForced.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge">
            <summary>
            Redirect border based on the incoming state of the request.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteRedirectBorderEdge class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteBorderEdge,ComponentFactory.Krypton.Toolkit.PaletteBorderEdge)">
            <summary>
            Initialize a new instance of the PaletteRedirectBorderEdge class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.SetRedirectStates(ComponentFactory.Krypton.Toolkit.PaletteBorderEdge,ComponentFactory.Krypton.Toolkit.PaletteBorderEdge)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.ResetRedirectStates">
            <summary>
            Reset the redirection states to null.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the border.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border drawing style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorderEdge.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder">
            <summary>
            Redirect border based on the incoming state of the request.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteRedirectBorder class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Initialize a new instance of the PaletteRedirectBorder class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Initialize a new instance of the PaletteRedirectBorder class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="pressed">Redirection for pressed state requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Initialize a new instance of the PaletteRedirectBorder class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="pressed">Redirection for pressed state requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
            <param name="checkedNormal">Redirection for checked normal state requests.</param>
            <param name="checkedPressed">Redirection for checked pressed state requests.</param>
            <param name="checkedTracking">Redirection for checked tracking state requests.</param>
            <param name="focusOverride">Redirection for focus override state requests.</param>
            <param name="normalDefaultOverride">Redirection for normal default override state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.ResetRedirectStates">
            <summary>
            Reset the redirection states to null.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the border.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border drawing style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBorder.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteElementColor">
            <summary>
            Storage for element color values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColor.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteElementColor,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteElementColor class.
            </summary>
            <param name="inheritElementColor">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying changes in value.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteElementColor.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColor.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteElementColor)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColor.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteElementColor.Color1">
            <summary>
            Gets and sets the first element color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColor.ResetColor1">
            <summary>
            Reset the Color1 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColor.GetElementColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first element color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteElementColor.Color2">
            <summary>
            Gets and sets the second element color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColor.ResetColor2">
            <summary>
            Reset the Color2 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColor.GetElementColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second element color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteElementColor.Color3">
            <summary>
            Gets and sets the third element color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColor.ResetColor3">
            <summary>
            Reset the Color3 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColor.GetElementColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third element color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteElementColor.Color4">
            <summary>
            Gets and sets the fourth element color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColor.ResetColor4">
            <summary>
            Reset the Color4 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColor.GetElementColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth element color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteElementColor.Color5">
            <summary>
            Gets and sets the fifth element color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColor.ResetColor5">
            <summary>
            Reset the Color5 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteElementColor.GetElementColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth element color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBackInheritNode">
            <summary>
            Allow the background values to be forced to node provided values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritNode.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack)">
            <summary>
            Initialize a new instance of the PaletteBackInheritNode class.
            </summary>
            <param name="inherit">Background palette to inherit from.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackInheritNode.TreeNode">
            <summary>
            Set the tree node to use for sourcing values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritNode.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritNode.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritNode.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritNode.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritNode.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritNode.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritNode.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritNode.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritNode.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritNode.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode">
            <summary>
            Allow the content values to be provided by a tree node.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Initialize a new instance of the PaletteContentInheritNode class.
            </summary>
            <param name="inherit">Border palette to inherit from.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.TreeNode">
            <summary>
            Set the tree node to use for sourcing values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritNode.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteNodeOverride">
            <summary>
            Allow some palette values to be overriden.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteNodeOverride.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Initialize a new instance of the PaletteNodeOverride class.
            </summary>
            <param name="triple">Palette to use.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteNodeOverride.TreeNode">
            <summary>
            Set the tree node to use for sourcing values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteNodeOverride.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteNodeOverride.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteNodeOverride.PaletteContent">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImage">
            <summary>
            Implement storage for palette border, background and content.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImage.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Initialize a new instance of the PaletteTripleJustImage class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImage.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTripleJustImage class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImage.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImage.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImage.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImage.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImage.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImage.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImage.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImage.Content">
            <summary>
            Gets access to the content palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImage.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImage.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect">
            <summary>
            Implement storage for palette border, background and image only content.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle)">
            <summary>
            Initialize a new instance of the PaletteTripleJustImageRedirect class.
            </summary>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="contentStyle">Initial content style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle)">
            <summary>
            Initialize a new instance of the PaletteTripleJustImageRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="contentStyle">Initial content style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTripleJustImageRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="contentStyle">Initial content style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.GetRedirector">
            <summary>
            Gets the redirector instance.
            </summary>
            <returns>Return the currently used redirector.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle)">
            <summary>
            Update each individual style.
            </summary>
            <param name="backStyle">New background style.</param>
            <param name="borderStyle">New border style.</param>
            <param name="contentStyle">New content style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.ButtonStyle)">
            <summary>
            Update the palette styles using a button style.
            </summary>
            <param name="buttonStyle">New button style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.HeaderStyle)">
            <summary>
            Update the palette styles using a header style.
            </summary>
            <param name="headerStyle">New header style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.BackStyle">
            <summary>
            Gets and sets the back palette style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.BorderStyle">
            <summary>
            Gets and sets the border palette style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.Content">
            <summary>
            Gets access to the content palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.ContentStyle">
            <summary>
            Gets and sets the content palette style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTripleToPalette">
            <summary>
            Redirect all triple requests directly to the redirector with a fixed state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleToPalette.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle)">
            <summary>
            Initialize a new instance of the PaletteTripleToPalette class.
            </summary>
            <param name="palette">Inheritence of values.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="contentStyle">Initial content style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleToPalette.SetStyles(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle)">
            <summary>
            Update each individual style.
            </summary>
            <param name="backStyle">New background style.</param>
            <param name="borderStyle">New border style.</param>
            <param name="contentStyle">New content style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleToPalette.SetStyles(ComponentFactory.Krypton.Toolkit.ButtonStyle)">
            <summary>
            Update the palette styles using a button style.
            </summary>
            <param name="buttonStyle">New button style.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleToPalette.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleToPalette.BackStyle">
            <summary>
            Gets and sets the back palette style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleToPalette.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleToPalette.BorderStyle">
            <summary>
            Gets and sets the border palette style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleToPalette.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleToPalette.ContentStyle">
            <summary>
            Gets and sets the content palette style.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDragDrop">
            <summary>
            Storage for drag and drop values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDragDrop class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.SetInherit(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.Feedback">
            <summary>
            Gets and sets the feedback drawing method used.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.ResetFeedback">
            <summary>
            Resets the Feedback property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.GetDragDropFeedback">
            <summary>
            Gets the feedback drawing method used.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.SolidBack">
            <summary>
            Gets and sets the background color for a solid drag drop area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.ResetSolidBack">
            <summary>
            Resets the SolidBack property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.GetDragDropSolidBack">
            <summary>
            Gets the background color for a solid drag drop area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.SolidBorder">
            <summary>
             Gets and sets the border color for a solid drag drop area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.ResetSolidBorder">
            <summary>
            Resets the SolidBorder property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.GetDragDropSolidBorder">
            <summary>
            Gets the border color for a solid drag drop area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.SolidOpacity">
            <summary>
            Gets and sets the opacity of the solid area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.ResetSolidOpacity">
            <summary>
            Resets the SolidOpacity property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.GetDragDropSolidOpacity">
            <summary>
            Gets the opacity of the solid area.
            </summary>
            <returns>Opacity ranging from 0 to 1.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.DropDockBack">
            <summary>
             Gets and sets the background color for the docking indicators area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.ResetDropDockBack">
            <summary>
            Resets the DropDockBack property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.GetDragDropDockBack">
            <summary>
            Gets the background color for the docking indicators area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.DropDockBorder">
            <summary>
            Gets and sets the border color for the docking indicators area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.ResetDropDockBorder">
            <summary>
            Resets the DropDockBorder property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.GetDragDropDockBorder">
            <summary>
            Gets the border color for the docking indicators area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.DropDockActive">
            <summary>
            Gets and sets the active color for docking indicators.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.ResetDropDockActive">
            <summary>
            Resets the DropDockActive property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.GetDragDropDockActive">
            <summary>
            Gets the active color for docking indicators.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.DropDockInactive">
            <summary>
            Gets and sets the inactive color for docking indicators.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.ResetDropDockInactive">
            <summary>
            Resets the DropDockInactive property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDragDrop.GetDragDropDockInactive">
            <summary>
            Gets the inactive color for docking indicators.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black">
            <summary>
            Provides the Black color scheme variant of the Office 2010 palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black.#ctor">
            <summary>
            Initialize a new instance of the PaletteOffice2010Black class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black.GetContextMenuSubMenuImage">
            <summary>
            Gets an image indicating a sub-menu on a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the =color for the item text.
            </summary>
            <param name="style">Text style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Black.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Blue">
            <summary>
            Provides the Blue color scheme variant of the Office 2010 palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Blue.#ctor">
            <summary>
            Initialize a new instance of the PaletteOffice2010Blue class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Blue.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Blue.GetContextMenuSubMenuImage">
            <summary>
            Gets an image indicating a sub-menu on a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Blue.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Silver">
            <summary>
            Provides the Silver color scheme variant of the Office 2010 palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Silver.#ctor">
            <summary>
            Initialize a new instance of the PaletteOffice2010Silver class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Silver.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Silver.GetContextMenuSubMenuImage">
            <summary>
            Gets an image indicating a sub-menu on a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Silver.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base">
            <summary>
            Provides a base for Office 2010 palettes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.#ctor(System.Drawing.Color[],System.Windows.Forms.ImageList,System.Windows.Forms.ImageList,System.Drawing.Image[],System.Drawing.Color[])">
            <summary>
            Initialize a new instance of the PaletteOffice2010Base class.
            </summary>
            <param name="schemeColors">Array of palette specific colors.</param>
            <param name="checkBoxList">List of images for check box.</param>
            <param name="galleryButtonList">List of images for gallery buttons.</param>
            <param name="radioButtonArray">Array of images for radio button.</param>
            <param name="trackBarColors">Array of track bar specific colors.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetAllowFormChrome">
            <summary>
            Gets a value indicating if KryptonForm instances should show custom chrome.
            </summary>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRenderer">
            <summary>
            Gets the renderer to use for this palette.
            </summary>
            <returns>Renderer to use for drawing palette settings.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the background.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the border.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border drawing style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentImageColorTransparent(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetTreeViewImage(System.Boolean)">
            <summary>
            Gets a tree view image appropriate for the provided state.
            </summary>
            <param name="expanded">Is the node expanded</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetCheckBoxImage(System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the check box enabled.</param>
            <param name="checkState">Is the check box checked/unchecked/indeterminate.</param>
            <param name="tracking">Is the check box being hot tracked.</param>
            <param name="pressed">Is the check box being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRadioButtonImage(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the radio button enabled.</param>
            <param name="checkState">Is the radio button checked.</param>
            <param name="tracking">Is the radio button being hot tracked.</param>
            <param name="pressed">Is the radio button being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContextMenuCheckedImage">
            <summary>
            Gets a checked image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetContextMenuIndeterminateImage">
            <summary>
            Gets a indeterminate image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetGalleryButtonImage(ComponentFactory.Krypton.Toolkit.PaletteRibbonGalleryButton,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="button">Enum of the button to fetch.</param>
            <param name="state">State of the button to fetch.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetButtonSpecIcon(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the icon to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Icon value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetButtonSpecImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the image transparent color.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetButtonSpecShortText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the short text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetButtonSpecLongText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the long text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetButtonSpecColorMap(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap from the image to the container foreground.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetButtonSpecColorTransparent(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap to transparent.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetButtonSpecStyle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button style used for drawing the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetButtonSpecLocation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Get the location for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>HeaderLocation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetButtonSpecEdge(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the edge to positon the button against.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteRelativeEdgeAlign value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetButtonSpecOrientation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button orientation.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonOrientation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonShape">
            <summary>
            Gets the ribbon shape that should be used.
            </summary>
            <returns>Ribbon shape value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonContextTextAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text alignment for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonContextTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonContextTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonDisabledDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the dark disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonDisabledLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the light disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonDropArrowLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonDropArrowDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonGroupDialogDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonGroupDialogLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonGroupSeparatorDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonGroupSeparatorLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonMinimizeBarDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonMinimizeBarLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonTabSeparatorColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonTabSeparatorContextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab context separators.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the ribbon font.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonQATButtonDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button dark content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonQATButtonLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button light content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the =color for the item text.
            </summary>
            <param name="style">Text style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetElementColor1(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetElementColor2(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetElementColor3(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetElementColor4(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.GetElementColor5(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.BaseFontName">
            <summary>
            Gets and sets the base font name used when defining fonts.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.DefineFonts">
            <summary>
            Update the fonts to reflect system or user defined changes.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.ColorTable">
            <summary>
            Gets access to the color table instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2010Base.OnUserPreferenceChanged(System.Object,Microsoft.Win32.UserPreferenceChangedEventArgs)">
            <summary>
            Handle a change in the user preferences.
            </summary>
            <param name="sender">Source of event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteSparklePurple">
            <summary>
            Provides a fixed purple variantion on the sparkle appearance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparklePurple.#ctor">
            <summary>
            Initialize a new instance of the PaletteSparkleRed class.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase">
            <summary>
            Provides a fixed blue variantion on the sparkle appearance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.#ctor(System.Drawing.Color[],System.Drawing.Color[],System.Drawing.Color[],System.Drawing.Color[],System.Drawing.Color[],System.Drawing.Color[],System.Windows.Forms.ImageList,System.Drawing.Image[])">
            <summary>
            Initialize a new instance of the PaletteSparkle class.
            </summary>
            <param name="ribbonColors">Colors used mainly for the ribbon.</param>
            <param name="sparkleColors">Colors used mainly for the sparkle settings.</param>
            <param name="appButtonNormal">Colors for app button in normal state.</param>
            <param name="appButtonTrack">Colors for app button in tracking state.</param>
            <param name="appButtonPressed">Colors for app button in pressed state.</param>
            <param name="ribbonGroupCollapsedBorderContextTracking">Colors for tracking a collapsed group border.</param>
            <param name="checkBoxList">Images for check box controls.</param>
            <param name="radioButtonArray">Images for radio button controls.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetAllowFormChrome">
            <summary>
            Gets a value indicating if KryptonForm instances should show custom chrome.
            </summary>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRenderer">
            <summary>
            Gets the renderer to use for this palette.
            </summary>
            <returns>Renderer to use for drawing palette settings.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the background.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the border.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border drawing style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentImageColorTransparent(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetTreeViewImage(System.Boolean)">
            <summary>
            Gets a tree view image appropriate for the provided state.
            </summary>
            <param name="expanded">Is the node expanded</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetCheckBoxImage(System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the check box enabled.</param>
            <param name="checkState">Is the check box checked/unchecked/indeterminate.</param>
            <param name="tracking">Is the check box being hot tracked.</param>
            <param name="pressed">Is the check box being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRadioButtonImage(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the radio button enabled.</param>
            <param name="checkState">Is the radio button checked.</param>
            <param name="tracking">Is the radio button being hot tracked.</param>
            <param name="pressed">Is the radio button being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContextMenuCheckedImage">
            <summary>
            Gets a checked image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContextMenuIndeterminateImage">
            <summary>
            Gets a indeterminate image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetContextMenuSubMenuImage">
            <summary>
            Gets an image indicating a sub-menu on a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetGalleryButtonImage(ComponentFactory.Krypton.Toolkit.PaletteRibbonGalleryButton,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="button">Enum of the button to fetch.</param>
            <param name="state">State of the button to fetch.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetButtonSpecIcon(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the icon to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Icon value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetButtonSpecImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the image transparent color.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetButtonSpecShortText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the short text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetButtonSpecLongText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the long text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetButtonSpecColorMap(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap from the image to the container foreground.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetButtonSpecColorTransparent(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap to transparent.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetButtonSpecStyle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button style used for drawing the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetButtonSpecLocation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Get the location for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>HeaderLocation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetButtonSpecEdge(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the edge to positon the button against.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteRelativeEdgeAlign value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetButtonSpecOrientation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button orientation.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonOrientation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonShape">
            <summary>
            Gets the ribbon shape that should be used.
            </summary>
            <returns>Ribbon shape value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonContextTextAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text alignment for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonContextTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonContextTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonDisabledDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the dark disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonDisabledLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the light disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonDropArrowLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonDropArrowDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonGroupDialogDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonGroupDialogLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonGroupSeparatorDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonGroupSeparatorLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonMinimizeBarDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonMinimizeBarLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonTabSeparatorColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonTabSeparatorContextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab context separators.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the ribbon font.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonQATButtonDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button dark content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonQATButtonLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button light content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the =color for the item text.
            </summary>
            <param name="style">Text style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetElementColor1(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetElementColor2(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetElementColor3(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetElementColor4(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.GetElementColor5(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.BaseFontName">
            <summary>
            Gets and sets the base font name used when defining fonts.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.DefineFonts">
            <summary>
            Update the fonts to reflect system or user defined changes.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.ColorTable">
            <summary>
            Gets access to the color table instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBase.OnUserPreferenceChanged(System.Object,Microsoft.Win32.UserPreferenceChangedEventArgs)">
            <summary>
            Handle a change in the user preferences.
            </summary>
            <param name="sender">Source of event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteSparkleOrange">
            <summary>
            Provides a fixed orange variantion on the sparkle appearance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleOrange.#ctor">
            <summary>
            Initialize a new instance of the PaletteSparkleOrange class.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteSparkleBlue">
            <summary>
            Provides a fixed blue variantion on the sparkle appearance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSparkleBlue.#ctor">
            <summary>
            Initialize a new instance of the PaletteSparkleBlue class.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Black">
            <summary>
            Provides the Black color scheme variant of the Office 2007 palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Black.#ctor">
            <summary>
            Initialize a new instance of the PaletteOffice2007Black class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Black.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Black.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Black.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Black.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Black.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Black.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Black.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Black.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Black.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Black.GetContextMenuSubMenuImage">
            <summary>
            Gets an image indicating a sub-menu on a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Black.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Black.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Silver">
            <summary>
            Provides the Silver color scheme variant of the Office 2007 palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Silver.#ctor">
            <summary>
            Initialize a new instance of the PaletteOffice2007Silver class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Silver.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Silver.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Silver.GetContextMenuSubMenuImage">
            <summary>
            Gets an image indicating a sub-menu on a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Silver.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Blue">
            <summary>
            Provides the Blue color scheme variant of the Office 2007 palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Blue.#ctor">
            <summary>
            Initialize a new instance of the PaletteOffice2007Blue class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Blue.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Blue.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Blue.GetContextMenuSubMenuImage">
            <summary>
            Gets an image indicating a sub-menu on a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Blue.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Blue.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base">
            <summary>
            Provides a professional appearance using colors/fonts generated from system settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.#ctor(System.Drawing.Color[],System.Windows.Forms.ImageList,System.Windows.Forms.ImageList,System.Drawing.Image[],System.Drawing.Color[])">
            <summary>
            Initialize a new instance of the PaletteOffice2007Base class.
            </summary>
            <param name="schemeColors">Array of palette specific colors.</param>
            <param name="checkBoxList">List of images for check box.</param>
            <param name="galleryButtonList">List of images for gallery buttons.</param>
            <param name="radioButtonArray">Array of images for radio button.</param>
            <param name="trackBarColors">Array of track bar specific colors.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetAllowFormChrome">
            <summary>
            Gets a value indicating if KryptonForm instances should show custom chrome.
            </summary>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRenderer">
            <summary>
            Gets the renderer to use for this palette.
            </summary>
            <returns>Renderer to use for drawing palette settings.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the background.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the border.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border drawing style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentImageColorTransparent(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetTreeViewImage(System.Boolean)">
            <summary>
            Gets a tree view image appropriate for the provided state.
            </summary>
            <param name="expanded">Is the node expanded</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetCheckBoxImage(System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the check box enabled.</param>
            <param name="checkState">Is the check box checked/unchecked/indeterminate.</param>
            <param name="tracking">Is the check box being hot tracked.</param>
            <param name="pressed">Is the check box being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRadioButtonImage(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the radio button enabled.</param>
            <param name="checkState">Is the radio button checked.</param>
            <param name="tracking">Is the radio button being hot tracked.</param>
            <param name="pressed">Is the radio button being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContextMenuCheckedImage">
            <summary>
            Gets a checked image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetContextMenuIndeterminateImage">
            <summary>
            Gets a indeterminate image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetGalleryButtonImage(ComponentFactory.Krypton.Toolkit.PaletteRibbonGalleryButton,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="button">Enum of the button to fetch.</param>
            <param name="state">State of the button to fetch.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetButtonSpecIcon(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the icon to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Icon value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetButtonSpecImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the image transparent color.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetButtonSpecShortText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the short text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetButtonSpecLongText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the long text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetButtonSpecColorMap(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap from the image to the container foreground.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetButtonSpecColorTransparent(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap to transparent.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetButtonSpecStyle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button style used for drawing the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetButtonSpecLocation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Get the location for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>HeaderLocation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetButtonSpecEdge(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the edge to positon the button against.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteRelativeEdgeAlign value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetButtonSpecOrientation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button orientation.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonOrientation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonShape">
            <summary>
            Gets the ribbon shape that should be used.
            </summary>
            <returns>Ribbon shape value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonContextTextAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text alignment for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonContextTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonContextTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonDisabledDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the dark disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonDisabledLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the light disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonDropArrowLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonDropArrowDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonGroupDialogDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonGroupDialogLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonGroupSeparatorDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonGroupSeparatorLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonMinimizeBarDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonMinimizeBarLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonTabSeparatorColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonTabSeparatorContextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab context separators.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the ribbon font.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonQATButtonDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button dark content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonQATButtonLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button light content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the =color for the item text.
            </summary>
            <param name="style">Text style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetElementColor1(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetElementColor2(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetElementColor3(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetElementColor4(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.GetElementColor5(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.ColorTable">
            <summary>
            Gets access to the color table instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.BaseFontName">
            <summary>
            Gets and sets the base font name used when defining fonts.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.OnUserPreferenceChanged(System.Object,Microsoft.Win32.UserPreferenceChangedEventArgs)">
            <summary>
            Handle a change in the user preferences.
            </summary>
            <param name="sender">Source of event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteOffice2007Base.DefineFonts">
            <summary>
            Update the fonts to reflect system or user defined changes.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble">
            <summary>
            Storage for ribbon background and text values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonDouble class.
            </summary>
            <param name="inheritBack">Source for inheriting background values.</param>
            <param name="inheritText">Source for inheriting text values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.IPaletteRibbonText)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background drawing style for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.BackColor1">
            <summary>
            Gets and sets the first background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.ResetBackColor1">
            <summary>
            Reset the BackColor1 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.BackColor2">
            <summary>
            Gets and sets the second background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.ResetBackColor2">
            <summary>
            Reset the BackColor2 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.BackColor3">
            <summary>
            Gets and sets the third background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.ResetBackColor3">
            <summary>
            Reset the BackColor3 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.BackColor4">
            <summary>
            Gets and sets the fourth background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.ResetBackColor4">
            <summary>
            Reset the BackColor4 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.BackColor5">
            <summary>
            Gets and sets the fifth background color for the ribbon item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.ResetBackColor5">
            <summary>
            Reset the BackColor5 to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.TextColor">
            <summary>
            Gets and sets the Tab color for the item text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.ResetTextColor">
            <summary>
            Reset the TextColor to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonDouble.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral">
            <summary>
            Storage for general ribbon values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonGeneral class.
            </summary>
            <param name="inherit">Source for inheriting general values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ContextTextAlign">
            <summary>
            Gets and sets the text alignment for the ribbon context text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetContextTextAlign">
            <summary>
            Reset the ContextTextAlign to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonContextTextAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text alignment for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ContextTextFont">
            <summary>
            Gets and sets the font for the ribbon context text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetContextTextFont">
            <summary>
            Reset the ContextTextFont to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonContextTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ContextTextColor">
            <summary>
            Gets and sets the text color used for ribbon context text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetContextTextColor">
            <summary>
            Resets the ContextTextColor property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonContextTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color of the ribbon caption text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.DisabledDark">
            <summary>
            Gets access to dark disabled color used for ribbon glyphs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetDisabledDark">
            <summary>
            Resets the DisabledDark property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonDisabledDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the dark disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.DisabledLight">
            <summary>
            Gets access to light disabled color used for ribbon glyphs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetDisabledLight">
            <summary>
            Resets the DisabledLight property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonDisabledLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the light disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GroupDialogDark">
            <summary>
            Gets access to ribbon dialog launcher button dark color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetGroupDialogDark">
            <summary>
            Resets the GroupDialogDark property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonGroupDialogDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GroupDialogLight">
            <summary>
            Gets access to ribbon group dialog launcher button light color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetGroupDialogLight">
            <summary>
            Resets the GroupDialogLight property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonGroupDialogLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.DropArrowDark">
            <summary>
            Gets access to ribbon drop arow dark color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetDropArrowDark">
            <summary>
            Resets the DropArrowDark property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonDropArrowDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow dark color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.DropArrowLight">
            <summary>
            Gets access to ribbon drop arrow light color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetDropArrowLight">
            <summary>
            Resets the DropArrowLight property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonDropArrowLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GroupSeparatorDark">
            <summary>
            Gets access to ribbon group separator dark color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetGroupSeparatorDark">
            <summary>
            Resets the GroupDialogDark property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonGroupSeparatorDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GroupSeparatorLight">
            <summary>
            Gets access to ribbon group separator light color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetGroupSeparatorLight">
            <summary>
            Resets the GroupSeparatorLight property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonGroupSeparatorLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.MinimizeBarDarkColor">
            <summary>
            Gets access to ribbon minimize bar dark color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetMinimizeBarDarkColor">
            <summary>
            Resets the MinimizeBarDarkColor property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonMinimizeBarDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon minimize bar dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.MinimizeBarLightColor">
            <summary>
            Gets access to ribbon minimize bar light color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetMinimizeBarLightColor">
            <summary>
            Resets the MinimizeBarLightColor property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonMinimizeBarLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon minimize bar light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.RibbonShape">
            <summary>
            Gets access to ribbon shape.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetRibbonShape">
            <summary>
            Resets the RibbonShape property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonShape">
            <summary>
            Gets the ribbon shape.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.TabSeparatorColor">
            <summary>
            Gets access to ribbon tab separator color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetTabSeparatorColor">
            <summary>
            Resets the TabSeparatorColor property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonTabSeparatorColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.TabSeparatorContextColor">
            <summary>
            Gets access to ribbon context tab separator color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetTabSeparatorContextColor">
            <summary>
            Resets the TabSeparatorContextColor property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonTabSeparatorContextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab context separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.TextFont">
            <summary>
            Gets and sets the font for the ribbon text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetTextFont">
            <summary>
            Reset the TextFont to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.TextHint">
            <summary>
            Gets and sets the rendering hint for the text font.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetTextHint">
            <summary>
            Reset the TextHint to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the ribbon font.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.QATButtonDarkColor">
            <summary>
            Gets access to extra QAT extra button dark content color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetQATButtonDarkColor">
            <summary>
            Resets the QATButtonDarkColor property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonQATButtonDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button dark content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.QATButtonLightColor">
            <summary>
            Gets access to extra QAT extra button light content color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.ResetQATButtonLightColor">
            <summary>
            Resets the QATButtonLightColor property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRibbonGeneral.GetRibbonQATButtonLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button light content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesTreeView">
            <summary>
            Storage for palette tree view images.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesTreeView.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteImagesTreeView class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesTreeView.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesTreeView.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesTreeView.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesTreeView.Plus">
            <summary>
            Gets and sets the image for use  when a node is collapsed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesTreeView.ResetPlus">
            <summary>
            Resets the Plus property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesTreeView.Minus">
            <summary>
            Gets and sets the image for use  when a node is expanded.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesTreeView.ResetMinus">
            <summary>
            Resets the Minus property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteTrackBar">
            <summary>
            Storage for palette track bar states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTrackBar.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteTrackbar class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTrackBar.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTrackBar.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTrackBar.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTrackBar.StateCommon">
            <summary>
            Gets access to the common track bar appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTrackBar.StateDisabled">
            <summary>
            Gets access to the disabled track bar appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTrackBar.StateNormal">
            <summary>
            Gets access to the normal track bar appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTrackBar.StateTracking">
            <summary>
            Gets access to the tracking track bar appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTrackBar.StatePressed">
            <summary>
            Gets access to the pressed track bar appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTrackBar.OverrideFocus">
            <summary>
            Gets access to the track bar appearance when it has focus.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay">
            <summary>
            Storage of palette calendar day states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteCalendarDay class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.StateCommon">
            <summary>
            Gets access to the common calendar day appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.StateDisabled">
            <summary>
            Gets access to the disabled calendar day appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.StateNormal">
            <summary>
            Gets access to the normal calendar day appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.StateTracking">
            <summary>
            Gets access to the hot tracking calendar day appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.StatePressed">
            <summary>
            Gets access to the pressed calendar day appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.StateCheckedNormal">
            <summary>
            Gets access to the normal checked calendar day appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.StateCheckedTracking">
            <summary>
            Gets access to the hot tracking checked calendar day appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.StateCheckedPressed">
            <summary>
            Gets access to the pressed checked calendar day appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.OverrideFocus">
            <summary>
            Gets access to the calendar day appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.OverrideBolded">
            <summary>
            Gets access to the calendar day appearance when it has bolded days.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCalendarDay.OverrideToday">
            <summary>
            Gets access to the calendar day appearance when it is today.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton">
            <summary>
            Storage for gallery button state specific images.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRibbonGalleryButton,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteImagesGalleryButton class.
            </summary>
            <param name="button">Which button this instance represents.</param>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton.Common">
            <summary>
            Gets and sets the common image that other gallery button images inherit from.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton.ResetCommon">
            <summary>
            Resets the Common property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton.Disabled">
            <summary>
            Gets and sets the image for use when the gallery button is disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton.ResetDisabled">
            <summary>
            Resets the Disabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton.Normal">
            <summary>
            Gets and sets the image for use when the gallery button is normal.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton.ResetNormal">
            <summary>
            Resets the Normal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton.Tracking">
            <summary>
            Gets and sets the image for use when the gallery button is hot tracking.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton.ResetTracking">
            <summary>
            Resets the Tracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton.Pressed">
            <summary>
            Gets and sets the image for use when the gallery button is pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButton.ResetPressed">
            <summary>
            Resets the Pressed property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButtons">
            <summary>
            Storage for gallery button images.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButtons.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteImagesGalleryButtons class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButtons.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButtons.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButtons.Up">
            <summary>
            Gallery up button images.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButtons.Down">
            <summary>
            Gallery down button images.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesGalleryButtons.DropDown">
            <summary>
            Gallery drop down button images.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton">
            <summary>
            Storage for palette drop down button images.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteImagesDropDownButton class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton.Common">
            <summary>
            Gets and sets the common image that other drop down button images inherit from.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton.ResetCommon">
            <summary>
            Resets the Common property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton.Disabled">
            <summary>
            Gets and sets the image for use when the drop down button is disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton.ResetDisabled">
            <summary>
            Resets the Disabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton.Normal">
            <summary>
            Gets and sets the image for use when the drop down button is not disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton.ResetNormal">
            <summary>
            Resets the Normal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton.Tracking">
            <summary>
            Gets and sets the image for use when the drop down button is tracking.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton.ResetTracking">
            <summary>
            Resets the Tracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton.Pressed">
            <summary>
            Gets and sets the image for use when the drop down button is pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesDropDownButton.ResetPressed">
            <summary>
            Resets the Pressed property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteContextMenu">
            <summary>
            Settings associated with context menus.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteContextMenu.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteContextMenu class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteContextMenu.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteContextMenu.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteContextMenu.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteContextMenu.StateCommon">
            <summary>
            Gets access to the common appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteContextMenu.StateDisabled">
            <summary>
            Gets access to the disabled appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteContextMenu.StateNormal">
            <summary>
            Gets access to the normal appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteContextMenu.StateHighlight">
            <summary>
            Gets access to the highlight appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteContextMenu.StateChecked">
            <summary>
            Gets access to the checked appearance that other states can override.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesContextMenu">
            <summary>
            Storage for palette context menu images.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesContextMenu.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteImagesContextMenu class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesContextMenu.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesContextMenu.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesContextMenu.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesContextMenu.Checked">
            <summary>
            Gets and sets the image for use with a checked menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesContextMenu.ResetChecked">
            <summary>
            Resets the Checked property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesContextMenu.Indeterminate">
            <summary>
            Gets and sets the image for use with an indeterminate menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesContextMenu.ResetIndeterminate">
            <summary>
            Resets the Indeterminate property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesContextMenu.SubMenu">
            <summary>
            Gets and sets an image indicating a sub-menu on a context menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesContextMenu.ResetSubMenu">
            <summary>
            Resets the SubMenu property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControl">
            <summary>
            Storage for palette input control states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControl.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteInputControl class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="backStyle">Background style.</param>
            <param name="borderStyle">Border style.</param>
            <param name="contentStyle">Content style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControl.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControl.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControl.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControl.StateCommon">
            <summary>
            Gets access to the common input control appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControl.StateDisabled">
            <summary>
            Gets access to the disabled input control appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControl.StateNormal">
            <summary>
            Gets access to the normal input control appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControl.StateActive">
            <summary>
            Gets access to the active input control appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControls">
            <summary>
            Storage for input control palette settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControls.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteInputControls class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControls.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControls.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControls.InputControlCommon">
            <summary>
            Gets access to the common input control appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControls.InputControlStandalone">
            <summary>
            Gets access to the standalone input control appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControls.InputControlRibbon">
            <summary>
            Gets access to the input control ribbon style appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteInputControls.InputControlCustom1">
            <summary>
            Gets access to the custom input control appearance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupLabelText">
            <summary>
            Storage for palette ribbon group label text states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupLabelText.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonGroupLabelText class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCheckBoxText">
            <summary>
            Storage for palette ribbon group button text states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCheckBoxText.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonGroupCheckBoxText class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupRadioButtonText">
            <summary>
            Storage for palette ribbon group radio button text states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupRadioButtonText.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonGroupRadioButtonText class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupBaseText">
            <summary>
            Storage for palette ribbon group text states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupBaseText.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonGroupBaseText class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="textStyle">Inherit text style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupBaseText.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupBaseText.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupBaseText.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupBaseText.StateCommon">
            <summary>
            Gets access to the common ribbon group text appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupBaseText.StateNormal">
            <summary>
            Gets access to the normal ribbon group text appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupBaseText.StateDisabled">
            <summary>
            Gets access to the tracking ribbon group text appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectTreeView">
            <summary>
            Redirects requests for tree view images from the TreeViewImages instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTreeView.#ctor(ComponentFactory.Krypton.Toolkit.TreeViewImages,ComponentFactory.Krypton.Toolkit.CheckBoxImages)">
            <summary>
            Initialize a new instance of the PaletteRedirectTreeView class.
            </summary>
            <param name="plusMinusImages">Reference to source of tree view images.</param>
            <param name="checkboxImages">Reference to source of check box images.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTreeView.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.TreeViewImages,ComponentFactory.Krypton.Toolkit.CheckBoxImages)">
            <summary>
            Initialize a new instance of the PaletteRedirectTreeView class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="plusMinusImages">Reference to source of tree view images.</param>
            <param name="checkboxImages">Reference to source of check box images.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTreeView.GetTreeViewImage(System.Boolean)">
            <summary>
            Gets a tree view image appropriate for the provided state.
            </summary>
            <param name="expanded">Is the node expanded</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTreeView.GetCheckBoxImage(System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the check box enabled.</param>
            <param name="checkState">Is the check box checked/unchecked/indeterminate.</param>
            <param name="tracking">Is the check box being hot tracked.</param>
            <param name="pressed">Is the check box being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTreeNodeTripleRedirect">
            <summary>
            Implement storage for a tree node triple.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTreeNodeTripleRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTreeNodeTripleRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="contentStyle">Initial content style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTreeNodeTripleRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTreeNodeTripleRedirect.Node">
            <summary>
            Gets the node appearance overrides.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTreeNodeTriple">
            <summary>
            Implement storage for storage for a tree node triple.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTreeNodeTriple.#ctor(ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTreeNodeTriple class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTreeNodeTriple.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTreeNodeTriple.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTreeNodeTriple.SetInherit(ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTreeNodeTriple.Node">
            <summary>
            Gets access to the node palette details.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTreeState">
            <summary>
            Implement storage for background, border and node triple.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTreeState.#ctor(ComponentFactory.Krypton.Toolkit.PaletteTreeStateRedirect,ComponentFactory.Krypton.Toolkit.PaletteBack,ComponentFactory.Krypton.Toolkit.PaletteBorder,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTreeState class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="back">Reference to back storage.</param>
            <param name="border">Reference to border storage.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTreeState.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTreeState.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Which state to populate from.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTreeState.Node">
            <summary>
            Gets the node appearance overrides.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTreeStateRedirect">
            <summary>
            Implement storage for back, border and tree node triple.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTreeStateRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBack,ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect,ComponentFactory.Krypton.Toolkit.PaletteBorder,ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTreeStateRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="back">Storage for back values.</param>
            <param name="backInherit">Inheritence for back values.</param>
            <param name="border">Storage for border values.</param>
            <param name="borderInherit">Inheritence for border values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTreeStateRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTreeStateRedirect.Node">
            <summary>
            Gets the node appearance overrides.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStatesOverride">
            <summary>
            Implement storage for a track bar position only states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStatesOverride.#ctor(ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect,ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStates,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Initialize a new instance of the PaletteTrackBarPositionStatesOverride class.
            </summary>
            <param name="normalStates">Normal state values.</param>
            <param name="overrideStates">Override state values.</param>
            <param name="overrideState">State to override.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStatesOverride.SetPalettes(ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect,ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStates)">
            <summary>
            Update the the normal and override palettes.
            </summary>
            <param name="normalStates">New normal palette.</param>
            <param name="overrideStates">New override palette.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStatesOverride.Apply">
            <summary>
            Gets and sets a value indicating if override should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStatesOverride.Override">
            <summary>
            Gets and sets a value indicating if override state should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStatesOverride.OverrideState">
            <summary>
            Gets and sets the override palette state to use.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStatesOverride.Position">
            <summary>
            Gets access to the position appearance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStatesOverride">
            <summary>
            Allow the palette to be overriden optionally.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStatesOverride.#ctor(ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect,ComponentFactory.Krypton.Toolkit.PaletteTrackBarStates,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Initialize a new instance of the PaletteTrackBarStatesOverride class.
            </summary>
            <param name="normalStates">Normal state values.</param>
            <param name="overrideStates">Override state values.</param>
            <param name="overrideState">State to override.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStatesOverride.SetPalettes(ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect,ComponentFactory.Krypton.Toolkit.PaletteTrackBarStates)">
            <summary>
            Update the the normal and override palettes.
            </summary>
            <param name="normalStates">New normal palette.</param>
            <param name="overrideStates">New override palette.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStatesOverride.Apply">
            <summary>
            Gets and sets a value indicating if override should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStatesOverride.Override">
            <summary>
            Gets and sets a value indicating if override state should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStatesOverride.OverrideState">
            <summary>
            Gets and sets the override palette state to use.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStatesOverride.Back">
            <summary>
            Gets access to the back appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStatesOverride.Tick">
            <summary>
            Gets access to the tick appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStatesOverride.Track">
            <summary>
            Gets access to the track appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStatesOverride.Position">
            <summary>
            Gets access to the position appearance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStates">
            <summary>
            Implement storage for a track bar position only states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStates.#ctor(ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTrackBarPositionStates class.
            </summary>
            <param name="redirect">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStates.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteElementColor,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTrackBarPositionStates class.
            </summary>
            <param name="inheritPosition">Source for inheriting position values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStates.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStates.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteElementColor)">
            <summary>
            Sets the inheritence parent.
            </summary>
            <param name="inheritPosition">Source for inheriting position values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStates.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStates.Position">
            <summary>
            Gets access to the position appearance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010">
            <summary>
            Provide KryptonColorTable2010 values using an array of Color values as the source.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.#ctor(System.Drawing.Color[],ComponentFactory.Krypton.Toolkit.InheritBool,ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the KryptonColorTable2010 class.
            </summary>
            <param name="colors">Source of </param>
            <param name="roundedEdges">Should have rounded edges.</param>
            <param name="palette">Associated palette instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.Colors">
            <summary>
            Gets the raw set of colors.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.UseRoundedEdges">
            <summary>
            Gets a value indicating if rounded egdes are required.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonPressedBorder">
            <summary>
            Gets the border color for a button being pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonPressedGradientBegin">
            <summary>
            Gets the background starting color for a button being pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonPressedGradientMiddle">
            <summary>
            Gets the background middle color for a button being pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonPressedGradientEnd">
            <summary>
            Gets the background ending color for a button being pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonPressedHighlight">
            <summary>
            Gets the highlight background for a pressed button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonPressedHighlightBorder">
            <summary>
            Gets the highlight border for a pressed button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonSelectedBorder">
            <summary>
            Gets the border color for a button being selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonSelectedGradientBegin">
            <summary>
            Gets the background starting color for a button being selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonSelectedGradientMiddle">
            <summary>
            Gets the background middle color for a button being selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonSelectedGradientEnd">
            <summary>
            Gets the background ending color for a button being selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonSelectedHighlight">
            <summary>
            Gets the highlight background for a selected button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonSelectedHighlightBorder">
            <summary>
            Gets the highlight border for a selected button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonCheckedGradientBegin">
            <summary>
            Gets the background starting color for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonCheckedGradientMiddle">
            <summary>
            Gets the background middle color for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonCheckedGradientEnd">
            <summary>
            Gets the background ending color for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonCheckedHighlight">
            <summary>
            Gets the highlight background for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ButtonCheckedHighlightBorder">
            <summary>
            Gets the highlight border for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.CheckBackground">
            <summary>
            Get background of the check mark area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.CheckPressedBackground">
            <summary>
            Get background of a pressed check mark area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.CheckSelectedBackground">
            <summary>
            Get background of a selected check mark area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.GripLight">
            <summary>
            Gets the light color used to draw grips.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.GripDark">
            <summary>
            Gets the dark color used to draw grips.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ImageMarginGradientBegin">
            <summary>
            Gets the starting color for the context menu margin.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ImageMarginGradientMiddle">
            <summary>
            Gets the middle color for the context menu margin.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ImageMarginGradientEnd">
            <summary>
            Gets the ending color for the context menu margin.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ImageMarginRevealedGradientBegin">
            <summary>
            Gets the starting color for the context menu margin revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ImageMarginRevealedGradientMiddle">
            <summary>
            Gets the middle color for the context menu margin revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ImageMarginRevealedGradientEnd">
            <summary>
            Gets the ending color for the context menu margin revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.MenuBorder">
            <summary>
            Gets the color of the border around menus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.MenuItemBorder">
            <summary>
            Gets the border color for around the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.MenuItemSelected">
            <summary>
            Gets the color of a selected menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.MenuItemPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.MenuItemPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.MenuItemPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.MenuItemSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.MenuItemSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.MenuStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.MenuStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.OverflowButtonGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.OverflowButtonGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.OverflowButtonGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.RaftingContainerGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.RaftingContainerGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.SeparatorLight">
            <summary>
            Gets the light separator color.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.SeparatorDark">
            <summary>
            Gets the dark separator color.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.StatusStripGradientBegin">
            <summary>
            Gets the starting color for the status strip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.StatusStripGradientEnd">
            <summary>
            Gets the ending color for the status strip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.MenuItemText">
            <summary>
            Gets the text color used on the menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.MenuStripText">
            <summary>
            Gets the text color used on the menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ToolStripText">
            <summary>
            Gets the text color used on the tool strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.StatusStripText">
            <summary>
            Gets the text color used on the status strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.MenuStripFont">
            <summary>
            Gets the font used on the menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ToolStripFont">
            <summary>
            Gets the font used on the tool strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.StatusStripFont">
            <summary>
            Gets the font used on the status strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ToolStripBorder">
            <summary>
            Gets the border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ToolStripContentPanelGradientBegin">
            <summary>
            Gets the starting color for the content panel background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ToolStripContentPanelGradientEnd">
            <summary>
            Gets the ending color for the content panel background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ToolStripDropDownBackground">
            <summary>
            Gets the background color for drop down menus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ToolStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ToolStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ToolStripGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ToolStripPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2010.ToolStripPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteGroupBox">
            <summary>
            Implement storage for GroupBox states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteGroupBox.#ctor(ComponentFactory.Krypton.Toolkit.PaletteGroupBoxRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteGroupBox class.
            </summary>
            <param name="inherit">Source for inheriting palette defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteGroupBox.Content">
            <summary>
            Gets access to the content palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteGroupBox.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteGroupBoxRedirect">
            <summary>
            Redirect storage for GroupBox states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteGroupBoxRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteGroupBoxRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteGroupBoxRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteGroupBoxRedirect class.
            </summary>
            <param name="redirectDouble">Inheritence redirection for group border/background.</param>
            <param name="redirectContent">Inheritence redirection for group header.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteGroupBoxRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteGroupBoxRedirect.Content">
            <summary>
            Gets access to the content palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteGroupBoxRedirect.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteGroupBoxRedirect.ContentStyle">
            <summary>
            Gets and sets the content palette style.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect">
            <summary>
            Implement storage for a track bar state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTrackBarRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect.Tick">
            <summary>
            Gets access to the tick appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect.Track">
            <summary>
            Gets access to the track appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect.Position">
            <summary>
            Gets access to the position marker appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect.Back">
            <summary>
            Gets access to the background appearance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStates">
            <summary>
            Implement storage for a track bar state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStates.#ctor(ComponentFactory.Krypton.Toolkit.PaletteTrackBarRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTrackBarStates class.
            </summary>
            <param name="redirect">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStates.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteElementColor,ComponentFactory.Krypton.Toolkit.IPaletteElementColor,ComponentFactory.Krypton.Toolkit.IPaletteElementColor,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTrackBarStates class.
            </summary>
            <param name="inheritTick">Source for inheriting tick values.</param>
            <param name="inheritTrack">Source for inheriting track values.</param>
            <param name="inheritPosition">Source for inheriting position values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStates.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStates.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteElementColor,ComponentFactory.Krypton.Toolkit.IPaletteElementColor,ComponentFactory.Krypton.Toolkit.IPaletteElementColor)">
            <summary>
            Sets the inheritence parent.
            </summary>
            <param name="inheritTick">Source for inheriting tick values.</param>
            <param name="inheritTrack">Source for inheriting track values.</param>
            <param name="inheritPosition">Source for inheriting position values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStates.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStates.Tick">
            <summary>
            Gets access to the tick appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStates.Track">
            <summary>
            Gets access to the track appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTrackBarStates.Position">
            <summary>
            Gets access to the position appearance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteWrapLabel">
            <summary>
            Provide wrap label state storage.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteWrapLabel.#ctor(ComponentFactory.Krypton.Toolkit.KryptonWrapLabel)">
            <summary>
            Initialize a new instance of the PaletteWrapLabel class.
            </summary>
            <param name="wrapLabel">Reference to owning control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteWrapLabel.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteWrapLabel.Font">
            <summary>
            Gets the font for label text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteWrapLabel.TextColor">
            <summary>
            Gets and sets the olor for the text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteWrapLabel.Hint">
            <summary>
            Gets the text rendering hint for the text.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarStateRedirect">
            <summary>
            Implement storage for month calendar appearance states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarStateRedirect.#ctor">
            <summary>
            Initialize a new instance of the PaletteMonthCalendarStateRedirect class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarStateRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteMonthCalendarStateRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarStateRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarStateRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarStateRedirect.Day">
            <summary>
            Gets access to the day appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarState">
            <summary>
            Implement storage for month calendar appearance states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarState.#ctor(ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarRedirect)">
            <summary>
            Initialize a new instance of the PaletteMonthCalendarState class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarState.#ctor(ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteMonthCalendarState class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarState.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarState.Day">
            <summary>
            Gets access to the day appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarDoubleState">
            <summary>
            Implement storage for month calendar appearance states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarDoubleState.#ctor(ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarRedirect)">
            <summary>
            Initialize a new instance of the PaletteMonthCalendarDoubleState class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarDoubleState.#ctor(ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteMonthCalendarDoubleState class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarDoubleState.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarDoubleState.Header">
            <summary>
            Gets access to the month/year header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarDoubleState.Day">
            <summary>
            Gets access to the day appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarDoubleState.DayOfWeek">
            <summary>
            Gets access to the day of week appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarRedirect">
            <summary>
            Implement redirected storage for common month calendar appearance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarRedirect.#ctor">
            <summary>
            Initialize a new instance of the PaletteMonthCalendarRedirect class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteMonthCalendarRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection for bread crumb level.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarRedirect.Header">
            <summary>
            Gets access to the month/year header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarRedirect.Day">
            <summary>
            Gets access to the day appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteMonthCalendarRedirect.DayOfWeek">
            <summary>
            Gets access to the day of week appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBreadCrumbState">
            <summary>
            Implement storage for bread crumb appearance states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBreadCrumbState.#ctor(ComponentFactory.Krypton.Toolkit.PaletteBreadCrumbRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteBreadCrumbState class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBreadCrumbState.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBreadCrumbState.BreadCrumb">
            <summary>
            Gets access to the bread crumb appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle">
            <summary>
            Provide KryptonColorTable values using an array of Color values as the source.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.#ctor(System.Drawing.Color[],System.Drawing.Color[],ComponentFactory.Krypton.Toolkit.InheritBool,ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the KryptonColorTableSparkle class.
            </summary>
            <param name="colors">Source of ribbon colors.</param>
            <param name="sparkleColors">Source of sparkle colors.</param>
            <param name="roundedEdges">Should have rounded edges.</param>
            <param name="palette">Associated palette instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.UseRoundedEdges">
            <summary>
            Gets a value indicating if rounded egdes are required.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonPressedBorder">
            <summary>
            Gets the border color for a button being pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonPressedGradientBegin">
            <summary>
            Gets the background starting color for a button being pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonPressedGradientMiddle">
            <summary>
            Gets the background middle color for a button being pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonPressedGradientEnd">
            <summary>
            Gets the background ending color for a button being pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonPressedHighlight">
            <summary>
            Gets the highlight background for a pressed button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonPressedHighlightBorder">
            <summary>
            Gets the highlight border for a pressed button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonSelectedBorder">
            <summary>
            Gets the border color for a button being selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonSelectedGradientBegin">
            <summary>
            Gets the background starting color for a button being selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonSelectedGradientMiddle">
            <summary>
            Gets the background middle color for a button being selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonSelectedGradientEnd">
            <summary>
            Gets the background ending color for a button being selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonSelectedHighlight">
            <summary>
            Gets the highlight background for a selected button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonSelectedHighlightBorder">
            <summary>
            Gets the highlight border for a selected button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonCheckedGradientBegin">
            <summary>
            Gets the background starting color for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonCheckedGradientMiddle">
            <summary>
            Gets the background middle color for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonCheckedGradientEnd">
            <summary>
            Gets the background ending color for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonCheckedHighlight">
            <summary>
            Gets the highlight background for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ButtonCheckedHighlightBorder">
            <summary>
            Gets the highlight border for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.CheckBackground">
            <summary>
            Get background of the check mark area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.CheckPressedBackground">
            <summary>
            Get background of a pressed check mark area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.CheckSelectedBackground">
            <summary>
            Get background of a selected check mark area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.GripLight">
            <summary>
            Gets the light color used to draw grips.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.GripDark">
            <summary>
            Gets the dark color used to draw grips.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ImageMarginGradientBegin">
            <summary>
            Gets the starting color for the context menu margin.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ImageMarginGradientMiddle">
            <summary>
            Gets the middle color for the context menu margin.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ImageMarginGradientEnd">
            <summary>
            Gets the ending color for the context menu margin.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ImageMarginRevealedGradientBegin">
            <summary>
            Gets the starting color for the context menu margin revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ImageMarginRevealedGradientMiddle">
            <summary>
            Gets the middle color for the context menu margin revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ImageMarginRevealedGradientEnd">
            <summary>
            Gets the ending color for the context menu margin revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.MenuBorder">
            <summary>
            Gets the color of the border around menus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.MenuItemBorder">
            <summary>
            Gets the border color for around the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.MenuItemSelected">
            <summary>
            Gets the color of a selected menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.MenuItemPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.MenuItemPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.MenuItemPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.MenuItemSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.MenuItemSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.MenuStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.MenuStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.OverflowButtonGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.OverflowButtonGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.OverflowButtonGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.RaftingContainerGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.RaftingContainerGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.SeparatorLight">
            <summary>
            Gets the light separator color.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.SeparatorDark">
            <summary>
            Gets the dark separator color.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.StatusStripGradientBegin">
            <summary>
            Gets the starting color for the status strip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.StatusStripGradientEnd">
            <summary>
            Gets the ending color for the status strip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.MenuItemText">
            <summary>
            Gets the text color used on the menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.MenuStripText">
            <summary>
            Gets the text color used on the menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ToolStripText">
            <summary>
            Gets the text color used on the tool strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.StatusStripText">
            <summary>
            Gets the text color used on the status strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.MenuStripFont">
            <summary>
            Gets the font used on the menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ToolStripFont">
            <summary>
            Gets the font used on the tool strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.StatusStripFont">
            <summary>
            Gets the font used on the status strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ToolStripBorder">
            <summary>
            Gets the border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ToolStripContentPanelGradientBegin">
            <summary>
            Gets the starting color for the content panel background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ToolStripContentPanelGradientEnd">
            <summary>
            Gets the ending color for the content panel background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ToolStripDropDownBackground">
            <summary>
            Gets the background color for drop down menus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ToolStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ToolStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ToolStripGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ToolStripPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTableSparkle.ToolStripPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBreadCrumbRedirect">
            <summary>
            Implement redirected storage for common bread crumb appearance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBreadCrumbRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteBreadCrumbRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection for bread crumb level.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBreadCrumbRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBreadCrumbRedirect.BreadCrumb">
            <summary>
            Gets access to the bread crumb appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteComboBoxJustItemStates">
            <summary>
            Implement storage for just the item part of a combo box state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxJustItemStates.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteComboBoxJustItemStates class.
            </summary>
            <param name="inheritItem">Source for inheriting item values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteComboBoxJustItemStates.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxJustItemStates.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Sets the inheritence parent.
            </summary>
            <param name="inheritItem">Source for inheriting item values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxJustItemStates.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteComboBoxJustItemStates.Item">
            <summary>
            Gets access to the item appearance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxJustItemStates.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteComboBoxJustComboStates">
            <summary>
            Implement storage for just the combo part of a combo box state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxJustComboStates.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteComboBoxJustComboStates class.
            </summary>
            <param name="inheritComboBox">Source for inheriting combo box values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteComboBoxJustComboStates.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxJustComboStates.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Sets the inheritence parent.
            </summary>
            <param name="inheritComboBox">Source for inheriting combo box values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxJustComboStates.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteComboBoxJustComboStates.ComboBox">
            <summary>
            Gets access to the combo box appearance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxJustComboStates.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteComboBoxStates">
            <summary>
            Implement storage for just the combo part of a combo box state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxStates.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteComboBoxStates class.
            </summary>
            <param name="inheritComboBox">Source for inheriting combo box values.</param>
            <param name="inheritItem">Source for inheriting item values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteComboBoxStates.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxStates.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Sets the inheritence parent.
            </summary>
            <param name="inheritComboBox">Source for inheriting combo box values.</param>
            <param name="inheritItem">Source for inheriting item values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxStates.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteComboBoxStates.ComboBox">
            <summary>
            Gets access to the combo box appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteComboBoxStates.Item">
            <summary>
            Gets access to the item appearance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxStates.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteComboBoxRedirect">
            <summary>
            Implement storage for a combo box state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteComboBoxRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteComboBoxRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.InputControlStyle)">
            <summary>
            Update the combo box input control style.
            </summary>
            <param name="style">New input control style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.ButtonStyle)">
            <summary>
            Update the combo box item style.
            </summary>
            <param name="style">New item style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.PaletteBackStyle)">
            <summary>
            Update the combo box drop background style.
            </summary>
            <param name="style">New drop background style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxRedirect.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteComboBoxRedirect.ComboBox">
            <summary>
            Gets access to the combo box appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteComboBoxRedirect.Item">
            <summary>
            Gets access to the item appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteComboBoxRedirect.DropBack">
            <summary>
            Gets access to the dropdown background appearance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteComboBoxRedirect.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteListItemTripleRedirect">
            <summary>
            Implement storage for a a list item triple.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteListItemTripleRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteListItemTripleRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="contentStyle">Initial content style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteListItemTripleRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteListItemTripleRedirect.Item">
            <summary>
            Gets the item appearance overrides.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteListItemTriple">
            <summary>
            Implement storage for a a list item triple.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteListItemTriple.#ctor(ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteListItemTriple class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteListItemTriple.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteListItemTriple.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteListItemTriple.SetInherit(ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteListItemTriple.Item">
            <summary>
            Gets access to the item palette details.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteListStateRedirect">
            <summary>
            Implement storage for list box specific values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteListStateRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteListStateRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteListStateRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteListStateRedirect.Item">
            <summary>
            Gets the item appearance overrides.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteListState">
            <summary>
            Implement storage for border,background and contained triple.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteListState.#ctor(ComponentFactory.Krypton.Toolkit.PaletteListStateRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteListState class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteListState.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteListState.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Which state to populate from.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteListState.Item">
            <summary>
            Gets the item appearance overrides.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBreadCrumbDoubleState">
            <summary>
            Implement storage for bread crumb appearance states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBreadCrumbDoubleState.#ctor(ComponentFactory.Krypton.Toolkit.PaletteBreadCrumbRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteBreadCrumbDoubleState class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBreadCrumbDoubleState.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBreadCrumbDoubleState.BreadCrumb">
            <summary>
            Gets access to the bread crumb appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectDropDownButton">
            <summary>
            Redirects requests for drop down button images from the DropDownButtonImages instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDropDownButton.#ctor(ComponentFactory.Krypton.Toolkit.DropDownButtonImages)">
            <summary>
            Initialize a new instance of the PaletteRedirectDropDownButton class.
            </summary>
            <param name="images">Reference to source of drop down button images.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDropDownButton.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.DropDownButtonImages)">
            <summary>
            Initialize a new instance of the PaletteRedirectDropDownButton class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="images">Reference to source of drop down button images.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDropDownButton.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemState">
            <summary>
            Storage for KryptonContextMenuItem state values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemState.#ctor(ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect)">
            <summary>
            Initialize a new instance of the PaletteContextMenuItemState class.
            </summary>
            <param name="redirect">Redirector for inheriting values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemState.#ctor(ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateRedirect)">
            <summary>
            Initialize a new instance of the PaletteContextMenuItemState class.
            </summary>
            <param name="redirect">Redirector for inheriting values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemState.#ctor(ComponentFactory.Krypton.Toolkit.PaletteDoubleMetricRedirect,ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect,ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect,ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect,ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect,ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect)">
            <summary>
            Initialize a new instance of the PaletteContextMenuItemState class.
            </summary>
            <param name="redirectItemHighlight">Redirector for ItemHighlight.</param>
            <param name="redirectItemImage">Redirector for ItemImage.</param>
            <param name="redirectItemShortcutText">Redirector for ItemShortcutText.</param>
            <param name="redirectItemSplit">Redirector for ItemSplit.</param>
            <param name="redirectItemTextAlternate">Redirector for ItemTextStandard.</param>
            <param name="redirectItemTextStandard">Redirector for ItemTextAlternate.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemState.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemState.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
            <param name="state">State to inherit.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemState.ItemHighlight">
            <summary>
            Gets access to the item highlight appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemState.ItemImage">
            <summary>
            Gets access to the item image appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemState.ItemShortcutText">
            <summary>
            Gets access to the item shortcut text appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemState.ItemSplit">
            <summary>
            Gets access to the item split appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemState.ItemTextAlternate">
            <summary>
            Gets access to the alternate item text appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemState.ItemTextStandard">
            <summary>
            Gets access to the standard item text appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateHighlight">
            <summary>
            Storage for KryptonContextMenuItem highlight state values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateHighlight.#ctor(ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect)">
            <summary>
            Initialize a new instance of the PaletteContextMenuItemStateHighlight class.
            </summary>
            <param name="redirect">Redirector for inheriting values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateHighlight.#ctor(ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateRedirect)">
            <summary>
            Initialize a new instance of the PaletteContextMenuItemStateHighlight class.
            </summary>
            <param name="redirect">Redirector for inheriting values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateHighlight.#ctor(ComponentFactory.Krypton.Toolkit.PaletteDoubleMetricRedirect,ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect)">
            <summary>
            Initialize a new instance of the PaletteContextMenuItemStateHighlight class.
            </summary>
            <param name="redirectItemHighlight">Redirector for the ItemHighlight.</param>
            <param name="redirectItemSplit">Redirector for the ItemSplit.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateHighlight.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateHighlight.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
            <param name="state">State to inherit.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateHighlight.ItemHighlight">
            <summary>
            Gets access to the item highlight appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateHighlight.ItemSplit">
            <summary>
            Gets access to the item split appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateChecked">
            <summary>
            Storage for KryptonContextMenuItem checked state values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateChecked.#ctor(ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect)">
            <summary>
            Initialize a new instance of the PaletteContextMenuItemStateChecked class.
            </summary>
            <param name="redirect">Redirector for inheriting values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateChecked.#ctor(ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateRedirect)">
            <summary>
            Initialize a new instance of the PaletteContextMenuItemStateChecked class.
            </summary>
            <param name="redirect">Redirector for inheriting values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateChecked.#ctor(ComponentFactory.Krypton.Toolkit.PaletteTripleJustImageRedirect)">
            <summary>
            Initialize a new instance of the PaletteContextMenuItemStateChecked class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateChecked.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
            <param name="state">State to inherit.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateChecked.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateChecked.ItemImage">
            <summary>
            Gets access to the item image appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateRedirect">
            <summary>
            Redirection for KryptonContextMenuItem state values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateRedirect.#ctor">
            <summary>
            Initialize a new instance of the PaletteContextMenuItemStateRedirect class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.IContextMenuProvider)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="provider">Provider for acquiring context menu information.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateRedirect.ItemHighlight">
            <summary>
            Gets access to the item image highlight entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateRedirect.ItemImage">
            <summary>
            Gets access to the item image appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateRedirect.ItemShortcutText">
            <summary>
            Gets access to the item shortcut text appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateRedirect.ItemSplit">
            <summary>
            Gets access to the item split appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateRedirect.ItemTextAlternate">
            <summary>
            Gets access to the alternate item text appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuItemStateRedirect.ItemTextStandard">
            <summary>
            Gets access to the standard item text appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectContextMenu">
            <summary>
            Redirects requests for context menu images from the ContextMenuImages instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContextMenu.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.ContextMenuImages)">
            <summary>
            Initialize a new instance of the PaletteRedirectContextMenu class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="images">Reference to source of context menu images.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContextMenu.GetContextMenuCheckedImage">
            <summary>
            Gets a checked image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContextMenu.GetContextMenuIndeterminateImage">
            <summary>
            Gets a indeterminate image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContextMenu.GetContextMenuSubMenuImage">
            <summary>
            Gets an image indicating a sub-menu on a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect">
            <summary>
            Redirect storage for KryptonContextMenu common values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteContextMenuRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
            <param name="state">State to inherit.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.ControlInner">
            <summary>
            Gets access to the inner control window appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.ControlOuter">
            <summary>
            Gets access to the outer control window appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.Heading">
            <summary>
            Gets access to the heading entry appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.ItemHighlight">
            <summary>
            Gets access to the item highlight appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.ItemImage">
            <summary>
            Gets access to the item image appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.ItemImageColumn">
            <summary>
            Gets access to the item image column appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.ItemShortcutText">
            <summary>
            Gets access to the item shortcut text appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.ItemSplit">
            <summary>
            Gets access to the item split appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.ItemTextAlternate">
            <summary>
            Gets access to the alternate item text appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.ItemTextStandard">
            <summary>
            Gets access to the standard item text appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect.Separator">
            <summary>
            Gets access to the separator items appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect">
            <summary>
            Implement storage for palette border, background and content for input control common state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteInputControlTripleRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="contentStyle">Initial content style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.InputControlStyle)">
            <summary>
            Update each individual style based on the input control style.
            </summary>
            <param name="style">New input control style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle)">
            <summary>
            Update each individual style.
            </summary>
            <param name="backStyle">New background style.</param>
            <param name="borderStyle">New border style.</param>
            <param name="contentStyle">New content style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.BackStyle">
            <summary>
            Gets and sets the back palette style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.BorderStyle">
            <summary>
            Gets and sets the border palette style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.Content">
            <summary>
            Gets access to the content palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.ContentStyle">
            <summary>
            Gets and sets the content palette style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleRedirect.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates">
            <summary>
            Implement storage for input control palette background details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteInputControlBackStates class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteBack)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual background draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual background graphics hint value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.Color1">
            <summary>
            Gets and sets the first background color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlBackStates.Inherit">
            <summary>
            Gets the inheritence parent.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates">
            <summary>
            Implement storage for input control palette content details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteInputControlContentStates class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content draw with focus value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content image horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content image vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual image drawing effect value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.Font">
            <summary>
            Gets the font for the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text font value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text rendering hint for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text trimming for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text horizontal multiline alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.Color1">
            <summary>
            Gets and sets the color for the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets an image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text font value.
            </summary>
            <returns>Font value.</returns>
            <param name="state">Palette value should be applicable to this state.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text rendering hint for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text trimming for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text horizontal multiline alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets an image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.Padding">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlContentStates.Inherit">
            <summary>
            Gets the inheritence parent.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleStates">
            <summary>
            Implement storage for palette border, background and content for input control states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleStates.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteInputControlTripleStates class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleStates.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleStates.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleStates.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleStates.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleStates.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleStates.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleStates.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleStates.Content">
            <summary>
            Gets access to the content palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleStates.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteInputControlTripleStates.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.DataGridViewStyles">
            <summary>
            Storage for data grid view display styles.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DataGridViewStyles.#ctor(ComponentFactory.Krypton.Toolkit.KryptonDataGridView)">
            <summary>
            Initialize a new instance of the DataGridViewStyles class.
            </summary>
            <param name="dataGridView">Reference to owning control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DataGridViewStyles.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DataGridViewStyles.Style">
            <summary>
            Gets and sets the overall grid style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DataGridViewStyles.StyleColumn">
            <summary>
            Gets and sets the header column grid style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DataGridViewStyles.StyleRow">
            <summary>
            Gets and sets the header row grid style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DataGridViewStyles.StyleDataCells">
            <summary>
            Gets and sets the data cell grid style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DataGridViewStyles.StyleBackground">
            <summary>
            Gets and sets the data cell grid style.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrid">
            <summary>
            Storage of palette grid states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrid.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.GridStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteGrid class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="gridStyle">Grid style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrid.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrid.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrid.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon,ComponentFactory.Krypton.Toolkit.GridStyle)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
            <param name="gridStyle">Grid style to use for populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrid.StateCommon">
            <summary>
            Gets access to the common grid appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrid.StateDisabled">
            <summary>
            Gets access to the disabled grid appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrid.StateNormal">
            <summary>
            Gets access to the normal grid appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrid.StateTracking">
            <summary>
            Gets access to the hot tracking grid appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrid.StatePressed">
            <summary>
            Gets access to the pressed grid appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrid.StateSelected">
            <summary>
            Gets access to the selected grid appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrids">
            <summary>
            Storage for grids palette settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrids.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteGrids class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrids.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrids.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrids.GridCommon">
            <summary>
            Gets access to the common grid appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrids.GridList">
            <summary>
            Gets access to the list grid appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrids.GridSheet">
            <summary>
            Gets access to the sheet grid appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteGrids.GridCustom1">
            <summary>
            Gets access to the first custom grid appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton">
            <summary>
            Storage for palette radio button images.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteImagesRadioButton class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.Common">
            <summary>
            Gets and sets the common image that other check box images inherit from.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.ResetCommon">
            <summary>
            Resets the Common property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.UncheckedDisabled">
            <summary>
            Gets and sets the image for use when the check box is not checked and disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.ResetUncheckedDisabled">
            <summary>
            Resets the UncheckedDisabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.UncheckedNormal">
            <summary>
            Gets and sets the image for use when the check box is unchecked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.ResetUncheckedNormal">
            <summary>
            Resets the UncheckedNormal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.UncheckedTracking">
            <summary>
            Gets and sets the image for use when the check box is unchecked and hot tracking.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.ResetUncheckedTracking">
            <summary>
            Resets the UncheckedTracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.UncheckedPressed">
            <summary>
            Gets and sets the image for use when the check box is unchecked and pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.ResetUncheckedPressed">
            <summary>
            Resets the UncheckedPressed property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.CheckedDisabled">
            <summary>
            Gets and sets the image for use when the check box is checked but disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.ResetCheckedDisabled">
            <summary>
            Resets the CheckedDisabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.CheckedNormal">
            <summary>
            Gets and sets the image for use when the check box is checked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.ResetCheckedNormal">
            <summary>
            Resets the CheckedNormal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.CheckedTracking">
            <summary>
            Gets and sets the image for use when the check box is checked and hot tracking.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.ResetCheckedTracking">
            <summary>
            Resets the CheckedTracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.CheckedPressed">
            <summary>
            Gets and sets the image for use when the check box is checked and pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesRadioButton.ResetCheckedPressed">
            <summary>
            Resets the CheckedPressed property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox">
            <summary>
            Storage for palette check box images.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteImagesCheckBox class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.Common">
            <summary>
            Gets and sets the common image that other check box images inherit from.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.ResetCommon">
            <summary>
            Resets the Common property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.UncheckedDisabled">
            <summary>
            Gets and sets the image for use when the check box is not checked and disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.ResetUncheckedDisabled">
            <summary>
            Resets the UncheckedDisabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.UncheckedNormal">
            <summary>
            Gets and sets the image for use when the check box is unchecked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.ResetUncheckedNormal">
            <summary>
            Resets the UncheckedNormal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.UncheckedTracking">
            <summary>
            Gets and sets the image for use when the check box is unchecked and hot tracking.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.ResetUncheckedTracking">
            <summary>
            Resets the UncheckedTracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.UncheckedPressed">
            <summary>
            Gets and sets the image for use when the check box is unchecked and pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.ResetUncheckedPressed">
            <summary>
            Resets the UncheckedPressed property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.CheckedDisabled">
            <summary>
            Gets and sets the image for use when the check box is checked but disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.ResetCheckedDisabled">
            <summary>
            Resets the CheckedDisabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.CheckedNormal">
            <summary>
            Gets and sets the image for use when the check box is checked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.ResetCheckedNormal">
            <summary>
            Resets the CheckedNormal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.CheckedTracking">
            <summary>
            Gets and sets the image for use when the check box is checked and hot tracking.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.ResetCheckedTracking">
            <summary>
            Resets the CheckedTracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.CheckedPressed">
            <summary>
            Gets and sets the image for use when the check box is checked and pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.ResetCheckedPressed">
            <summary>
            Resets the CheckedPressed property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.IndeterminateDisabled">
            <summary>
            Gets and sets the image for use when the check box is indeterminate but disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.ResetIndeterminateDisabled">
            <summary>
            Resets the IndeterminateDisabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.IndeterminateNormal">
            <summary>
            Gets and sets the image for use when the check box is indeterminate.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.ResetIndeterminateNormal">
            <summary>
            Resets the IndeterminateNormal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.IndeterminateTracking">
            <summary>
            Gets and sets the image for use when the check box is indeterminate and hot tracking.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.ResetIndeterminateTracking">
            <summary>
            Resets the IndeterminateTracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.IndeterminatePressed">
            <summary>
            Gets and sets the image for use when the check box is indeterminate and pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImagesCheckBox.ResetIndeterminatePressed">
            <summary>
            Resets the IndeterminatePressed property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteImages">
            <summary>
            Storage for palette image settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImages.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteImages class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImages.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteImages.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImages.CheckBox">
            <summary>
            Gets access to the check box set of images.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImages.ContextMenu">
            <summary>
            Gets access to the context menu set of images.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImages.DropDownButton">
            <summary>
            Gets access to the drop down button set of images.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImages.GalleryButtons">
            <summary>
            Gets access to the gallery button images.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImages.RadioButton">
            <summary>
            Gets access to the radio button set of images.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteImages.TreeView">
            <summary>
            Gets access to the tree view set of images.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupButtonText">
            <summary>
            Storage for palette ribbon group button text states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupButtonText.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonGroupButtonText class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonQATMinibar">
            <summary>
            Storage for palette ribbon quick access bar mini version.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonQATMinibar.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonQATMinibar class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonQATMinibar.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonQATMinibar.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonQATMinibar.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonQATMinibar.StateCommon">
            <summary>
            Gets access to the common ribbon quick access toolbar minibar values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonQATMinibar.StateActive">
            <summary>
            Gets access to the active ribbon quick access toolbar minibar values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonQATMinibar.StateInactive">
            <summary>
            Gets access to the inactive ribbon quick access toolbar minibar values.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBorder">
            <summary>
            Storage for palette ribbon group collapsed frame border states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBorder.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonGroupCollapsedFrameBorder class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBorder.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBorder.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBorder.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBorder.StateCommon">
            <summary>
            Gets access to the common ribbon group collapsed border appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBorder.StateNormal">
            <summary>
            Gets access to the normal ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBorder.StateTracking">
            <summary>
            Gets access to the tracking ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBorder.StateContextNormal">
            <summary>
            Gets access to the context normal ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBorder.StateContextTracking">
            <summary>
            Gets access to the context tracking ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBack">
            <summary>
            Storage for palette ribbon group collapsed frame background states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBack.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonGroupCollapsedFrameBack class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBack.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBack.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBack.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBack.StateCommon">
            <summary>
            Gets access to the common ribbon group collapsed border appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBack.StateNormal">
            <summary>
            Gets access to the normal ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBack.StateTracking">
            <summary>
            Gets access to the tracking ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBack.StateContextNormal">
            <summary>
            Gets access to the context normal ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedFrameBack.StateContextTracking">
            <summary>
            Gets access to the context tracking ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBack">
            <summary>
            Storage for palette ribbon group collapsed background states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBack.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonGroupCollapsedBack class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBack.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBack.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBack.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBack.StateCommon">
            <summary>
            Gets access to the common ribbon group collapsed border appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBack.StateNormal">
            <summary>
            Gets access to the normal ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBack.StateTracking">
            <summary>
            Gets access to the tracking ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBack.StateContextNormal">
            <summary>
            Gets access to the context normal ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBack.StateContextTracking">
            <summary>
            Gets access to the context tracking ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedText">
            <summary>
            Storage for palette ribbon group collapsed text states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedText.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonGroupCollapsedText class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedText.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedText.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedText.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedText.StateCommon">
            <summary>
            Gets access to the common ribbon group collapsed text appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedText.StateNormal">
            <summary>
            Gets access to the normal ribbon group collapsed text appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedText.StateTracking">
            <summary>
            Gets access to the tracking ribbon group collapsed text appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedText.StateContextNormal">
            <summary>
            Gets access to the context normal ribbon group collapsed text appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedText.StateContextTracking">
            <summary>
            Gets access to the context tracking ribbon group collapsed text appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBorder">
            <summary>
            Storage for palette ribbon group collapsed border states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBorder.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonGroupCollapsedBorder class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBorder.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBorder.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBorder.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBorder.StateCommon">
            <summary>
            Gets access to the common ribbon group collapsed border appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBorder.StateNormal">
            <summary>
            Gets access to the normal ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBorder.StateTracking">
            <summary>
            Gets access to the tracking ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBorder.StateContextNormal">
            <summary>
            Gets access to the context normal ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupCollapsedBorder.StateContextTracking">
            <summary>
            Gets access to the context tracking ribbon group collapsed border appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalBorder">
            <summary>
            Storage for palette ribbon group normal border states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalBorder.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonGroupNormalBorder class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalBorder.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalBorder.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalBorder.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalBorder.StateCommon">
            <summary>
            Gets access to the common ribbon group normal border appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalBorder.StateNormal">
            <summary>
            Gets access to the normal ribbon group normal border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalBorder.StateTracking">
            <summary>
            Gets access to the tracking ribbon group normal border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalBorder.StateContextNormal">
            <summary>
            Gets access to the context normal ribbon group normal border appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalBorder.StateContextTracking">
            <summary>
            Gets access to the context tracking ribbon group normal border appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalTitle">
            <summary>
            Storage for palette ribbon group normal title states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalTitle.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonGroupNormalTitle class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalTitle.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalTitle.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalTitle.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalTitle.StateCommon">
            <summary>
            Gets access to the common ribbon group normal title appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalTitle.StateNormal">
            <summary>
            Gets access to the normal ribbon group normal title appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalTitle.StateTracking">
            <summary>
            Gets access to the tracking ribbon group normal title appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalTitle.StateContextNormal">
            <summary>
            Gets access to the context normal ribbon group normal title appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupNormalTitle.StateContextTracking">
            <summary>
            Gets access to the context tracking ribbon group normal title appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupArea">
            <summary>
            Storage for palette ribbon group area states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupArea.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonGroupArea class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupArea.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupArea.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupArea.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupArea.StateCommon">
            <summary>
            Gets access to the common ribbon application button appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupArea.StateCheckedNormal">
            <summary>
            Gets access to the checked ribbon group area appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonGroupArea.StateContextCheckedNormal">
            <summary>
            Gets access to the context checked ribbon group area appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonAppButton">
            <summary>
            Storage for palette ribbon scroller states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonAppButton.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonAppButton class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonAppButton.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonAppButton.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonAppButton.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonAppButton.StateCommon">
            <summary>
            Gets access to the common ribbon application button appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonAppButton.StateNormal">
            <summary>
            Gets access to the normal ribbon application button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonAppButton.StateTracking">
            <summary>
            Gets access to the tracking ribbon application button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonAppButton.StatePressed">
            <summary>
            Gets access to the pressed ribbon application button appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon">
            <summary>
            Settings associated with ribbon control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbon class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonAppButton">
            <summary>
            Get access to the application button tab settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonAppMenuOuter">
            <summary>
            Gets access to the application button menu outer palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonAppMenuInner">
            <summary>
            Gets access to the application button menu inner palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonAppMenuDocs">
            <summary>
            Gets access to the application button menu recent docs palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonAppMenuDocsTitle">
            <summary>
            Gets access to the application button menu recent documents title.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonAppMenuDocsEntry">
            <summary>
            Gets access to the application button menu recent documents entry.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGeneral">
            <summary>
            Get access to the general ribbon settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGroupArea">
            <summary>
            Get access to the ribbon group area settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGroupButtonText">
            <summary>
            Get access to the ribbon group button text settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGroupCheckBoxText">
            <summary>
            Get access to the ribbon group check box text settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGroupNormalBorder">
            <summary>
            Get access to the ribbon group normal border settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGroupNormalTitle">
            <summary>
            Get access to the ribbon group normal title settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGroupCollapsedBorder">
            <summary>
            Get access to the ribbon group collapsed border settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGroupCollapsedBack">
            <summary>
            Get access to the ribbon group collapsed background settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGroupCollapsedFrameBorder">
            <summary>
            Get access to the ribbon group collapsed frame border settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGroupCollapsedFrameBack">
            <summary>
            Get access to the ribbon group collapsed frame background settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGroupCollapsedText">
            <summary>
            Get access to the ribbon group collapsed text settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGroupLabelText">
            <summary>
            Get access to the ribbon group label text settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGroupRadioButtonText">
            <summary>
            Get access to the ribbon radio button box text settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonQATFullbar">
            <summary>
            Get access to the quick access toolbar full settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonQATMinibar">
            <summary>
            Get access to the quick access toolbar mini settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonQATOverflow">
            <summary>
            Get access to the quick access toolbar overflow settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonTab">
            <summary>
            Get access to the ribbon tab settings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGalleryBack">
            <summary>
            Gets access to the ribbon gallery background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbon.RibbonGalleryBorder">
            <summary>
            Gets access to the ribbon gallery border palette details.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonTab">
            <summary>
            Storage for palette ribbon tab states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonTab.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteRibbonTab class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonTab.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonTab.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonTab.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonTab.StateCommon">
            <summary>
            Gets access to the common ribbon tab appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonTab.StateNormal">
            <summary>
            Gets access to the normal ribbon tab appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonTab.StateTracking">
            <summary>
            Gets access to the tracking ribbon tab appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonTab.StateCheckedNormal">
            <summary>
            Gets access to the checked normal ribbon tab appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonTab.StateCheckedTracking">
            <summary>
            Gets access to the checked tracking ribbon tab appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonTab.StateContextTracking">
            <summary>
            Gets access to the context tracking ribbon tab appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonTab.StateContextCheckedNormal">
            <summary>
            Gets access to the checked normal ribbon tab appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonTab.StateContextCheckedTracking">
            <summary>
            Gets access to the context checked tracking ribbon tab appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteRibbonTab.OverrideFocus">
            <summary>
            Gets access to the focus overrides for ribbon tab appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteForms">
            <summary>
            Storage for form palette settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteForms.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteForms class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteForms.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteForms.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteForms.FormCommon">
            <summary>
            Gets access to the common form appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteForms.FormMain">
            <summary>
            Gets access to the main form appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteForms.FormCustom1">
            <summary>
            Gets access to the first custom form appearance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteForm">
            <summary>
            Storage for palette form states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteForm.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteForm class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="backStyle">Background style.</param>
            <param name="borderStyle">Border style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteForm.StateCommon">
            <summary>
            Gets access to the common control appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteForm.StateInactive">
            <summary>
            Gets access to the inactive form appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteForm.StateActive">
            <summary>
            Gets access to the active form appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteDouble3">
            <summary>
            Base storage class for palette double (background/border) that expose three states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteDouble3.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of KryptonPaletteDouble3 KryptonPaletteControl class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="backStyle">Background style.</param>
            <param name="borderStyle">Border style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteDouble3.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteDouble3.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteDouble3.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButtons">
            <summary>
            Storage for tab button palette settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButtons.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteTabButtons class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButtons.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButtons.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButtons.TabCommon">
            <summary>
            Gets access to the common appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButtons.TabHighProfile">
            <summary>
            Gets access to the High Profile appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButtons.TabStandardProfile">
            <summary>
            Gets access to the Standard Profile appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButtons.TabLowProfile">
            <summary>
            Gets access to the LowProfile appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButtons.TabDock">
            <summary>
            Gets access to the Dock appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButtons.TabDockAutoHidden">
            <summary>
            Gets access to the Dock AutoHidden appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButtons.TabOneNote">
            <summary>
            Gets access to the OneNote appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButtons.TabCustom1">
            <summary>
            Gets access to the Custom1 appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButtons.TabCustom2">
            <summary>
            Gets access to the Custom2 appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButtons.TabCustom3">
            <summary>
            Gets access to the Custom3 appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButton">
            <summary>
            Storage of palette tab button states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButton.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteTabButton class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="backStyle">Background style.</param>
            <param name="borderStyle">Border style.</param>
            <param name="contentStyle">Content style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButton.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButton.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButton.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButton.StateCommon">
            <summary>
            Gets access to the common tab appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButton.StateDisabled">
            <summary>
            Gets access to the disabled tab appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButton.StateNormal">
            <summary>
            Gets access to the normal tab appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButton.StateTracking">
            <summary>
            Gets access to the hot tracking tab appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButton.StatePressed">
            <summary>
            Gets access to the pressed tab appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButton.StateSelected">
            <summary>
            Gets access to the normal tab appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTabButton.OverrideFocus">
            <summary>
            Gets access to the tab appearance when it has focus.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewBackInherit">
            <summary>
            Provide inheritance of palette back properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewBackInherit.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteBack,System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Defines the interface to inherit from.
            </summary>
            <param name="inherit">Palette to inherit values from.</param>
            <param name="cellStyle">Cell style to recover values from.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewBackInherit.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewBackInherit.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewBackInherit.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewBackInherit.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewBackInherit.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewBackInherit.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewBackInherit.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewBackInherit.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewBackInherit.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewBackInherit.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleStates">
            <summary>
            Implement storage for palette border, background and content for the data grid view states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleStates.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDataGridViewTripleStates class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleStates.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleStates.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleStates.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleStates.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleStates.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleStates.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleStates.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleStates.Content">
            <summary>
            Gets access to the content palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleStates.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleStates.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentCommon">
            <summary>
            Implement storage for data grid view palette content details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentCommon.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDataGridViewContentCommon class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentCommon.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentCommon.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentCommon.Font">
            <summary>
            Gets the font for the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentCommon.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text font value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentCommon.TextH">
            <summary>
            Gets the horizontal relative alignment of the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentCommon.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentCommon.TextV">
            <summary>
            Gets the vertical relative alignment of the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentCommon.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentCommon.Padding">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentCommon.ResetPadding">
            <summary>
            Reset the Padding to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentCommon.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates">
            <summary>
            Implement storage for data grid view palette content details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDataGridViewContentStates class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.SyncPropertyChanged">
            <summary>
            Occurs when a property that needs syncing with the KryptonDataGridView is modified.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.Draw">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content draw with focus value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content image horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content image vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual image drawing effect value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text font value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.Hint">
            <summary>
            Gets the text rendering hint for the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text rendering hint for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.Trim">
            <summary>
            Gets the text trimming for the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text trimming for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.MultiLineH">
            <summary>
            Gets the relative horizontal alignment of multiline content text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text horizontal multiline alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.MultiLine">
            <summary>
            Gets the flag indicating if multiline text is allowed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.Color1">
            <summary>
            Gets and sets the first color for the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.Color2">
            <summary>
            Gets and sets the second color for the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.ColorStyle">
            <summary>
            Gets and sets the color drawing style for the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.ColorAlign">
            <summary>
            Gets and set the color alignment for the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.ColorAngle">
            <summary>
            Gets and sets the color angle for the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.Image">
            <summary>
            Gets and sets the image for the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets an image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.ImageStyle">
            <summary>
            Gets and sets the image style for the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.ImageAlign">
            <summary>
            Gets and set the image alignment for the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text font value.
            </summary>
            <returns>Font value.</returns>
            <param name="state">Palette value should be applicable to this state.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text rendering hint for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text trimming for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text horizontal multiline alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets an image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.Inherit">
            <summary>
            Gets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentStates.OnSyncPropertyChanged(System.EventArgs)">
            <summary>
            Raises the SyncPropertyChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit">
            <summary>
            Provide inheritance of palette content properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteContent,System.Windows.Forms.DataGridViewCellStyle)">
            <summary>
            Defines the interface to inherit from.
            </summary>
            <param name="inherit">Palette to inherit values from.</param>
            <param name="cellStyle">Cell style to recover values from.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewContentInherit.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewHeaders">
            <summary>
            Implement storage for a KryptonDataGridView states with header cells.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewHeaders.#ctor(ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDataGridViewHeaders class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewHeaders.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewHeaders.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.GridStyle)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
            <param name="common">Reference to common settings.</param>
            <param name="gridStyle">Grid style to use for populating.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewHeaders.SetInherit(ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewHeaders.HeaderColumn">
            <summary>
            Gets access to the header column cell palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewHeaders.HeaderRow">
            <summary>
            Gets access to the header row cell palette details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewHeaders.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewCells">
            <summary>
            Implement storage for a KryptonDataGridView tracking/pressed/selected states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewCells.#ctor(ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDataGridViewCells class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewCells.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewCells.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.GridStyle)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
            <param name="common">Reference to common settings.</param>
            <param name="gridStyle">Grid style to use for populating.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewCells.SetInherit(ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewCells.DataCell">
            <summary>
            Gets access to the data cell palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewCells.HeaderColumn">
            <summary>
            Gets access to the header column cell palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewCells.HeaderRow">
            <summary>
            Gets access to the header row cell palette details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewCells.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect">
            <summary>
            Implement storage and redirection for a KryptonDataGridView state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDataGridViewRedirect class.
            </summary>
            <param name="redirect">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect.BackStyle">
            <summary>
            Gets and sets the back style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect.SetGridStyles(ComponentFactory.Krypton.Toolkit.GridStyle,ComponentFactory.Krypton.Toolkit.GridStyle,ComponentFactory.Krypton.Toolkit.GridStyle)">
            <summary>
            Update the styles of the headers and data cells.
            </summary>
            <param name="headerColumn">Style for the column headers.</param>
            <param name="headerRow">Style for the row headers.</param>
            <param name="dataCell">Style for the data cells.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect.Background">
            <summary>
            Gets access to the data grid view background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect.DataCell">
            <summary>
            Gets access to the data cell palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect.HeaderColumn">
            <summary>
            Gets access to the header column cell palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect.HeaderRow">
            <summary>
            Gets access to the header row cell palette details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectBreadCrumb">
            <summary>
            Redirect back/border/content based on the incoming grid state and style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBreadCrumb.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteRedirectBreadCrumb class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRedirectBreadCrumb.Left">
            <summary>
            Gets and sets if the left border should be removed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRedirectBreadCrumb.Right">
            <summary>
            Gets and sets if the right border should be removed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRedirectBreadCrumb.TopBottom">
            <summary>
            Gets and sets if the top and bottom borders should be removed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBreadCrumb.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectRadioButton">
            <summary>
            Redirects requests for radio button images from the RadioButtonImages instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRadioButton.#ctor(ComponentFactory.Krypton.Toolkit.RadioButtonImages)">
            <summary>
            Initialize a new instance of the PaletteRedirectRadioButton class.
            </summary>
            <param name="images">Reference to source of radio button images.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRadioButton.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.RadioButtonImages)">
            <summary>
            Initialize a new instance of the PaletteRedirectRadioButton class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="images">Reference to source of radio button images.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectRadioButton.GetRadioButtonImage(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a radio button image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the radio button enabled.</param>
            <param name="checkState">Is the radio button checked/unchecked/indeterminate.</param>
            <param name="tracking">Is the radio button being hot tracked.</param>
            <param name="pressed">Is the radio button being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectCheckBox">
            <summary>
            Redirects requests for check box images from the CheckBoxImages instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCheckBox.#ctor(ComponentFactory.Krypton.Toolkit.CheckBoxImages)">
            <summary>
            Initialize a new instance of the PaletteRedirectCheckBox class.
            </summary>
            <param name="images">Reference to source of check box images.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCheckBox.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.CheckBoxImages)">
            <summary>
            Initialize a new instance of the PaletteRedirectCheckBox class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="images">Reference to source of check box images.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCheckBox.GetCheckBoxImage(System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the check box enabled.</param>
            <param name="checkState">Is the check box checked/unchecked/indeterminate.</param>
            <param name="tracking">Is the check box being hot tracked.</param>
            <param name="pressed">Is the check box being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewAll">
            <summary>
            Implement storage for a KryptonDataGridView normal state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewAll.#ctor(ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDataGridViewAll class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewAll.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewAll.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.GridStyle)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
            <param name="common">Reference to common settings.</param>
            <param name="gridStyle">Grid style to use for populating.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewAll.SetInherit(ComponentFactory.Krypton.Toolkit.PaletteDataGridViewRedirect)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewAll.Background">
            <summary>
            Gets access to the data grid view background palette details.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleCommon">
            <summary>
            Implement storage for palette border, background and content for the data grid view common state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleCommon.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDataGridViewTripleCommon class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleCommon.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleCommon.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleCommon.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleCommon.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleCommon.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleCommon.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleCommon.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleCommon.Content">
            <summary>
            Gets access to the content palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleCommon.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleCommon.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect">
            <summary>
            Implement storage for palette border, background and content for data grid view common state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDataGridViewTripleRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="contentStyle">Initial content style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle)">
            <summary>
            Update each individual style.
            </summary>
            <param name="backStyle">New background style.</param>
            <param name="borderStyle">New border style.</param>
            <param name="contentStyle">New content style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.ButtonStyle)">
            <summary>
            Update the palette styles using a button style.
            </summary>
            <param name="buttonStyle">New button style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.HeaderStyle)">
            <summary>
            Update the palette styles using a header style.
            </summary>
            <param name="headerStyle">New header style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.BackStyle">
            <summary>
            Gets and sets the back palette style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.BorderStyle">
            <summary>
            Gets and sets the border palette style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.Content">
            <summary>
            Gets access to the content palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.ContentStyle">
            <summary>
            Gets and sets the content palette style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDataGridViewTripleRedirect.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteColorButtonStrings">
            <summary>
            Storage for color button string properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteColorButtonStrings.#ctor">
            <summary>
            Initialize a new instance of the PaletteColorButtonStrings class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteColorButtonStrings.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteColorButtonStrings.MoreColors">
            <summary>
            Gets and sets the menu string for a 'more colors' entry.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteColorButtonStrings.NoColor">
            <summary>
            Gets and sets the menu string for a 'no color' entry.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteColorButtonStrings.RecentColors">
            <summary>
            Gets and sets the title for the recent colors section of the color button menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteColorButtonStrings.StandardColors">
            <summary>
            Gets and sets the title for the standard colors section of the application menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteColorButtonStrings.ThemeColors">
            <summary>
            Gets and sets the title for the theme colors section of the application menu.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RenderExpertHelpers">
            <summary>
            Helper functions for drawing in the glass styles.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderExpertHelpers.DrawBackExpertTracking(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background for an expert style button with tracking effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderExpertHelpers.DrawBackExpertPressed(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background for an expert style button with pressed effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderExpertHelpers.DrawBackExpertChecked(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background for an expert style button that is checked.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderExpertHelpers.DrawBackExpertCheckedTracking(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background for an expert style button that is checked and tracking.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderExpertHelpers.DrawBackExpertSquareHighlight(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable,System.Boolean)">
            <summary>
            Draw a background for an expert style button has a square inside with highlight.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
            <param name="light">Use the 'light' variation.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RenderOffice2007">
            <summary>
            Extends the professional renderer to provide Office2007 style additions.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderOffice2007.DrawRibbonClusterEdge(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon cluster edge.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteBack">Palette used for recovering drawing details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderOffice2007.RenderToolStrip(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets a renderer for drawing the toolstrips.
            </summary>
            <param name="colorPalette">Color palette to use when rendering toolstrip.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderOffice2007.DrawRibbonTabContext(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.GradientItemColorsSplit.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the GradientItemColorsSplit class.
            </summary>
            <param name="border">Base border color.</param>
            <param name="begin">Beginning background color.</param>
            <param name="end">Ending background color.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.GradientItemColorsTracking.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the GradientItemColorsTracking class.
            </summary>
            <param name="border">Base border color.</param>
            <param name="begin">Beginning background color.</param>
            <param name="end">Ending background color.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.GradientItemColorsDisabled.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the GradientItemColorsDisabled class.
            </summary>
            <param name="border">Base border color.</param>
            <param name="begin">Beginning background color.</param>
            <param name="end">Ending background color.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.GradientItemColorsPressed.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the GradientItemColorsPressed class.
            </summary>
            <param name="border">Base border color.</param>
            <param name="begin">Beginning background color.</param>
            <param name="end">Ending background color.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.GradientItemColorsChecked.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the GradientItemColorsChecked class.
            </summary>
            <param name="border">Base border color.</param>
            <param name="begin">Beginning background color.</param>
            <param name="end">Ending background color.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.GradientItemColorsCheckedTracking.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the GradientItemColorsCheckedTracking class.
            </summary>
            <param name="border">Base border color.</param>
            <param name="begin">Beginning background color.</param>
            <param name="end">Ending background color.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.#ctor(ComponentFactory.Krypton.Toolkit.KryptonColorTable)">
            <summary>
            Initialise a new instance of the KryptonOffice2010Renderer class.
            </summary>
            <param name="kct">Source for text colors.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.OnRenderArrow(System.Windows.Forms.ToolStripArrowRenderEventArgs)">
            <summary>
            Raises the RenderArrow event. 
            </summary>
            <param name="e">An ToolStripArrowRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.OnRenderButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.OnRenderDropDownButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderDropDownButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.OnRenderItemCheck(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>
            Raises the RenderItemCheck event. 
            </summary>
            <param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.OnRenderItemText(System.Windows.Forms.ToolStripItemTextRenderEventArgs)">
            <summary>
            Raises the RenderItemText event. 
            </summary>
            <param name="e">A ToolStripItemTextRenderEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.OnRenderItemImage(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>
            Raises the RenderItemImage event. 
            </summary>
            <param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.OnRenderMenuItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderMenuItemBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.OnRenderSeparator(System.Windows.Forms.ToolStripSeparatorRenderEventArgs)">
            <summary>
            Raises the RenderSeparator event. 
            </summary>
            <param name="e">An ToolStripSeparatorRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.OnRenderSplitButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderSplitButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.OnRenderStatusStripSizingGrip(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderStatusStripSizingGrip event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.OnRenderToolStripContentPanelBackground(System.Windows.Forms.ToolStripContentPanelRenderEventArgs)">
            <summary>
            Raises the RenderToolStripContentPanelBackground event. 
            </summary>
            <param name="e">An ToolStripContentPanelRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBackground event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.OnRenderToolStripBorder(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBorder event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2010Renderer.OnRenderImageMargin(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderImageMargin event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonProfessionalRenderer.#ctor(ComponentFactory.Krypton.Toolkit.KryptonColorTable)">
            <summary>
            Initialise a new instance of the KryptonProfessionalRenderer class.
            </summary>
            <param name="kct">Source for text colors.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalRenderer.KCT">
            <summary>
            Gets access to the KryptonColorTable instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonProfessionalRenderer.OnRenderItemImage(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>
            Raises the RenderItemImage event. 
            </summary>
            <param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonProfessionalRenderer.OnRenderToolStripBorder(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBorder event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.#ctor(ComponentFactory.Krypton.Toolkit.KryptonColorTable)">
            <summary>
            Initialise a new instance of the KryptonSparkleRenderer class.
            </summary>
            <param name="kct">Source for text colors.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.OnRenderArrow(System.Windows.Forms.ToolStripArrowRenderEventArgs)">
            <summary>
            Raises the RenderArrow event. 
            </summary>
            <param name="e">An ToolStripArrowRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.OnRenderButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.OnRenderDropDownButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderDropDownButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.OnRenderItemCheck(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>
            Raises the RenderItemCheck event. 
            </summary>
            <param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.OnRenderItemText(System.Windows.Forms.ToolStripItemTextRenderEventArgs)">
            <summary>
            Raises the RenderItemText event. 
            </summary>
            <param name="e">A ToolStripItemTextRenderEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.OnRenderItemImage(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>
            Raises the RenderItemImage event. 
            </summary>
            <param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.OnRenderMenuItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderMenuItemBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.OnRenderSplitButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderSplitButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.OnRenderStatusStripSizingGrip(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderStatusStripSizingGrip event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.OnRenderToolStripContentPanelBackground(System.Windows.Forms.ToolStripContentPanelRenderEventArgs)">
            <summary>
            Raises the RenderToolStripContentPanelBackground event. 
            </summary>
            <param name="e">An ToolStripContentPanelRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.OnRenderSeparator(System.Windows.Forms.ToolStripSeparatorRenderEventArgs)">
            <summary>
            Raises the RenderSeparator event. 
            </summary>
            <param name="e">An ToolStripSeparatorRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBackground event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.OnRenderImageMargin(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderImageMargin event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSparkleRenderer.OnRenderToolStripBorder(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBorder event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RenderDragDockingData">
            <summary>
            Aggregates information needed for rendering drag and drop indicators.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initialize a new instance of the PaletteDragData class.
            </summary>
            <param name="showLeft">Should the left docking indicator be shown.</param>
            <param name="showRight">Should the right docking indicator be shown.</param>
            <param name="showTop">Should the top docking indicator be shown.</param>
            <param name="showBottom">Should the bottom docking indicator be shown.</param>
            <param name="showMiddle">Should the middle docking indicator be shown.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.ShowBack">
            <summary>
            Gets the visible state of the background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.ShowLeft">
            <summary>
            Gets and sets the visible state of the left indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.ShowRight">
            <summary>
            Gets and sets the visible state of the right indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.ShowTop">
            <summary>
            Gets and sets the visible state of the top indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.ShowBottom">
            <summary>
            Gets and sets the visible state of the bottom indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.ShowMiddle">
            <summary>
            Gets and sets the visible state of the middle indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.ActiveFlags">
            <summary>
            Gets the set of flags associated with active
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.ActiveLeft">
            <summary>
            Gets and sets the active state of left indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.ActiveRight">
            <summary>
            Gets and sets the active state of right indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.ActiveTop">
            <summary>
            Gets and sets the active state of top indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.ActiveBottom">
            <summary>
            Gets and sets the active state of bottom indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.ActiveMiddle">
            <summary>
            Gets and sets the active state of middle indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.AnyActive">
            <summary>
            Gets if any of the docking indicators are active.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.ClearActive">
            <summary>
            Clear all the active flags.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.RectLeft">
            <summary>
            Gets and sets the hot rectangle of the left docking indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.RectRight">
            <summary>
            Gets and sets the hot rectangle of the right docking indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.RectTop">
            <summary>
            Gets and sets the hot rectangle of the top docking indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.RectBottom">
            <summary>
            Gets and sets the hot rectangle of the bottom docking indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.RectMiddle">
            <summary>
            Gets and sets the hot rectangle of the middle docking indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderDragDockingData.DockWindowSize">
            <summary>
            Gets and sets size of the docking window required.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RenderSparkle">
            <summary>
            Extends the professional renderer to provide Sparkle style additions.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderSparkle.DrawRibbonBack(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Boolean,System.IDisposable)">
            <summary>
            Draw the background of a ribbon element.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="state">State associated with rendering.</param>
            <param name="palette">Palette used for sourcing settings.</param>
            <param name="orientation">Orientation for drawing.</param>
            <param name="composition">Drawing onto a composition element.</param>
            <param name="memento">Cached values to use when drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderSparkle.DrawRibbonTabContextTitle(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Draw a context ribbon tab title.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="paletteGeneral">Palette used for general ribbon settings.</param>
            <param name="paletteBack">Palette used for background ribbon settings.</param>
            <param name="memento">Cached storage for drawing objects.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderSparkle.DrawRibbonApplicationButton(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Draw the application button.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="state">State associated with rendering.</param>
            <param name="palette">Palette used for sourcing settings.</param>
            <param name="memento">Cached storage for drawing objects.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderSparkle.DrawRibbonDropArrow(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon drop arrow glyph.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderSparkle.DrawInputControlDropDownGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw a drop down grid appropriate for a input control.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Content palette for getting colors.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderSparkle.DrawInputControlNumericUpGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw a numeric up button image appropriate for a input control.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Content palette for getting colors.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderSparkle.DrawInputControlNumericDownGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw a numeric down button image appropriate for a input control.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Content palette for getting colors.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderSparkle.RenderToolStrip(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets a renderer for drawing the toolstrips.
            </summary>
            <param name="colorPalette">Color palette to use when rendering toolstrip.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderSparkle.DrawRibbonTabContext(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.CheckBoxImages">
            <summary>
            Storage for check box images.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.#ctor">
            <summary>
            Initialize a new instance of the CheckBoxImages class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the CheckBoxImages class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxImages.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxImages.Common">
            <summary>
            Gets and sets the common image that other check box images inherit from.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.ResetCommon">
            <summary>
            Resets the Common property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxImages.UncheckedDisabled">
            <summary>
            Gets and sets the image for use when the check box is not checked and disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.ResetUncheckedDisabled">
            <summary>
            Resets the UncheckedDisabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxImages.UncheckedNormal">
            <summary>
            Gets and sets the image for use when the check box is unchecked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.ResetUncheckedNormal">
            <summary>
            Resets the UncheckedNormal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxImages.UncheckedTracking">
            <summary>
            Gets and sets the image for use when the check box is unchecked and hot tracking.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.ResetUncheckedTracking">
            <summary>
            Resets the UncheckedTracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxImages.UncheckedPressed">
            <summary>
            Gets and sets the image for use when the check box is unchecked and pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.ResetUncheckedPressed">
            <summary>
            Resets the UncheckedPressed property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxImages.CheckedDisabled">
            <summary>
            Gets and sets the image for use when the check box is checked but disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.ResetCheckedDisabled">
            <summary>
            Resets the CheckedDisabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxImages.CheckedNormal">
            <summary>
            Gets and sets the image for use when the check box is checked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.ResetCheckedNormal">
            <summary>
            Resets the CheckedNormal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxImages.CheckedTracking">
            <summary>
            Gets and sets the image for use when the check box is checked and hot tracking.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.ResetCheckedTracking">
            <summary>
            Resets the CheckedTracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxImages.CheckedPressed">
            <summary>
            Gets and sets the image for use when the check box is checked and pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.ResetCheckedPressed">
            <summary>
            Resets the CheckedPressed property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxImages.IndeterminateDisabled">
            <summary>
            Gets and sets the image for use when the check box is indeterminate but disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.ResetIndeterminateDisabled">
            <summary>
            Resets the IndeterminateDisabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxImages.IndeterminateNormal">
            <summary>
            Gets and sets the image for use when the check box is indeterminate.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.ResetIndeterminateNormal">
            <summary>
            Resets the IndeterminateNormal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxImages.IndeterminateTracking">
            <summary>
            Gets and sets the image for use when the check box is indeterminate and hot tracking.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.ResetIndeterminateTracking">
            <summary>
            Resets the IndeterminateTracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckBoxImages.IndeterminatePressed">
            <summary>
            Gets and sets the image for use when the check box is indeterminate and pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckBoxImages.ResetIndeterminatePressed">
            <summary>
            Resets the IndeterminatePressed property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteHeaderButtonRedirect">
            <summary>
            Redirect storage for button metrics.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderButtonRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteHeaderButtonRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="contentStyle">Initial content style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderButtonRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderButtonRedirect.ButtonEdgeInset">
            <summary>
            Gets the sets how far to inset buttons from the header edge.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderButtonRedirect.ResetButtonEdgeInset">
            <summary>
            Reset the ButtonEdgeInset to the default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderButtonRedirect.ButtonPadding">
            <summary>
            Gets and sets the padding used around each button on the header.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderButtonRedirect.ResetButtonPadding">
            <summary>
            Reset the ButtonPadding to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderButtonRedirect.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderButtonRedirect.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderButtonRedirect.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteFormRedirect">
            <summary>
            Redirect storage for PaletteForm states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteFormRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteFormRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteFormRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteFormRedirect class.
            </summary>
            <param name="redirectForm">Inheritence redirection for form group.</param>
            <param name="redirectHeader">Inheritence redirection for header.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteFormRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteFormRedirect.Header">
            <summary>
            Gets access to the header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteFormRedirect.OverlayHeaders">
            <summary>
            Gets and sets a value indicating if headers should overlay the border.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteFormRedirect.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteFormRedirect.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteFormRedirect.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteForm">
            <summary>
            Implement storage for PaletteForm states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteForm.#ctor(ComponentFactory.Krypton.Toolkit.PaletteFormRedirect,ComponentFactory.Krypton.Toolkit.PaletteTripleMetricRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteForm class.
            </summary>
            <param name="inheritForm">Source for inheriting palette defaulted values.</param>
            <param name="inheritHeader">Source for inheriting header defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteForm.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteForm.SetInherit(ComponentFactory.Krypton.Toolkit.PaletteForm)">
            <summary>
            Sets the inheritence parent.
            </summary>
            <param name="inheritHeader">Source for inheriting.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteForm.Header">
            <summary>
            Gets access to the header appearance entries.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteForm.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteForm.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteForm.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007">
            <summary>
            Provide KryptonColorTable2007 values using an array of Color values as the source.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.#ctor(System.Drawing.Color[],ComponentFactory.Krypton.Toolkit.InheritBool,ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the KryptonColorTable2007 class.
            </summary>
            <param name="colors">Source of </param>
            <param name="roundedEdges">Should have rounded edges.</param>
            <param name="palette">Associated palette instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.Colors">
            <summary>
            Gets the raw set of colors.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.UseRoundedEdges">
            <summary>
            Gets a value indicating if rounded egdes are required.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonPressedBorder">
            <summary>
            Gets the border color for a button being pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonPressedGradientBegin">
            <summary>
            Gets the background starting color for a button being pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonPressedGradientMiddle">
            <summary>
            Gets the background middle color for a button being pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonPressedGradientEnd">
            <summary>
            Gets the background ending color for a button being pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonPressedHighlight">
            <summary>
            Gets the highlight background for a pressed button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonPressedHighlightBorder">
            <summary>
            Gets the highlight border for a pressed button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonSelectedBorder">
            <summary>
            Gets the border color for a button being selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonSelectedGradientBegin">
            <summary>
            Gets the background starting color for a button being selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonSelectedGradientMiddle">
            <summary>
            Gets the background middle color for a button being selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonSelectedGradientEnd">
            <summary>
            Gets the background ending color for a button being selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonSelectedHighlight">
            <summary>
            Gets the highlight background for a selected button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonSelectedHighlightBorder">
            <summary>
            Gets the highlight border for a selected button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonCheckedGradientBegin">
            <summary>
            Gets the background starting color for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonCheckedGradientMiddle">
            <summary>
            Gets the background middle color for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonCheckedGradientEnd">
            <summary>
            Gets the background ending color for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonCheckedHighlight">
            <summary>
            Gets the highlight background for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ButtonCheckedHighlightBorder">
            <summary>
            Gets the highlight border for a checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.CheckBackground">
            <summary>
            Get background of the check mark area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.CheckPressedBackground">
            <summary>
            Get background of a pressed check mark area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.CheckSelectedBackground">
            <summary>
            Get background of a selected check mark area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.GripLight">
            <summary>
            Gets the light color used to draw grips.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.GripDark">
            <summary>
            Gets the dark color used to draw grips.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ImageMarginGradientBegin">
            <summary>
            Gets the starting color for the context menu margin.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ImageMarginGradientMiddle">
            <summary>
            Gets the middle color for the context menu margin.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ImageMarginGradientEnd">
            <summary>
            Gets the ending color for the context menu margin.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ImageMarginRevealedGradientBegin">
            <summary>
            Gets the starting color for the context menu margin revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ImageMarginRevealedGradientMiddle">
            <summary>
            Gets the middle color for the context menu margin revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ImageMarginRevealedGradientEnd">
            <summary>
            Gets the ending color for the context menu margin revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.MenuBorder">
            <summary>
            Gets the color of the border around menus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.MenuItemBorder">
            <summary>
            Gets the border color for around the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.MenuItemSelected">
            <summary>
            Gets the color of a selected menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.MenuItemPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.MenuItemPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.MenuItemPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed down.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.MenuItemSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.MenuItemSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.MenuStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.MenuStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.OverflowButtonGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.OverflowButtonGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.OverflowButtonGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.RaftingContainerGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.RaftingContainerGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.SeparatorLight">
            <summary>
            Gets the light separator color.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.SeparatorDark">
            <summary>
            Gets the dark separator color.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.StatusStripGradientBegin">
            <summary>
            Gets the starting color for the status strip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.StatusStripGradientEnd">
            <summary>
            Gets the ending color for the status strip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.MenuItemText">
            <summary>
            Gets the text color used on the menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.MenuStripText">
            <summary>
            Gets the text color used on the menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ToolStripText">
            <summary>
            Gets the text color used on the tool strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.StatusStripText">
            <summary>
            Gets the text color used on the status strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.MenuStripFont">
            <summary>
            Gets the font used on the menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ToolStripFont">
            <summary>
            Gets the font used on the tool strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.StatusStripFont">
            <summary>
            Gets the font used on the status strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ToolStripBorder">
            <summary>
            Gets the border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ToolStripContentPanelGradientBegin">
            <summary>
            Gets the starting color for the content panel background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ToolStripContentPanelGradientEnd">
            <summary>
            Gets the ending color for the content panel background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ToolStripDropDownBackground">
            <summary>
            Gets the background color for drop down menus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ToolStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ToolStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ToolStripGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ToolStripPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable2007.ToolStripPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBorderEdge">
            <summary>
            Implement storage for palette border edge details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdge.#ctor(ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteBorderEdge class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorderEdge.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorderEdge.Width">
            <summary>
            Gets and sets the border width.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdge.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.KryptonLinkBehavior)">
            <summary>
            Initialize a new instance of the LinkLabelBehaviorInherit class.
            </summary>
            <param name="inherit">Palette to inherit from.</param>
            <param name="linkBehavior">Link behavior to use.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.LinkBehavior">
            <summary>
            Gets and sets the link behavior.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LinkLabelBehaviorInherit.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel">
            <summary>
            Display text and images with the styling features of the Krypton Toolkit
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.LinkClicked">
            <summary>
            Occurs when the link is clicked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.#ctor">
            <summary>
            Initialize a new instance of the KryptonLinkLabel class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.LinkBehavior">
            <summary>
            Gets and sets a value that determines the underline behavior of the link label.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.LinkVisited">
            <summary>
            Gets and sets a value indicating if the label has been visited.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.OverridePressed">
            <summary>
            Gets access to the pressed label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.OverrideFocus">
            <summary>
            Gets access to the label appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.OverrideVisited">
            <summary>
            Gets access to normal state modifications when label has been visited.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.OverrideNotVisited">
            <summary>
            Gets access to normal state modifications when label has not been visited.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.Target">
            <summary>
            Gets access to the target for mnemonic and click actions.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)">
            <summary>
            Raises the LinkClicked event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLinkLabel.SetLabelStyle(ComponentFactory.Krypton.Toolkit.LabelStyle)">
            <summary>
            Update the view elements based on the requested label style.
            </summary>
            <param name="style">New label style.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel">
            <summary>
            Special panel used in the KryptonGroup and KryptonHeaderGroup controls.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.AutoSizeChanged">
            <summary>
            Occurs when the value of the AutoSize property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.DockChanged">
            <summary>
            Occurs when the value of the Dock property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.LocationChanged">
            <summary>
            Occurs when the value of the Location property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.TabIndexChanged">
            <summary>
            Occurs when the value of the TabIndex property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.TabStopChanged">
            <summary>
            Occurs when the value of the TabStop property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.VisibleChanged">
            <summary>
            Occurs when the value of the Visible property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.#ctor(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect,ComponentFactory.Krypton.Toolkit.PaletteDouble,ComponentFactory.Krypton.Toolkit.PaletteDouble,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonGroupPanel class.
            </summary>
            <param name="alignControl">Container control for alignment.</param>
            <param name="stateCommon">Common appearance state to inherit from.</param>
            <param name="stateDisabled">Disabled appearance state.</param>
            <param name="stateNormal">Normal appearance state.</param>
            <param name="layoutHandler">Callback delegate for layout processing.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.Anchor">
            <summary>
            Gets or sets how a KryptonSplitterPanel attaches to the edges of the KryptonSplitContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.AutoSize">
            <summary>
            Gets or sets a value indicating whether the KryptonSplitterPanel is automatically resized to display its entire contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.AutoSizeMode">
            <summary>
            Gets or sets a value indicating whether the control is automatically resized to display its entire contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.BorderStyle">
            <summary>
            Gets or sets the border style for the KryptonSplitterPanel. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.Dock">
            <summary>
            Gets or sets which edge of the KryptonSplitContainer that the KryptonSplitterPanel is docked to. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.DockPadding">
            <summary>
            Gets the internal spacing between the KryptonSplitterPanel and its edges.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.Height">
            <summary>
            Gets or sets the height of the KryptonGroupPanel. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of the KryptonSplitterPanel relative to the upper-left corner of its KryptonSplitContainer. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.Name">
            <summary>
            The name of this KryptonSplitterPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.Parent">
            <summary>
            The name of this KryptonSplitterPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.Size">
            <summary>
            Gets or sets the height and width of the KryptonSplitterPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.TabIndex">
            <summary>
            Gets or sets the tab order of the KryptonSplitterPanel within its KryptonSplitContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.TabStop">
            <summary>
            Gets or sets a value indicating whether the user can give the focus to this KryptonSplitterPanel using the TAB key.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.Visible">
            <summary>
            Gets or sets a value indicating whether the KryptonSplitterPanel is displayed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.Width">
            <summary>
            Gets or sets the width of the KryptonSplitterPanel. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.PaletteMode">
            <summary>
            Gets or sets the palette to be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.Palette">
            <summary>
            Gets and sets the custom palette implementation.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.PanelBackStyle">
            <summary>
            Gets and sets the panel style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.StateCommon">
            <summary>
            Gets access to the common panel appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.StateDisabled">
            <summary>
            Gets access to the disabled panel appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.StateNormal">
            <summary>
            Gets access to the normal panel appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.DefaultMargin">
            <summary>
            Gets the space, in pixels, that is specified by default between controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.TransparentParent">
            <summary>
            Gets the control reference that is the parent for transparent drawing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.OnAutoSizeChanged(System.EventArgs)">
            <summary>
            Raises the AutoSizeChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.OnDockChanged(System.EventArgs)">
            <summary>
            Raises the DockChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.OnLocationChanged(System.EventArgs)">
            <summary>
            Raises the LocationChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.OnTabIndexChanged(System.EventArgs)">
            <summary>
            Raises the TabIndexChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.OnTabStopChanged(System.EventArgs)">
            <summary>
            Raises the TabStopChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroupPanel.OnVisibleChanged(System.EventArgs)">
            <summary>
            Raises the VisibleChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonStyleConverter">
            <summary>
            Custom type converter so that ButtonStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the ButtonStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.HeaderGroupCollapsedTargetConverter">
            <summary>
            Custom type converter so that HeaderGroupCollapseTarget values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderGroupCollapsedTargetConverter.#ctor">
            <summary>
            Initialize a new instance of the HeaderGroupCollapseTargetConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.HeaderGroupCollapsedTargetConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyleConverter">
            <summary>
            Custom type converter so that PaletteButtonSpecStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the ButtonStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.SeparatorStyleConverter">
            <summary>
            Custom type converter so that SeparatorStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the SeparatorStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.SeparatorStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.LabelStyleConverter">
            <summary>
            Custom type converter so that LabelStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LabelStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the LabelStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.LabelStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.HeaderStyleConverter">
            <summary>
            Custom type converter so that HeaderStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the HeaderStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.HeaderStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContentStyleConverter">
            <summary>
            Custom type converter so that PaletteContentStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the PaletteContentStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBorderStyleConverter">
            <summary>
            Custom type converter so that PaletteBorderStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the PaletteBorderStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorderStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBackStyleConverter">
            <summary>
            Custom type converter so that PaletteBackStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the PaletteBackStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteButtonStyleConverter">
            <summary>
            Custom type converter so that PaletteButtonStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteButtonStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the PaletteButtonStyleConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteButtonStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecEventArgs">
            <summary>
            Details for button specification related events.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecEventArgs.#ctor(ComponentFactory.Krypton.Toolkit.ButtonSpec,System.Int32)">
            <summary>
            Initialize a new instance of the ButtonSpecEventArgs class.
            </summary>
            <param name="spec">Button spec effected by event.</param>
            <param name="index">Index of page in the owning collection.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecEventArgs.ButtonSpec">
            <summary>
            Gets the navigator button spec associated with the event.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecEventArgs.Index">
            <summary>
            Gets the index of ButtonSpec associated with the event.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase">
            <summary>
            Manage a collection of button specs for placing within a collection of docking views.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.#ctor(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase,ComponentFactory.Krypton.Toolkit.ButtonSpecCollectionBase,ComponentFactory.Krypton.Toolkit.IPaletteMetric[],ComponentFactory.Krypton.Toolkit.PaletteMetricInt[],ComponentFactory.Krypton.Toolkit.PaletteMetricInt[],ComponentFactory.Krypton.Toolkit.PaletteMetricPadding[],ComponentFactory.Krypton.Toolkit.GetToolStripRenderer,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ButtonSpecManagerBase class.
            </summary>
            <param name="control">Control that owns the button manager.</param>
            <param name="redirector">Palette redirector.</param>
            <param name="variableSpecs">Variable set of button specifications.</param>
            <param name="fixedSpecs">Fixed set of button specifications.</param>
            <param name="viewMetrics">Array of target metric providers.</param>
            <param name="viewMetricIntOutside">Array of target metrics for outside spacer size.</param>
            <param name="viewMetricIntInside">Array of target metrics for inside spacer size.</param>
            <param name="viewMetricPaddings">Array of target metrics for button padding.</param>
            <param name="getRenderer">Delegate for returning a tool strip renderer.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.Control">
            <summary>
            Gets the owning control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.ToolTipManager">
            <summary>
            Gets and sets the associated tooltip manager.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.ButtonSpecViews">
            <summary>
            Gets an array containing references of all the current views.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.Construct">
            <summary>
            Perform once only construction.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.Destruct">
            <summary>
            Destruct the previously created views.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.UseMnemonic">
            <summary>
            Gets and sets the use of mnemonics.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.RecreateButtons">
            <summary>
            Requests that all the buttons be recreated.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.RefreshButtons">
            <summary>
            Requests that all the buttons have state refreshed.
            </summary>
            <returns>True if a state change was made.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.RefreshButtons(System.Boolean)">
            <summary>
            Requests that all the buttons have state refreshed.
            </summary>
            <param name="composition">Composition value for the spec view.</param>
            <returns>True if a state change was made.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processsed; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.SetDockerMetrics(ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Update the palette for a specified docker view.
            </summary>
            <param name="viewDocker">Target docker view.</param>
            <param name="viewMetric">New metric source.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.SetDockerMetrics(ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricInt,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Update the metric details for a specified docker view.
            </summary>
            <param name="viewDocker">Target docker view.</param>
            <param name="viewMetric">New metric source.</param>
            <param name="viewMetricInt">New border edge metric.</param>
            <param name="viewMetricPadding">New button border metric.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.GetButtonRectangle(ComponentFactory.Krypton.Toolkit.ButtonSpec)">
            <summary>
            Get the display rectangle of the provided button.
            </summary>
            <param name="buttonSpec">Button specification.</param>
            <returns>Display rectangle.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.ButtonSpecFromView(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Is the provided over a part of the view that wants the mouse.
            </summary>
            <param name="pt">Mouse point.</param>
            <returns>True if the view wants the mouse position; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.RenderToolStrip">
            <summary>
            Get a tool strip renderer appropriate for the hosting control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.PerformNeedPaint(System.Boolean)">
            <summary>
            Requests a repaint and optional layout be performed.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.PerformNeedPaint(System.Object,System.Boolean)">
            <summary>
            Requests a repaint and optional layout be performed.
            </summary>
            <param name="sender">Source of the paint event.</param>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.GetButtonSpecFromView(ComponentFactory.Krypton.Toolkit.ViewDrawButton)">
            <summary>
            Find the ButtonSpec definition associated with the provided button view.
            </summary>
            <param name="viewButton">View to use when searching.</param>
            <returns>ButtonSpec reference if found; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.GetFirstVisibleViewButton(ComponentFactory.Krypton.Toolkit.PaletteRelativeEdgeAlign)">
            <summary>
            Gets the view for the first visible and enabled button spec of the defined edge.
            </summary>
            <param name="align">Edge of buttons caller is interested in searching.</param>
            <returns>ViewDrawButton reference; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.GetNextVisibleViewButton(ComponentFactory.Krypton.Toolkit.PaletteRelativeEdgeAlign,ComponentFactory.Krypton.Toolkit.ViewDrawButton)">
            <summary>
            Gets the view for the next visible and enabled button spec of the defined edge.
            </summary>
            <param name="align">Edge of buttons caller is interested in searching.</param>
            <param name="current">Current button that is the marker for searching.</param>
            <returns>ViewDrawButton reference; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.GetPreviousVisibleViewButton(ComponentFactory.Krypton.Toolkit.PaletteRelativeEdgeAlign,ComponentFactory.Krypton.Toolkit.ViewDrawButton)">
            <summary>
            Gets the view for the previous visible and enabled button spec of the defined edge.
            </summary>
            <param name="align">Edge of buttons caller is interested in searching.</param>
            <param name="current">Current button that is the marker for searching.</param>
            <returns>ViewDrawButton reference; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.GetLastVisibleViewButton(ComponentFactory.Krypton.Toolkit.PaletteRelativeEdgeAlign)">
            <summary>
            Gets the view for the last visible and enabled button spec of the defined edge.
            </summary>
            <param name="align">Edge of buttons caller is interested in searching.</param>
            <returns>ViewDrawButton reference; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.CreateButtonSpecRemap(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.ButtonSpec)">
            <summary>
            Create a palette redirector for remapping button spec colors.
            </summary>
            <param name="redirector">Base palette class.</param>
            <param name="buttonSpec">ButtonSpec instance.</param>
            <returns>Palette redirector for the button spec instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.UseInsideSpacers">
            <summary>
            Gets a value indicating if inside edge spacers are required.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.DockerCount">
            <summary>
            Gets the number of dockers.
            </summary>
            <returns>Number of dockers.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.DockerIndex(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the index of the provided docker.
            </summary>
            <param name="viewDocker">View docker reference.</param>
            <returns>Index of docker; otherwise -1.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.IndexDocker(System.Int32)">
            <summary>
            Gets the docker at the specified index.
            </summary>
            <param name="i">Index.</param>
            <returns>View docker reference; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.DockerOrientation(System.Int32)">
            <summary>
            Gets the orientation of the docker at the specified index.
            </summary>
            <param name="i">Index.</param>
            <returns>VisualOrientation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.GetDockerForeground(System.Int32)">
            <summary>
            Gets the element that represents the foreground color.
            </summary>
            <param name="i">Index.</param>
            <returns>View content instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.AddViewToDocker(System.Int32,ComponentFactory.Krypton.Toolkit.ViewDockStyle,ComponentFactory.Krypton.Toolkit.ViewBase,System.Boolean)">
            <summary>
            Add a view element to a docker.
            </summary>
            <param name="i">Index of view docker.</param>
            <param name="dockStyle">Dock style for placement.</param>
            <param name="view">Actual view to add.</param>
            <param name="usingSpacers">Are view spacers being used.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.AddSpacersToDocker(System.Int32,ComponentFactory.Krypton.Toolkit.ViewLayoutMetricSpacer,ComponentFactory.Krypton.Toolkit.ViewLayoutMetricSpacer)">
            <summary>
            Add the spacing views into the indexed docker.
            </summary>
            <param name="i">Index of docker.</param>
            <param name="spacerL">Spacer for the left side.</param>
            <param name="spacerR">Spacer for the right side.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.ButtonSpecCreated(ComponentFactory.Krypton.Toolkit.ButtonSpec,ComponentFactory.Krypton.Toolkit.ButtonSpecView,System.Int32)">
            <summary>
            Perform final steps now that the button spec has been created.
            </summary>
            <param name="buttonSpec">ButtonSpec instance.</param>
            <param name="buttonView">Associated ButtonSpecView instance.</param>
            <param name="viewDockerIndex">Index of view docker button is placed onto.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.CreateButtonSpecView(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding,ComponentFactory.Krypton.Toolkit.ButtonSpec)">
            <summary>
            Create the button spec view appropriate for the button spec.
            </summary>
            <param name="redirector">Redirector for acquiring palette values.</param>
            <param name="viewPaletteMetric">Target metric providers.</param>
            <param name="viewMetricPadding">Target metric padding.</param>
            <param name="buttonSpec">ButtonSpec instance.</param>
            <returns>ButtonSpecView derived class.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecManagerBase.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="sender">Source of the paint event.</param>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecHeaderGroup">
            <summary>
            KryptonHeaderGroup specific implementation of a button specification.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecHeaderGroup.#ctor">
            <summary>
            Initialize a new instance of the HeaderGroupButtonSpec class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecHeaderGroup.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecHeaderGroup.HeaderLocation">
            <summary>
            Gets and sets if the button header location.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecHeaderGroup.ResetHeaderLocation">
            <summary>
            Resets the HeaderLocation property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecHeaderGroup.CopyFrom(ComponentFactory.Krypton.Toolkit.ButtonSpecHeaderGroup)">
            <summary>
            Value copy form the provided source to ourself.
            </summary>
            <param name="source">Source instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecHeaderGroup.GetLocation(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button location value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button location.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.SimpleCall">
            <summary>
            Signature of a bare method.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.Operation">
            <summary>
            Signature of a method that performs an operation.
            </summary>
            <param name="parameter">Operation parameter.</param>
            <returns>Operation result.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.GetToolStripRenderer">
            <summary>
            Signature of a method that returns a ToolStripRenderer instance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.CommonHelper">
            <summary>
            Set of common helper routines for the Toolkit
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CommonHelper.NullPoint">
            <summary>
            Gets access to the global null point value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CommonHelper.NullRectangle">
            <summary>
            Gets access to the global null rectangle value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CommonHelper.MatrixDisabled">
            <summary>
            Color matrix used to adjust colors to look disabled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CommonHelper.NextId">
            <summary>
            Gets the next global identifier in sequence.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CommonHelper.UniqueString">
            <summary>
            Gets a string that is guaranteed to be unique.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CommonHelper.InheritPadding">
            <summary>
            Gets the padding value used when inheritance is needed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.CheckContextMenuForShortcut(System.Windows.Forms.ContextMenuStrip,System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Check a short cut menu for a matching short and invoke that item if found.
            </summary>
            <param name="cms">ContextMenuStrip instance to check.</param>
            <param name="msg">Windows message that generated check.</param>
            <param name="keyData">Keyboard shortcut to check.</param>
            <returns>True if shortcut processed; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CommonHelper.NullContentValues">
            <summary>
            Gets reference to a null implementation of the IContentValues interface.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.ApplyPadding(System.Windows.Forms.Orientation,System.Drawing.Size,System.Windows.Forms.Padding)">
            <summary>
            Return the provided size with orientation specific padding applied.
            </summary>
            <param name="orientation">Orientation to apply padding with.</param>
            <param name="size">Starting size.</param>
            <param name="padding">Padding to be applied.</param>
            <returns>Updated size.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.ApplyPadding(ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Size,System.Windows.Forms.Padding)">
            <summary>
            Return the provided size with visual orientation specific padding applied.
            </summary>
            <param name="orientation">Orientation to apply padding with.</param>
            <param name="size">Starting size.</param>
            <param name="padding">Padding to be applied.</param>
            <returns>Updated size.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.ApplyPadding(System.Windows.Forms.Orientation,System.Drawing.Rectangle,System.Windows.Forms.Padding)">
            <summary>
            Return the provided rectangle with orientation specific padding applied.
            </summary>
            <param name="orientation">Orientation to apply padding with.</param>
            <param name="rect">Starting rectangle.</param>
            <param name="padding">Padding to be applied.</param>
            <returns>Updated rectangle.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.ApplyPadding(ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Rectangle,System.Windows.Forms.Padding)">
            <summary>
            Return the provided rectangle with visual orientation specific padding applied.
            </summary>
            <param name="orientation">Orientation to apply padding with.</param>
            <param name="rect">Starting rectangle.</param>
            <param name="padding">Padding to be applied.</param>
            <returns>Updated rectangle.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.OrientatePadding(ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Windows.Forms.Padding)">
            <summary>
            Modify the incoming padding to reflect the visual orientation.
            </summary>
            <param name="orientation">Orientation to apply to padding.</param>
            <param name="padding">Padding to be modified.</param>
            <returns>Updated padding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.SwapRectangleSizes(System.Drawing.Rectangle@)">
            <summary>
            Swap the width and height values for the rectangle.
            </summary>
            <param name="rect">Rectangle to modify.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.GetRightToLeftLayout(System.Windows.Forms.Control)">
            <summary>
            Gets the form level right to left setting.
            </summary>
            <param name="control">Control for which the setting is needed.</param>
            <returns>RightToLeft setting.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.ValidContextMenuStrip(System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Decide if the context menu strip should be displayed.
            </summary>
            <param name="cms">Reference to context menu strip.</param>
            <returns>True to display; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.ValidKryptonContextMenu(ComponentFactory.Krypton.Toolkit.KryptonContextMenu)">
            <summary>
            Decide if the KryptonContextMenu should be displayed.
            </summary>
            <param name="kcm">Reference to context menu strip.</param>
            <returns>True to display; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.PerformOperation(ComponentFactory.Krypton.Toolkit.Operation,System.Object)">
            <summary>
            Perform operation in a worker thread with wait dialog in main thread.
            </summary>
            <param name="op">Delegate of operation to be performed.</param>
            <param name="parameter">Parameter to be passed into the operation.</param>
            <returns>Result of performing the operation.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.IsOverrideState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if the provided value is an override state.
            </summary>
            <param name="state">Specific state.</param>
            <returns>True if an override state; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.IsOverrideStateExclude(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if the provided value is an override state but excludes one value.
            </summary>
            <param name="state">Specific state.</param>
            <param name="exclude">State that should be excluded from test.</param>
            <returns>True if an override state; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.HasNoBorders(ComponentFactory.Krypton.Toolkit.PaletteDrawBorders)">
            <summary>
            Gets a value indicating if the enumeration specifies no borders.
            </summary>
            <param name="borders">Enumeration for borders.</param>
            <returns>True if no border specified; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.HasABorder(ComponentFactory.Krypton.Toolkit.PaletteDrawBorders)">
            <summary>
            Gets a value indicating if the enumeration specifies at least one border.
            </summary>
            <param name="borders">Enumeration for borders.</param>
            <returns>True if at least one border specified; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.HasOneBorder(ComponentFactory.Krypton.Toolkit.PaletteDrawBorders)">
            <summary>
            Gets a value indicating if the enumeration specifies at least one border.
            </summary>
            <param name="borders">Enumeration for borders.</param>
            <returns>True if at least one border specified; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.HasTopBorder(ComponentFactory.Krypton.Toolkit.PaletteDrawBorders)">
            <summary>
            Gets a value indicating if the enumeration includes the top border.
            </summary>
            <param name="borders">Enumeration for borders.</param>
            <returns>True if includes the top border; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.HasBottomBorder(ComponentFactory.Krypton.Toolkit.PaletteDrawBorders)">
            <summary>
            Gets a value indicating if the enumeration includes the bottom border.
            </summary>
            <param name="borders">Enumeration for borders.</param>
            <returns>True if includes the bottom border; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.HasLeftBorder(ComponentFactory.Krypton.Toolkit.PaletteDrawBorders)">
            <summary>
            Gets a value indicating if the enumeration includes the left border.
            </summary>
            <param name="borders">Enumeration for borders.</param>
            <returns>True if includes the left border; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.HasRightBorder(ComponentFactory.Krypton.Toolkit.PaletteDrawBorders)">
            <summary>
            Gets a value indicating if the enumeration includes the right border.
            </summary>
            <param name="borders">Enumeration for borders.</param>
            <returns>True if includes the right border; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.HasAllBorders(ComponentFactory.Krypton.Toolkit.PaletteDrawBorders)">
            <summary>
            Gets a value indicating if the enumeration specifies all four borders.
            </summary>
            <param name="borders">Enumeration for borders.</param>
            <returns>True if all four borders specified; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.OrientateDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteDrawBorders,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Apply an orientation to the draw border edges to get a correct value.
            </summary>
            <param name="borders">Border edges to be drawn.</param>
            <param name="orientation">How to adjsut the border edges.</param>
            <returns>Border edges adjusted for orientation.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.ReverseOrientateDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteDrawBorders,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Apply a reversed orientation so that when orientated again it comes out with the original value.
            </summary>
            <param name="borders">Border edges to be drawn.</param>
            <param name="orientation">How to adjsut the border edges.</param>
            <returns>Border edges adjusted for orientation.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.VisualToOrientation(ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Convert from VisualOrientation to Orientation.
            </summary>
            <param name="orientation">VisualOrientation value.</param>
            <returns>Orientation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.ButtonStyleToPalette(ComponentFactory.Krypton.Toolkit.ButtonStyle)">
            <summary>
            Convert from ButtonStyle to PaletteButtonStyle.
            </summary>
            <param name="style">ButtonStyle to convert.</param>
            <returns>PaletteButtonStyle enumeration value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.RoundedRectanglePath(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Create a graphics path that describes a rounded rectangle.
            </summary>
            <param name="rect">Rectangle to become rounded.</param>
            <param name="rounding">The rounding factor to apply.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.ColorToBlackAndWhite(System.Drawing.Color)">
            <summary>
            Convert the color to a black and white color.
            </summary>
            <param name="color">Base color.</param>
            <returns>Black and White version of color.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.WhitenColor(System.Drawing.Color,System.Single,System.Single,System.Single)">
            <summary>
            Whiten a provided color by applying per channel percentages.
            </summary>
            <param name="color1">Color.</param>
            <param name="percentR">Percentage of red to keep.</param>
            <param name="percentG">Percentage of green to keep.</param>
            <param name="percentB">Percentage of blue to keep.</param>
            <returns>Modified color.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.BlackenColor(System.Drawing.Color,System.Single,System.Single,System.Single)">
            <summary>
            Blacken a provided color by applying per channel percentages.
            </summary>
            <param name="color1">Color.</param>
            <param name="percentR">Percentage of red to keep.</param>
            <param name="percentG">Percentage of green to keep.</param>
            <param name="percentB">Percentage of blue to keep.</param>
            <returns>Modified color.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.MergeColors(System.Drawing.Color,System.Single,System.Drawing.Color,System.Single)">
            <summary>
            Merge two colors together using relative percentages.
            </summary>
            <param name="color1">First color.</param>
            <param name="percent1">Percentage of first color to use.</param>
            <param name="color2">Second color.</param>
            <param name="percent2">Percentage of second color to use.</param>
            <returns>Merged color.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.MergeColors(System.Drawing.Color,System.Single,System.Drawing.Color,System.Single,System.Drawing.Color,System.Single)">
            <summary>
            Merge three colors together using relative percentages.
            </summary>
            <param name="color1">First color.</param>
            <param name="percent1">Percentage of first color to use.</param>
            <param name="color2">Second color.</param>
            <param name="percent2">Percentage of second color to use.</param>
            <param name="color3">Third color.</param>
            <param name="percent3">Percentage of third color to use.</param>
            <returns>Merged color.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.ColorDepth">
            <summary>
            Get the number of bits used to define the color depth of the display.
            </summary>
            <returns>Number of bits in color depth.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CommonHelper.IsShiftKeyPressed">
            <summary>
            Gets a value indicating if the SHIFT key is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CommonHelper.IsCtrlKeyPressed">
            <summary>
            Gets a value indicating if the CTRL key is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CommonHelper.IsAltKeyPressed">
            <summary>
            Gets a value indicating if the ALT key is pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.GetControlWithFocus(System.Windows.Forms.Control)">
            <summary>
            Search the hierarchy of the provided control looking for one that has the focus.
            </summary>
            <param name="control">Top of the hierarchy to search.</param>
            <returns>Control with focus; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.AddControlToParent(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            Add the provided control to a parent collection.
            </summary>
            <param name="parent">Parent control.</param>
            <param name="c">Control to be added.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.RemoveControlFromParent(System.Windows.Forms.Control)">
            <summary>
            Remove the provided control from its parent collection.
            </summary>
            <param name="c">Control to be removed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.GetWindowBorders(System.Windows.Forms.CreateParams)">
            <summary>
            Gets the size of the borders requested by the real window.
            </summary>
            <param name="cp">Window style parameters.</param>
            <returns>Border sizing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.IsFormMinimized(System.Windows.Forms.Form)">
            <summary>
            Discover if the provided Form is currently minimized.
            </summary>
            <param name="f">Form reference.</param>
            <returns>True if minimized; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.IsFormMaximized(System.Windows.Forms.Form)">
            <summary>
            Discover if the provided Form is currently maximized.
            </summary>
            <param name="f">Form reference.</param>
            <returns>True if maximized; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.RealClientRectangle(System.IntPtr)">
            <summary>
            Gets the real client rectangle of the list.
            </summary>
            <param name="handle">Window handle of the control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.ContentStyleFromLabelStyle(ComponentFactory.Krypton.Toolkit.LabelStyle)">
            <summary>
            Find the appropriate content style to match the incoming label style.
            </summary>
            <param name="style">LabelStyle enumeration.</param>
            <returns>Matching PaletteContentStyle enumeration value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.PaletteTextHintToRenderingHint(ComponentFactory.Krypton.Toolkit.PaletteTextHint)">
            <summary>
            Convert from palette rendering hint to actual rendering hint.
            </summary>
            <param name="hint">Palette rendering hint.</param>
            <returns>Converted value for use with a Graphics instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.SeparatorStyleToMetricPadding(ComponentFactory.Krypton.Toolkit.SeparatorStyle)">
            <summary>
            Get the correct metric padding for the provided separator style.
            </summary>
            <param name="separatorStyle">Separator style.</param>
            <returns>Matching metric padding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.MakeCustomDateFormat(System.String)">
            <summary>
            Ensure that a single character format string is treated as a custom format.
            </summary>
            <param name="format">Incoming format.</param>
            <returns>Corrected format.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.CreateInstance(System.Type,System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Create new instance of specified type within the designer host, if provided.
            </summary>
            <param name="itemType">Type of the item to create.</param>
            <param name="host">Designer host used if provided.</param>
            <returns>Reference to new instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.DestroyInstance(System.Object,System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Destroy instance of an object using the provided designer host.
            </summary>
            <param name="instance">Reference to item for destroying.</param>
            <param name="host">Designer host used if provided.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.LogOutput(System.String)">
            <summary>
            Output some debug data to a log file that exists in same directory as the application.
            </summary>
            <param name="str">String to output.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.DesignMode(System.ComponentModel.Component)">
            <summary>
            Discover if the component is in design mode.
            </summary>
            <param name="c">Component to test.</param>
            <returns>True if in design mode; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.DoubleToString(System.Double)">
            <summary>
            Convert a double to a culture invariant string value.
            </summary>
            <param name="d">Double to convert.</param>
            <returns>Culture invariant string representation.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.StringToDouble(System.String)">
            <summary>
            Convert a culture invariant string value to a double.
            </summary>
            <param name="s">String to convert.</param>
            <returns>Double value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.SizeToString(System.Drawing.Size)">
            <summary>
            Convert a Size to a culture invariant string value.
            </summary>
            <param name="s">Size to convert.</param>
            <returns>Culture invariant string representation.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.StringToSize(System.String)">
            <summary>
            Convert a culture invariant string value to a Size.
            </summary>
            <param name="s">String to convert.</param>
            <returns>Size value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.PointToString(System.Drawing.Point)">
            <summary>
            Convert a Point to a culture invariant string value.
            </summary>
            <param name="s">Size to convert.</param>
            <returns>Culture invariant string representation.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.StringToPoint(System.String)">
            <summary>
            Convert a culture invariant string value to a Point.
            </summary>
            <param name="s">String to convert.</param>
            <returns>Point value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.BoolToString(System.Boolean)">
            <summary>
            Convert a Boolean to a culture invariant string value.
            </summary>
            <param name="b">Boolean to convert.</param>
            <returns>Culture invariant string representation.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.StringToBool(System.String)">
            <summary>
            Convert a culture invariant string value to a Boolean.
            </summary>
            <param name="s">String to convert.</param>
            <returns>Boolean value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.ColorToString(System.Drawing.Color)">
            <summary>
            Convert a Color to a culture invariant string value.
            </summary>
            <param name="c">Color to convert.</param>
            <returns>Culture invariant string representation.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.StringToColor(System.String)">
            <summary>
            Convert a culture invariant string value to a Color.
            </summary>
            <param name="s">String to convert.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.ClientMouseMessageToScreenPt(System.Windows.Forms.Message)">
            <summary>
            Convert a client mouse position inside a windows message into a screen position.
            </summary>
            <param name="m">Window message.</param>
            <returns>Screen point.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.TextToXmlAttribute(System.Xml.XmlWriter,System.String,System.String)">
            <summary>
            Only persist the provided name/value pair as an Xml attribute if the value is not null or empty.
            </summary>
            <param name="xmlWriter">Xml writer to save information into.</param>
            <param name="name">Attribute name.</param>
            <param name="value">Attribute value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.TextToXmlAttribute(System.Xml.XmlWriter,System.String,System.String,System.String)">
            <summary>
            Only persist the provided name/value pair as an Xml attribute if the value is not null/empty and not the default.
            </summary>
            <param name="xmlWriter">Xml writer to save information into.</param>
            <param name="name">Attribute name.</param>
            <param name="value">Attribute value.</param>
            <param name="def">Default value.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.XmlAttributeToText(System.Xml.XmlReader,System.String)">
            <summary>
            Read the named attribute value but if no attribute is found then an empty string.
            </summary>
            <param name="xmlReader">Xml reader to load information from.</param>
            <param name="name">Attribute name.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.XmlAttributeToText(System.Xml.XmlReader,System.String,System.String)">
            <summary>
            Read the named attribute value but if no attribute is found then return the provided default.
            </summary>
            <param name="xmlReader">Xml reader to load information from.</param>
            <param name="name">Attribute name.</param>
            <param name="def">Default value.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.ImageToXmlCData(System.Xml.XmlWriter,System.String,System.Drawing.Image)">
            <summary>
            Convert a Image to a culture invariant string value.
            </summary>
            <param name="xmlWriter">Xml writer to save information into.</param>
            <param name="name">Name of image to save.</param>
            <param name="image">Image to persist.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CommonHelper.XmlCDataToImage(System.Xml.XmlReader)">
            <summary>
            Convert a culture invariant string value into an Image.
            </summary>
            <param name="xmlReader">Xml reader to load information from.</param>
            <returns>Image that was recreated.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CommonHelper.ActiveFloatingWindow">
            <summary>
            Gets a reference to the currently active floating window.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonController">
            <summary>
            Process mouse events for a standard button.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonController.Click">
            <summary>
            Occurs when the mouse is used to left click the target.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonController.RightClick">
            <summary>
            Occurs when the mouse is used to right click the target.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonController.MouseSelect">
            <summary>
            Occurs when the mouse is used to left select the target.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonController.DragStart">
            <summary>
            Occurs when start of drag operation occurs.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonController.DragMove">
            <summary>
            Occurs when drag moves.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonController.DragEnd">
            <summary>
            Occurs when drag ends.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonController.DragQuit">
            <summary>
            Occurs when drag quits.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonController.ButtonDragRectangle">
            <summary>
            Occurs when the drag rectangle for the button is required.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonController.ButtonDragOffset">
            <summary>
            Occurs when the dragging inside the button drag rectangle.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.#ctor(ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ButtonController class.
            </summary>
            <param name="target">Target for state changes.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.Tag">
            <summary>
            Gets and sets the user data associated with the controller.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.BecomesFixed">
            <summary>
            Gets and sets if the button becomes fixed in pressed appearance when pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.BecomesRightFixed">
            <summary>
            Gets and sets if the button becomes fixed in pressed appearance when pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.RemoveFixed">
            <summary>
            Remove the fixed pressed mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.MousePoint">
            <summary>
            Gets the current tracking mouse point.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.AllowDragging">
            <summary>
            Gets and sets if dragging is allowed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.ClearDragRect">
            <summary>
            Reset the dragging rect to prevent any dragging starting.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.ClickOnDown">
            <summary>
            Gets and sets if the press down should cause the click.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.SplitRectangle">
            <summary>
            Gets and sets the area of the button which is split.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.NonClientAsNormal">
            <summary>
            Gets and sets the drawing of a non client mouse position when pressed as normal.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.Repeat">
            <summary>
            Gets and sets the need for repeat clicks.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.Target">
            <summary>
            Gets access to the associated target of the controller.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.IsOperating">
            <summary>
            Get a value indicating if the controller is operating
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.IsOnlyPressedWhenOver">
            <summary>
            Gets a value indicating if the state is pressed only when over button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonController.Captured">
            <summary>
            Gets a value indicating if mouse input is being captured.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.ViewIsPartOfButton(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Discovers if the provided view is part of the button.
            </summary>
            <param name="next">View to investigate.</param>
            <returns>True is part of button; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.UpdateTargetState(System.Windows.Forms.Control)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="c">Owning control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.OnButtonDragRectangle(ComponentFactory.Krypton.Toolkit.ButtonDragRectangleEventArgs)">
            <summary>
            Raises the ButtonDragRectangle event.
            </summary>
            <param name="e">An ButtonDragRectangleEventArgs containing the event args.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.OnButtonDragOffset(ComponentFactory.Krypton.Toolkit.ButtonDragOffsetEventArgs)">
            <summary>
            Raises the ButtonDragOffset event.
            </summary>
            <param name="e">An ButtonDragOffsetEventArgs containing the event args.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.OnDragStart(System.Drawing.Point,System.Drawing.Point,System.Windows.Forms.Control)">
            <summary>
            Raises the DragStart event.
            </summary>
            <param name="mousePt">Mouse point at time of event.</param>
            <param name="offset">Offset compared to target.</param>
            <param name="c">Control that is source of drag start.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.OnDragMove(System.Drawing.Point)">
            <summary>
            Raises the DragMove event.
            </summary>
            <param name="mousePt">Mouse point at time of event.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.OnDragEnd(System.Drawing.Point)">
            <summary>
            Raises the DragEnd event.
            </summary>
            <param name="mousePt">Mouse point at time of event.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.OnDragQuit">
            <summary>
            Raises the DragQuit event.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.OnClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.OnRightClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the RightClick event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.OnMouseSelect(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseSelect event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ISeparatorSource">
            <summary>
            Describes the interface exposed by a separator source.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ISeparatorSource.SeparatorControl">
            <summary>
            Gets the top level control of the source.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ISeparatorSource.SeparatorOrientation">
            <summary>
            Gets the orientation of the separator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ISeparatorSource.SeparatorCanMove">
            <summary>
            Can the separator be moved by the user.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ISeparatorSource.SeparatorIncrements">
            <summary>
            Gets the amount the splitter can be incremented.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ISeparatorSource.SeparatorMoveBox">
            <summary>
            Gets the box representing the minimum and maximum allowed splitter movement.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ISeparatorSource.SeparatorMoving(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Indicates the separator is moving.
            </summary>
            <param name="mouse">Current mouse position in client area.</param>
            <param name="splitter">Current position of the splitter.</param>
            <returns>True if movement should be cancelled; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ISeparatorSource.SeparatorMoved(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Indicates the separator has moved.
            </summary>
            <param name="mouse">Current mouse position in client area.</param>
            <param name="splitter">Current position of the splitter.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ISeparatorSource.SeparatorNotMoved">
            <summary>
            Indicates the separator has not moved.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.SeparatorController">
             <summary>
            Process mouse events for a separator style element.
             </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorController.#ctor(ComponentFactory.Krypton.Toolkit.ISeparatorSource,ComponentFactory.Krypton.Toolkit.ViewBase,System.Boolean,System.Boolean,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the SeparatorController class.
            </summary>
            <param name="source">Source of separator information.</param>
            <param name="target">Target for state changes.</param>
            <param name="splitCursors">Show as split or movement cursors.</param>
            <param name="drawIndicator">Draw a separator indicator.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorController.Dispose">
            <summary>
            Dispose of object resources.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.SeparatorController.DrawMoveIndicator">
            <summary>
            Gets and sets the drawing of the movement indicator.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.SeparatorController.IsMoving">
            <summary>
            Gets a value indicating if the separator is moving.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorController.AbortMoving">
            <summary>
            Request that the separator abort moving.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorController.DrawSeparatorStarting(System.Drawing.Point)">
            <summary>
            Draw the initial separator position.
            </summary>
            <param name="splitter">Initial splitter position.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorController.DrawSeparatorReposition(System.Drawing.Point)">
            <summary>
            Redraw the splitter in the new position.
            </summary>
            <param name="splitter">New position of the splitter.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorController.DrawSeparatorRemoved">
            <summary>
            Remove drawing of any splitter.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.SeparatorController.IsOperating">
            <summary>
            Get a value indicating if the controller is operating
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.SeparatorController.IsOnlyPressedWhenOver">
            <summary>
            Gets a value indicating if the state is pressed only when over button.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorMessageFilter.#ctor(ComponentFactory.Krypton.Toolkit.SeparatorController)">
            <summary>
            Initialize a new instance of the SeparatorMessageFilter class.
            </summary>
            <param name="controller">Owning class instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.SeparatorMessageFilter.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched.
            </summary>
            <param name="m">The message to be dispatched.</param>
            <returns>true to filter the message and stop it from being dispatched.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IMouseController">
            <summary>
            Interface for processing mouse notifications.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IMouseController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IMouseController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IMouseController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IMouseController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IMouseController.MouseLeave(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IMouseController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IMouseController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IKeyController">
            <summary>
            Interface for processing keyboard notifications.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IKeyController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IKeyController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IKeyController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ISourceController">
            <summary>
            Interface for processing source notifications.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ISourceController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ISourceController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonCheckSet">
            <summary>
            Enforce mutual exclusive for a group of KryptonCheckButton controls.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.KryptonCheckButtonCollection">
            <summary>
            Manages a collection of KryptonCheckButton references.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.KryptonCheckButtonCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonCheckSet)">
            <summary>
            Initialize a new instance of the KryptonCheckButtonCollection class.
            </summary>
            <param name="owner">Owning component</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.KryptonCheckButtonCollection.Add(ComponentFactory.Krypton.Toolkit.KryptonCheckButton)">
            <summary>
            Adds the specifies KryptonCheckButton to the collection.
            </summary>
            <param name="checkButton">The KryptonCheckButton object to add to the collection.</param>
            <returns>The index of the new entry.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.KryptonCheckButtonCollection.Contains(ComponentFactory.Krypton.Toolkit.KryptonCheckButton)">
            <summary>
            Determines whether a KryptonCheckButton is in the collection.
            </summary>
            <param name="checkButton">The KryptonCheckButton to locate in the collection.</param>
            <returns>True if found in collection; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.KryptonCheckButtonCollection.IndexOf(ComponentFactory.Krypton.Toolkit.KryptonCheckButton)">
            <summary>
            Returns the index of the KryptonCheckButton reference.
            </summary>
            <param name="checkButton">The KryptonCheckButton to locate.</param>
            <returns>Index of reference; otherwise -1.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.KryptonCheckButtonCollection.Insert(System.Int32,ComponentFactory.Krypton.Toolkit.KryptonCheckButton)">
            <summary>
            Inserts a KryptonCheckButton reference into the collection at the specified location.
            </summary>
            <param name="index">Index of position to insert.</param>
            <param name="checkButton">The KryptonCheckButton reference to insert.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.KryptonCheckButtonCollection.Remove(ComponentFactory.Krypton.Toolkit.KryptonCheckButton)">
            <summary>
            Removes a KryptonCheckButton from the collection.
            </summary>
            <param name="checkButton">The KryptonCheckButton to remove.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.KryptonCheckButtonCollection.Item(System.Int32)">
            <summary>
            Gets the KryptonCheckButton at the specified index.
            </summary>
            <param name="index">Index of entry to return.</param>
            <returns>Reference of KryptonCheckButton instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.KryptonCheckButtonCollection.OnClear">
            <summary>
            Occurs when the collection is about to be cleared.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.KryptonCheckButtonCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Occurs when a new entry has been added to the collection.
            </summary>
            <param name="index">Index of new entry.</param>
            <param name="value">Value at the new index.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.KryptonCheckButtonCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Occurs when an entry has been removed from the collection.
            </summary>
            <param name="index">Index of the removed entry.</param>
            <param name="value">Value at the removed entry.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.KryptonCheckButtonCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Occurs when a index has a value replaced.
            </summary>
            <param name="index">Index of the change in value.</param>
            <param name="oldValue">Value being replaced.</param>
            <param name="newValue">Value to be used.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.CheckedButtonChanged">
            <summary>
            Occurs when the value of the CheckedButton property has changed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.#ctor">
            <summary>
            Initialize a new instance of the KryptonCheckSet class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initialize a new instance of the KryptonCheckSet class.
            </summary>
            <param name="container">Container that owns the component.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.AllowUncheck">
            <summary>
            Gets and sets a value indicating if the checked button is allowed to be unchecked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.CheckedButton">
            <summary>
            Gets and sets the currently checked button in the set.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.CheckedIndex">
            <summary>
            Gets and sets the index of the checked button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.CheckButtons">
            <summary>
            Gets access to the collection of KryptonCheckButton referencs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckSet.OnCheckedButtonChanged(System.EventArgs)">
            <summary>
            Raises the CheckedButtonChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonCheckButton">
            <summary>
            Presents the user with a binary choice such as Yes/No or True/False.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.CheckedChanging">
            <summary>
            Occurs when the value of the Checked property is about to change.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.CheckedChanged">
            <summary>
            Occurs when the value of the Checked property has changed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.#ctor">
            <summary>
            Initialize a new instance of the KryptonCheckButton class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.StateCheckedNormal">
            <summary>
            Gets access to the normal checked button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.StateCheckedTracking">
            <summary>
            Gets access to the hot tracking checked button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.StateCheckedPressed">
            <summary>
            Gets access to the pressed checked button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.Checked">
            <summary>
            Gets or sets a value indicating whether the KryptonCheckButton is in the checked state. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.AllowUncheck">
            <summary>
            Gets or sets a value indicating whether the user can uncheck the button when in the checked state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.OnKryptonCommandChanged(System.EventArgs)">
            <summary>
            Raises the KryptonCommandChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.CreateButtonValues(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates a values storage object appropriate for control.
            </summary>
            <returns>Set of button values.</returns>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.OnCheckedChanging(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the CheckedChanging event.
            </summary>
            <param name="e">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonCheckButton.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the CheckedChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonButton">
            <summary>
            Combines button functionality with the styling features of the Krypton Toolkit.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonButton.KryptonCommandChanged">
            <summary>
            Occurs when the value of the KryptonCommand property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.#ctor">
            <summary>
            Initialize a new instance of the KryptonButton class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.AutoSize">
            <summary>
            Gets and sets the automatic resize of the control to fit contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.Text">
            <summary>
            Gets or sets the text associated with this control. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.Orientation">
            <summary>
            Gets and sets the visual orientation of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.ButtonStyle">
            <summary>
            Gets and sets the button style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.Values">
            <summary>
            Gets access to the button content.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.StateCommon">
            <summary>
            Gets access to the common button appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.StateDisabled">
            <summary>
            Gets access to the disabled button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.StateNormal">
            <summary>
            Gets access to the normal button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.StateTracking">
            <summary>
            Gets access to the hot tracking button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.StatePressed">
            <summary>
            Gets access to the pressed button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.OverrideDefault">
            <summary>
            Gets access to the normal button appearance when default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.OverrideFocus">
            <summary>
            Gets access to the button appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.DialogResult">
            <summary>
            Gets or sets the value returned to the parent form when the button is clicked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.NotifyDefault(System.Boolean)">
            <summary>
            Notifies a control that it is the default button so that its appearance and behavior is adjusted accordingly. 
            </summary>
            <param name="value">true if the control should behave as a default button; otherwise false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.PerformClick">
            <summary>
            Generates a Click event for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether an ampersand is included in the text of the control. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.ImeMode">
            <summary>
            Determins the IME status of the object when selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.DefaultImeMode">
            <summary>
            Gets the default Input Method Editor (IME) mode supported by this control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processsed; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.ContextMenuClosed">
            <summary>
            Called when a context menu has just been closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.SetStyles(ComponentFactory.Krypton.Toolkit.ButtonStyle)">
            <summary>
            Update the state objects to reflect the new button style.
            </summary>
            <param name="buttonStyle">New button style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.CreateButtonValues(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates a values storage object appropriate for control.
            </summary>
            <returns>Set of button values.</returns>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.OnKryptonCommandChanged(System.EventArgs)">
            <summary>
            Raises the KryptonCommandChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonButton.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonButton.ViewDrawButton">
            <summary>
            Gets access to the view element for the button.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonGroup">
            <summary>
            Group related controls together with Krypton Toolkit styling.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroup.#ctor">
            <summary>
            Initialize a new instance of the KryptonGroup class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroup.Name">
            <summary>
            Gets and sets the name of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroup.AutoSize">
            <summary>
            Gets or sets a value indicating whether the control is automatically resized to display its entire contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroup.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroup.AutoSizeMode">
            <summary>
            Gets and sets the auto size mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroup.Panel">
            <summary>
            Gets access to the internal panel that contains group content.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroup.GroupBorderStyle">
            <summary>
            Gets and sets the border style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroup.GroupBackStyle">
            <summary>
            Gets and sets the background style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroup.StateCommon">
            <summary>
            Gets access to the common group appearance entries that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroup.StateDisabled">
            <summary>
            Gets access to the disabled group appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroup.StateNormal">
            <summary>
            Gets access to the normal group appearance entries.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroup.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Get the preferred size of the control based on a proposed size.
            </summary>
            <param name="proposedSize">Starting size proposed by the caller.</param>
            <returns>Calculated preferred size.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonGroup.DisplayRectangle">
            <summary>
            Gets the rectangle that represents the display area of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroup.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroup.ForceControlLayout">
            <summary>
            Force the layout logic to size and position the panels.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroup.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the KryptonGroup.
            </summary>
            <returns>A new instance of Control.ControlCollection assigned to the control.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroup.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroup.OnInitialized(System.EventArgs)">
            <summary>
            Raises the Initialized event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroup.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroup.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroup.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonGroup.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonHeader">
            <summary>
            Provides a description for a section of your form.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonHeader.HeaderButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecAny instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeader.HeaderButtonSpecCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonHeader)">
            <summary>
            Initialize a new instance of the HeaderButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeader.#ctor">
            <summary>
            Initialize a new instance of the KryptonHeader class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeader.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.AutoSize">
            <summary>
            Gets and sets the automatic resize of the control to fit contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.AutoSizeMode">
            <summary>
            Gets and sets the auto size mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.Text">
            <summary>
            Gets or sets the text associated with this control. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeader.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.Orientation">
            <summary>
            Gets and sets the visual orientation of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether mnemonics will fire button spec buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be displayed for button specs.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.HeaderStyle">
            <summary>
            Gets and sets the header style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.Values">
            <summary>
            Gets access to the header content.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.StateCommon">
            <summary>
            Gets access to the common header appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.StateDisabled">
            <summary>
            Gets access to the disabled header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.StateNormal">
            <summary>
            Gets access to the normal header appearance entries.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeader.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.ToolTipManager">
            <summary>
            Gets access to the ToolTipManager used for displaying tool tips.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeader.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeader.DesignerComponentFromPoint(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeader.DesignerMouseLeave">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeader.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processsed; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeader.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeader.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeader.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Processes a notification from palette storage of a button spec change.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup">
            <summary>
            Combines the benefits of the KryptonHeader and the KryptonGroup into one.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.HeaderGroupButtonSpecCollection">
            <summary>
            Collection for managing HeaderGroupButtonSpec instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.HeaderGroupButtonSpecCollection.#ctor(ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup)">
            <summary>
            Initialize a new instance of the HeaderGroupButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.CollapsedChanged">
            <summary>
            Occurs when the collapsed property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.#ctor">
            <summary>
            Initialize a new instance of the KryptonHeaderGroup class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.Name">
            <summary>
            Gets and sets the name of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.AutoSize">
            <summary>
            Gets or sets a value indicating whether the control is automatically resized to display its entire contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.AutoSizeMode">
            <summary>
            Gets and sets the auto size mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.Text">
            <summary>
            Gets or sets the text associated with this control. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether mnemonics will fire button spec buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.Panel">
            <summary>
            Gets access to the internal panel that contains group content.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.AutoCollapseArrow">
            <summary>
            Gets or sets a value indicating if collapsed mode is auto toggled by arrow button specs.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.Collapsed">
            <summary>
            Gets or sets a value indicating if the appearance is collapsed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.CollapseTarget">
            <summary>
            Gets or sets a value indicating how to collapsed the appearance when entering collapse mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be displayed for button specs.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.GroupBorderStyle">
            <summary>
            Gets and sets the border style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.GroupBackStyle">
            <summary>
            Gets and sets the background style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.HeaderStylePrimary">
            <summary>
            Gets and sets the primary header style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.HeaderStyleSecondary">
            <summary>
            Gets and sets the secondary header style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.HeaderPositionPrimary">
            <summary>
            Gets and sets the position of the primary header.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.HeaderPositionSecondary">
            <summary>
            Gets and sets the position of the secondary header.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.HeaderVisiblePrimary">
            <summary>
            Gets and sets the primary header visibility.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.HeaderVisibleSecondary">
            <summary>
            Gets and sets the secondary header visibility.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.StateCommon">
            <summary>
            Gets access to the common header group appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.StateDisabled">
            <summary>
            Gets access to the disabled header group appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.StateNormal">
            <summary>
            Gets access to the normal header group appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.ValuesPrimary">
            <summary>
            Gets access to the primary header content.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.ValuesSecondary">
            <summary>
            Gets access to the secondary header content.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Get the preferred size of the control based on a proposed size.
            </summary>
            <param name="proposedSize">Starting size proposed by the caller.</param>
            <returns>Calculated preferred size.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.DisplayRectangle">
            <summary>
            Gets the rectangle that represents the display area of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.ToolTipManager">
            <summary>
            Gets access to the ToolTipManager used for displaying tool tips.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.DesignerComponentFromPoint(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.DesignerMouseLeave">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.ForceControlLayout">
            <summary>
            Force the layout logic to size and position the panels.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.OnCollapsedChanged(System.EventArgs)">
            <summary>
            Raises the CollapsedChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the KryptonHeaderGroup.
            </summary>
            <returns>A new instance of Control.ControlCollection assigned to the control.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.OnInitialized(System.EventArgs)">
            <summary>
            Raises the Initialized event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processsed; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonHeaderGroup.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Processes a notification from palette storage of a button spec change.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonLabel">
            <summary>
            Display text and images with the styling features of the Krypton Toolkit
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonLabel.KryptonCommandChanged">
            <summary>
            Occurs when the value of the KryptonCommand property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLabel.#ctor">
            <summary>
            Initialize a new instance of the KryptonLabel class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.AutoSize">
            <summary>
            Gets and sets the automatic resize of the control to fit contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.AutoSizeMode">
            <summary>
            Gets and sets the mode for when auto sizing.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.Text">
            <summary>
            Gets or sets the text associated with this control. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLabel.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.Orientation">
            <summary>
            Gets and sets the visual orientation of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.LabelStyle">
            <summary>
            Gets and sets the label style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.Values">
            <summary>
            Gets access to the label content.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.StateCommon">
            <summary>
            Gets access to the common label appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.StateDisabled">
            <summary>
            Gets access to the disabled label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.StateNormal">
            <summary>
            Gets access to the normal label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether an ampersand is included in the text of the control. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.Target">
            <summary>
            Gets access to the target for mnemonic and click actions.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLabel.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLabel.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLabel.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLabel.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLabel.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.ViewDrawContent">
            <summary>
            Gets access to the view element for the label.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.EnabledTarget">
            <summary>
            Gets and sets the enabled state of the target functionality.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLabel.SetLabelStyle(ComponentFactory.Krypton.Toolkit.LabelStyle)">
            <summary>
            Update the view elements based on the requested label style.
            </summary>
            <param name="style">New label style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLabel.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processsed; otherwise, false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLabel.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLabel.OnKryptonCommandChanged(System.EventArgs)">
            <summary>
            Raises the KryptonCommandChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLabel.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLabel.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonLabel.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonLabel.EvalTransparentPaint">
            <summary>
            Work out if this control needs to paint transparent areas.
            </summary>
            <returns>True if paint required; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPalette">
            <summary>
            Define and modify a palette for styling Krypton controls.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonPalette.PalettePaint">
            <summary>
            Occurs when a palette change requires a repaint.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonPalette.AllowFormChromeChanged">
            <summary>
            Occurs when the AllowFormChrome setting changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonPalette.BasePaletteChanged">
            <summary>
            Occurs when the BasePalette/BasePaletteMode setting changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonPalette.BaseRendererChanged">
            <summary>
            Occurs when the BaseRenderer/BaseRendererMode setting changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonPalette.ButtonSpecChanged">
            <summary>
            Occurs when a button spec change occurs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.#ctor">
            <summary>
            Initialize a new instance of the KryptonPalette class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initialize a new instance of the KryptonPalette class.
            </summary>
            <param name="container">Container that owns the component.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.AllowFormChrome">
            <summary>
            Gets or sets a value indicating if KryptonForm instances should show custom chrome.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.ButtonSpecs">
            <summary>
            Gets access to the button specifications.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.ButtonStyles">
            <summary>
            Gets access to the appearance for button styles.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.CalendarDay">
            <summary>
            Gets access to the appearance of the calendar day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.Cargo">
            <summary>
            Gets access to the set of user supplied values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.Common">
            <summary>
            Gets access to the common appearance values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.ControlStyles">
            <summary>
            Gets access to the appearance for control styles.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.ContextMenu">
            <summary>
            Gets access to the appearance for context menus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.DragDrop">
            <summary>
            Gets access to the appearance of drag and drop.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.FormStyles">
            <summary>
            Gets access to the appearance for form styles.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.HeaderGroup">
            <summary>
            Gets access to the HeaderGroup appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.HeaderStyles">
            <summary>
            Gets access to the appearance for header styles.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.GridStyles">
            <summary>
            Gets access to the appearance for grid styles.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.Images">
            <summary>
            Gets access to the images.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.InputControlStyles">
            <summary>
            Gets access to the input controls styles.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.LabelStyles">
            <summary>
            Gets access to the appearance for label styles.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.Navigator">
            <summary>
            Gets access to the Navigator appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.PanelStyles">
            <summary>
            Gets access to the appearance for panel styles.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.Ribbon">
            <summary>
            Gets access to the appearance settings for ribbon.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.SeparatorStyles">
            <summary>
            Gets access to the appearance for separator styles.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.TabStyles">
            <summary>
            Gets access to the appearance for tab styles.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.TrackBar">
            <summary>
            Gets access to the appearance for the track bar.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.ToolMenuStatus">
            <summary>
            Gets access to the set of color table settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRenderer">
            <summary>
            Gets the renderer to use for this palette.
            </summary>
            <returns>Renderer to use for drawing palette settings.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetAllowFormChrome">
            <summary>
            Gets a value indicating if KryptonForm instances should show custom chrome.
            </summary>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the background.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Border style.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the border.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border drawing style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>TextRenderingHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetTreeViewImage(System.Boolean)">
            <summary>
            Gets a tree view image appropriate for the provided state.
            </summary>
            <param name="expanded">Is the node expanded</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetCheckBoxImage(System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the check box enabled.</param>
            <param name="checkState">Is the check box checked/unchecked/indeterminate.</param>
            <param name="tracking">Is the check box being hot tracked.</param>
            <param name="pressed">Is the check box being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRadioButtonImage(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the radio button enabled.</param>
            <param name="checkState">Is the radio button checked.</param>
            <param name="tracking">Is the radio button being hot tracked.</param>
            <param name="pressed">Is the radio button being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContextMenuCheckedImage">
            <summary>
            Gets a checked image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContextMenuIndeterminateImage">
            <summary>
            Gets a indeterminate image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetContextMenuSubMenuImage">
            <summary>
            Gets an image indicating a sub-menu on a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetGalleryButtonImage(ComponentFactory.Krypton.Toolkit.PaletteRibbonGalleryButton,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="button">Enum of the button to fetch.</param>
            <param name="state">State of the button to fetch.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetButtonSpecIcon(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the icon to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Icon value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetButtonSpecImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the image transparent color.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetButtonSpecShortText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the short text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetButtonSpecLongText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the long text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetButtonSpecToolTipTitle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the tooltip title text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetButtonSpecColorMap(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap from the image to the container foreground.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetButtonSpecStyle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button style used for drawing the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetButtonSpecLocation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Get the location for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>HeaderLocation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetButtonSpecEdge(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the edge to positon the button against.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteRelativeEdgeAlign value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetButtonSpecOrientation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button orientation.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonOrientation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonShape">
            <summary>
            Gets the ribbon shape that should be used.
            </summary>
            <returns>Ribbon shape value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonContextTextAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text alignment for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonContextTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonContextTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonDisabledDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the dark disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonDisabledLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the light disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonDropArrowLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonDropArrowDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonGroupDialogDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonGroupDialogLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonGroupSeparatorDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonGroupSeparatorLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonMinimizeBarDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonMinimizeBarLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the ribbon font.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonTabSeparatorColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonTabSeparatorContextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab context separators.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonQATButtonDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button dark content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonQATButtonLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button light content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="style">Text style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetElementColor1(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetElementColor2(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetElementColor3(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetElementColor4(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetElementColor5(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetDragDropFeedback">
            <summary>
            Gets the feedback drawing method used.
            </summary>
            <returns>Feedback enumeration value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetDragDropSolidBack">
            <summary>
            Gets the background color for a solid drag drop area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetDragDropSolidBorder">
            <summary>
            Gets the border color for a solid drag drop area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetDragDropSolidOpacity">
            <summary>
            Gets the opacity of the solid area.
            </summary>
            <returns>Opacity ranging from 0 to 1.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetDragDropDockBack">
            <summary>
            Gets the background color for the docking indicators area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetDragDropDockBorder">
            <summary>
            Gets the border color for the docking indicators area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetDragDropDockActive">
            <summary>
            Gets the active color for docking indicators.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.GetDragDropDockInactive">
            <summary>
            Gets the inactive color for docking indicators.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.SuspendUpdates">
            <summary>
            Suspend the notification of drawing updates when palette values are changed.
            </summary>
            <returns>New suspended count.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.ResumeUpdates">
            <summary>
            Resume the notification of drawing updates when palette values are changed.
            </summary>
            <returns>New suspended count; Updates only occur when the count reaches zero.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.ResumeUpdates(System.Boolean)">
            <summary>
            Resume the notification of drawing updates when palette values are changed.
            </summary>
            <param name="updateNow">Should an immediate drawing update occur.</param>
            <returns>New suspended count; Updates only occur when the count reaches zero.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.ResetToDefaults(System.Boolean)">
            <summary>
            Reset all palettes values back to defaults.
            </summary>
            <param name="silent">Silent mode provides no user interface feedback.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.PopulateFromBase(System.Boolean)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="silent">Silent mode provides no user interface feedback.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Import">
            <summary>
            Import palette settings from an xml file.
            </summary>
            <returns>Fullpath of imported filename; otherwise empty string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Import(System.String)">
            <summary>
            Import palette settings from the specified xml file.
            </summary>
            <param name="filename">Filename to load.</param>
            <returns>Fullpath of imported filename; otherwise empty string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Import(System.String,System.Boolean)">
            <summary>
            Import palette settings from the specified xml file.
            </summary>
            <param name="filename">Filename to load.</param>
            <param name="silent">Silent mode provides no user interface feedback.</param>
            <returns>Fullpath of imported filename; otherwise empty string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Import(System.IO.Stream)">
            <summary>
            Import palette settings from the specified stream.
            </summary>
            <param name="stream">Stream that contains an XmlDocument.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Import(System.IO.Stream,System.Boolean)">
            <summary>
            Import palette settings from the specified stream.
            </summary>
            <param name="stream">Stream that contains an XmlDocument.</param>
            <param name="silent">Silent mode provides no user interface feedback.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Import(System.Byte[])">
            <summary>
            Import palette settings from the specified array of bytes.
            </summary>
            <param name="byteArray">ByteArray that was returning from exporting palette.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Import(System.Byte[],System.Boolean)">
            <summary>
            Import palette settings from the specified array of bytes.
            </summary>
            <param name="byteArray">ByteArray that was returning from exporting palette.</param>
            <param name="silent">Silent mode provides no user interface feedback.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Export">
            <summary>
            Export palette settings to a user specified xml file.
            </summary>
            <returns>Fullpath of exported filename; otherwise empty string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Export(System.String,System.Boolean)">
            <summary>
            Export palette settings to the specified xml file.
            </summary>
            <param name="filename">Filename to create or overwrite.</param>
            <param name="ignoreDefaults">Should default values be exported.</param>
            <returns>Fullpath of exported filename; otherwise empty string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Export(System.String,System.Boolean,System.Boolean)">
            <summary>
            Export palette settings to the specified xml file.
            </summary>
            <param name="filename">Filename to create or overwrite.</param>
            <param name="ignoreDefaults">Should default values be exported.</param>
            <param name="silent">Silent mode provides no user interface feedback.</param>
            <returns>Fullpath of exported filename; otherwise empty string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Export(System.IO.Stream,System.Boolean)">
            <summary>
            Export palette settings into a stream object.
            </summary>
            <param name="stream">Destination stream for exporting.</param>
            <param name="ignoreDefaults">Should default values be exported.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Export(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Export palette settings into a stream object.
            </summary>
            <param name="stream">Destination stream for exporting.</param>
            <param name="ignoreDefaults">Should default values be exported.</param>
            <param name="silent">Silent mode provides no user interface feedback.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Export(System.Boolean)">
            <summary>
            Export palette settings into an array of bytes.
            </summary>
            <param name="ignoreDefaults">Should default values be exported.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.Export(System.Boolean,System.Boolean)">
            <summary>
            Export palette settings into an array of bytes.
            </summary>
            <param name="ignoreDefaults">Should default values be exported.</param>
            <param name="silent">Silent mode provides no user interface feedback.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.BasePaletteMode">
            <summary>
            Gets or sets the base palette used to inherit from.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.ResetBasePaletteMode">
            <summary>
            Resets the BasePaletteMode property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.BasePalette">
            <summary>
            Gets and sets the KryptonPalette used to inherit from.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.ResetBasePalette">
            <summary>
            Resets the BasePalette property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.BaseRenderMode">
            <summary>
            Gets or sets the renderer used for drawing the palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.ResetBaseRendererMode">
            <summary>
            Resets the BaseRendererMode property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.BaseRenderer">
            <summary>
            Gets and sets the custom renderer to be used with this palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.ColorTable">
            <summary>
            Gets access to the color table instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalette.NeedPaintDelegate">
            <summary>
            Gets access to the need paint delegate.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.OnPalettePaint(System.Object,ComponentFactory.Krypton.Toolkit.PaletteLayoutEventArgs)">
            <summary>
            Raises the PalettePaint event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An PaintLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.OnAllowFormChromeChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the AllowFormChromeChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.OnBasePaletteChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the BasePaletteChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.OnBaseRendererChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the BaseRendererChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalette.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the ButtonSpecChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.GlobalId">
            <summary>
            Contains a global identifier that is unique among objects.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GlobalId.#ctor">
            <summary>
            Initialize a new instance of the GlobalId class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GlobalId.Id">
            <summary>
            Gets the unique identifier of the object.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonDefaultColorAttribute">
            <summary>
            Create a default value attribute for color property.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonDefaultColorAttribute.#ctor">
            <summary>
            Initialize a new instance of the KryptonDefaultColorAttribute class.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ModalWaitDialog">
            <summary>
            Show a wait dialog during long operations.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ModalWaitDialog.#ctor">
            <summary>
            Initialize a new instance of the ModalWaitDialog class. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ModalWaitDialog.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the OnPaint event.
            </summary>
            <param name="e">A PaintEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ModalWaitDialog.UpdateDialog">
            <summary>
            Called periodically to update the wait dialog.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ModalWaitDialog.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Process windows messages before they are dispatched.
            </summary>
            <param name="m">Message to process.</param>
            <returns>True to suppress message dispatch; false otherwise.</returns>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ModalWaitDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ModalWaitDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ModalWaitDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.OperationThread.#ctor(ComponentFactory.Krypton.Toolkit.Operation,System.Object)">
            <summary>
            Initialize a new instance of the OperationThread class.
            </summary>
            <param name="op">Operation to perform on thread.</param>
            <param name="parameter">Parameter to pass into operation.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.OperationThread.State">
            <summary>
            Gets the current operation state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.OperationThread.Result">
            <summary>
            Gets the result from the operation.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.OperationThread.Exception">
            <summary>
            Gets the exception generated by operation.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.OperationThread.Run">
            <summary>
            Entry point for performing operation.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentBase">
            <summary>
            Redirect requests for image/text colors to remap.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentBase.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.ButtonSpec)">
            <summary>
            Initialize a new instance of the ButtonSpecRemapByContentBase class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="buttonSpec">Reference to button specification.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentBase.PaletteContent">
            <summary>
            Gets the palette content to use for remapping.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentBase.PaletteState">
            <summary>
            Gets the state of the remapping area
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentBase.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentBase.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentBase.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonSpecRemapByContentBase.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectMetric">
            <summary>
            Redirect back/border/metrics based on the incoming state of the request.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectMetric.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteRedirectMetric class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectMetric.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Initialize a new instance of the PaletteRedirectMetric class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disableMetric">Redirection for disabled metric requests.</param>
            <param name="normalMetric">Redirection for normal metric requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectMetric.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disableMetric">Redirection for disabled metric requests.</param>
            <param name="normalMetric">Redirection for normal metric requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectMetric.ResetRedirectStates">
            <summary>
            Reset the redirection states to null.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectMetric.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectMetric.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectMetric.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteMetricRedirect">
            <summary>
            Redirect storage for a palette with metrics.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMetricRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Initialize a new instance of the PaletteMetricRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMetricRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteMetricRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMetricRedirect.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMetricRedirect.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteMetricRedirect.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectDoubleMetric">
            <summary>
            Redirect back/border/metrics based on the incoming state of the request.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDoubleMetric.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteRedirectDoubleMetric class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDoubleMetric.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Initialize a new instance of the PaletteRedirectDoubleMetric class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="disableMetric">Redirection for disabled metric requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="normalMetric">Redirection for normal metric requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDoubleMetric.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="disableMetric">Redirection for disabled metric requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="normalMetric">Redirection for normal metric requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDoubleMetric.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="disableMetric">Redirection for disabled metric requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="normalMetric">Redirection for normal metric requests.</param>
            <param name="pressed">Redirection for pressed state requests.</param>
            <param name="pressedMetric">Redirection for pressed metric requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
            <param name="trackingMetric">Redirection for tracking metric requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDoubleMetric.ResetRedirectStates">
            <summary>
            Reset the redirection states to null.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDoubleMetric.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDoubleMetric.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDoubleMetric.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectButtonSpec">
            <summary>
            Redirect button spec requests to provided target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectButtonSpec.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteButtonSpec)">
            <summary>
            Initialize a new instance of the PaletteRedirectButtonSpec class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="inherit">Redirection button spec requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectButtonSpec.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectButtonSpec.GetButtonSpecShortText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the short text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectButtonSpec.GetButtonSpecLongText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the long text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectButtonSpec.GetButtonSpecColorMap(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap from the image to the container foreground.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectButtonSpec.GetButtonSpecStyle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button style used for drawing the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectButtonSpec.GetButtonSpecLocation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Get the location for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>HeaderLocation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectButtonSpec.GetButtonSpecEdge(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the edge to positon the button against.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteRelativeEdgeAlign value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectButtonSpec.GetButtonSpecOrientation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button orientation.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonOrientation value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple">
            <summary>
            Redirect back/border/content based on the incoming state of the request.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.#ctor">
            <summary>
            Initialize a new instance of the PaletteRedirectTriple class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteRedirectTriple class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Initialize a new instance of the PaletteRedirectTriple class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Initialize a new instance of the PaletteRedirectTriple class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Initialize a new instance of the PaletteRedirectTriple class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="pressed">Redirection for pressed state requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
            <param name="selected">Redirection for all checked states.</param>
            <param name="focusOverride">Redirection for focus override state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Initialize a new instance of the PaletteRedirectTriple class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="pressed">Redirection for pressed state requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
            <param name="checkedNormal">Redirection for checked normal state requests.</param>
            <param name="checkedPressed">Redirection for checked pressed state requests.</param>
            <param name="checkedTracking">Redirection for checked tracking state requests.</param>
            <param name="focusOverride">Redirection for focus override state requests.</param>
            <param name="normalDefaultOverride">Redirection for normal default override state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="pressed">Redirection for pressed state requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
            <param name="checkedNormal">Redirection for checked normal state requests.</param>
            <param name="checkedPressed">Redirection for checked pressed state requests.</param>
            <param name="checkedTracking">Redirection for checked tracking state requests.</param>
            <param name="focusOverride">Redirection for focus override state requests.</param>
            <param name="normalDefaultOverride">Redirection for normal default override state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.ResetRedirectStates">
            <summary>
            Reset the redirection states to null.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the background.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the border.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border drawing style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTriple.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack">
            <summary>
            Redirect background based on the incoming state of the request.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteRedirectBack class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBack)">
            <summary>
            Initialize a new instance of the PaletteRedirectBack class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBack)">
            <summary>
            Initialize a new instance of the PaletteRedirectBack class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="pressed">Redirection for pressed state requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
            <param name="checkedNormal">Redirection for checked normal state requests.</param>
            <param name="checkedPressed">Redirection for checked pressed state requests.</param>
            <param name="checkedTracking">Redirection for checked tracking state requests.</param>
            <param name="focusOverride">Redirection for focus override state requests.</param>
            <param name="normalDefaultOverride">Redirection for normal default override state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBack)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.ResetRedirectStates">
            <summary>
            Reset the redirection states to null.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the background.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectBack.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble">
            <summary>
            Redirect back/border based on the incoming state of the request.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.#ctor">
            <summary>
            Initialize a new instance of the PaletteRedirectDouble class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteRedirectDouble class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble)">
            <summary>
            Initialize a new instance of the PaletteRedirectDouble class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble)">
            <summary>
            Initialize a new instance of the PaletteRedirectDouble class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="pressed">Redirection for pressed state requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble)">
            <summary>
            Initialize a new instance of the PaletteRedirectDouble class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="pressed">Redirection for pressed state requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
            <param name="checkedNormal">Redirection for checked normal state requests.</param>
            <param name="checkedPressed">Redirection for checked pressed state requests.</param>
            <param name="checkedTracking">Redirection for checked tracking state requests.</param>
            <param name="focusOverride">Redirection for focus override state requests.</param>
            <param name="normalDefaultOverride">Redirection for normal default override state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="pressed">Redirection for pressed state requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.ResetRedirectStates">
            <summary>
            Reset the redirection states to null.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the background.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the border.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border drawing style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectDouble.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent">
            <summary>
            Redirect content based on the incoming state of the request.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.#ctor">
            <summary>
            Initialize a new instance of the PaletteRedirectContent class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Initialize a new instance of the PaletteRedirectContent class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Initialize a new instance of the PaletteRedirectContent class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="pressed">Redirection for pressed state requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
            <param name="checkedNormal">Redirection for checked normal state requests.</param>
            <param name="checkedPressed">Redirection for checked pressed state requests.</param>
            <param name="checkedTracking">Redirection for checked tracking state requests.</param>
            <param name="focusOverride">Redirection for focus override state requests.</param>
            <param name="normalDefaultOverride">Redirection for normal default override state requests.</param>
            <param name="linkVisitedOverride">Redirection for link visited override state requests.</param>
            <param name="linkNotVisitedOverride">Redirection for link not visited override state requests.</param>
            <param name="linkPressedOverride">Redirection for link pressed override state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="pressed">Redirection for pressed state requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
            <param name="checkedNormal">Redirection for checked normal state requests.</param>
            <param name="checkedPressed">Redirection for checked pressed state requests.</param>
            <param name="checkedTracking">Redirection for checked tracking state requests.</param>
            <param name="focusOverride">Redirection for focus override state requests.</param>
            <param name="normalDefaultOverride">Redirection for normal default override state requests.</param>
            <param name="linkVisitedOverride">Redirection for link visited override state requests.</param>
            <param name="linkNotVisitedOverride">Redirection for link not visited override state requests.</param>
            <param name="linkPressedOverride">Redirection for link pressed override state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.ResetRedirectStates">
            <summary>
            Reset the redirection states to null.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectContent.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDoubleMetricRedirect">
            <summary>
            Redirect storage for a double palette with palette metrics.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleMetricRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle)">
            <summary>
            Initialize a new instance of the PaletteDoubleMetricRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Style for the background.</param>
            <param name="borderStyle">Style for the border.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleMetricRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDoubleMetricRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Style for the background.</param>
            <param name="borderStyle">Style for the border.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleMetricRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleMetricRedirect.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleMetricRedirect.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleMetricRedirect.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDoubleMetric">
            <summary>
            Implement a double palette that exposes palette metrics.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleMetric.#ctor(ComponentFactory.Krypton.Toolkit.PaletteDoubleMetricRedirect)">
            <summary>
            Initialize a new instance of the PaletteDoubleMetric class.
            </summary>
            <param name="inherit">Source for palette defaulted values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleMetric.#ctor(ComponentFactory.Krypton.Toolkit.PaletteDoubleMetricRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDoubleMetric class.
            </summary>
            <param name="inherit">Source for palette defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleMetric.SetInherit(ComponentFactory.Krypton.Toolkit.PaletteDoubleMetricRedirect)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleMetric.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleMetric.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleMetric.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDoubleOverride">
            <summary>
            Allow a palette to be overriden optionally.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleOverride.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Initialize a new instance of the PaletteDoubleOverride class.
            </summary>
            <param name="normalTriple">Normal palette to use.</param>
            <param name="overrideTriple">Override palette to use.</param>
            <param name="overrideState">State used by the override.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDoubleOverride.Apply">
            <summary>
            Gets and sets a value indicating if override should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDoubleOverride.Override">
            <summary>
            Gets and sets a value indicating if override state should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDoubleOverride.OverrideState">
            <summary>
            Gets and sets the override palette state to use.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDoubleOverride.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDoubleOverride.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect">
            <summary>
            Implement storage for palette border and background.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle)">
            <summary>
            Initialize a new instance of the PaletteDoubleRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDoubleRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBack,ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect,ComponentFactory.Krypton.Toolkit.PaletteBorder,ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDoubleRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="back">Storage for back values.</param>
            <param name="backInherit">Inheritence for back values.</param>
            <param name="border">Storage for border values.</param>
            <param name="borderInherit">Inheritence for border values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.GetRedirector">
            <summary>
            Gets the redirector instance.
            </summary>
            <returns>Return the currently used redirector.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">State to use when pulling values.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle)">
            <summary>
            Update the palette styles to the separator style.
            </summary>
            <param name="backStyle">New back style.</param>
            <param name="borderStyle">New border style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.SeparatorStyle)">
            <summary>
            Update the palette styles to the separator style.
            </summary>
            <param name="separatorStyle">New separator style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.InputControlStyle)">
            <summary>
            Update the palette styles to the input control style.
            </summary>
            <param name="inputControlStyle">New input control style.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.BackStyle">
            <summary>
            Gets and sets the back palette style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.BorderStyle">
            <summary>
            Gets and sets the border palette style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDouble">
            <summary>
            Implement storage for palette border and background.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDouble.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteDouble)">
            <summary>
            Initialize a new instance of the PaletteDouble class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDouble.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDouble class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDouble.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.PaletteBack,ComponentFactory.Krypton.Toolkit.PaletteBorder,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDouble class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="back">Reference to back storage.</param>
            <param name="border">Reference to border storage.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDouble.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDouble.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDouble.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteDouble)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDouble.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDouble.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDouble.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteDouble.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteDouble.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTriple">
            <summary>
            Implement storage for palette border, background and content.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTriple.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Initialize a new instance of the PaletteTriple class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTriple.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTriple class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTriple.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTriple.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTriple.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTriple.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTriple.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTriple.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTriple.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTriple.Content">
            <summary>
            Gets access to the content palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTriple.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTriple.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTripleMetricRedirect">
            <summary>
            Redirect storage for a triple palette with palette metrics.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleMetricRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTripleMetricRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Style for the background.</param>
            <param name="borderStyle">Style for the border.</param>
            <param name="contentStyle">Style for the content.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleMetricRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleMetricRedirect.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleMetricRedirect.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleMetricRedirect.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTripleMetric">
            <summary>
            Implement a triple palette that exposes palette metrics.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleMetric.#ctor(ComponentFactory.Krypton.Toolkit.PaletteTripleMetricRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTripleMetric class.
            </summary>
            <param name="inherit">Source for palette defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleMetric.SetInherit(ComponentFactory.Krypton.Toolkit.PaletteTripleMetricRedirect)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleMetric.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleMetric.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleMetric.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorState">
            <summary>
            Storage for an individual navigator states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorState.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteNavigatorState class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorState.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorState.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorState.Bar">
            <summary>
            Gets access to the navigator bar appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar">
            <summary>
            Storage for bar values for a navigator state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteNavigatorStateBar class.
            </summary>
            <param name="redirect">Redirection for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.BarPaddingTabs">
            <summary>
            Gets and sets the padding used around the bar when displaying tabs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.ResetBarPaddingTabs">
            <summary>
            Reset the BarPaddingTabs to the default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.BarPaddingInside">
            <summary>
            Gets and sets the padding used around the bar when placed inside the group.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.ResetBarPaddingInside">
            <summary>
            Reset the BarPaddingInside to the default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.BarPaddingOutside">
            <summary>
            Gets and sets the padding used around the bar when placed outside the group.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.ResetBarPaddingOutside">
            <summary>
            Reset the BarPaddingOutside to the default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.BarPaddingOnly">
            <summary>
            Gets and sets the padding used around the bar when placed on its own.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.ResetBarPaddingOnly">
            <summary>
            Reset the BarPaddingOnly to the default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.ButtonPadding">
            <summary>
            Gets and sets the padding used around each button on the button bar.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.ResetButtonPadding">
            <summary>
            Reset the ButtonPadding to the default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.ButtonEdgeOutside">
            <summary>
            Gets the sets how far to inset buttons from the control edge.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.ResetButtonEdgeOutside">
            <summary>
            Reset the ButtonEdgeOutside to the default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.ButtonEdgeInside">
            <summary>
            Gets the sets how far to inset buttons from the button bar.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.ResetButtonEdgeInside">
            <summary>
            Reset the ButtonEdgeInside to the default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.CheckButtonGap">
            <summary>
            Gets the sets the spacing gap between each check button.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.ResetCheckButtonGap">
            <summary>
            Reset the CheckButtonGap to the default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.RibbonTabGap">
            <summary>
            Gets the sets the spacing gap between each ribbon tab.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.ResetRibbonTabGap">
            <summary>
            Reset the RibbonTabGap to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigatorStateBar.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigator">
            <summary>
            Storage for palette navigator states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigator.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteNavigator class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigator.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigator.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteNavigator.StateCommon">
            <summary>
            Gets access to the common navigator appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped">
            <summary>
            Overrides for defining typed button specifications.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Initialize a new instance of the KryptonPaletteButtonSpecCommon class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="style">The style of the button spec instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.Image">
            <summary>
            Gets and sets the button image.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.ResetImage">
            <summary>
            Resets the Image property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.ImageStates">
            <summary>
            Gets access to the state specific images for the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.Text">
            <summary>
            Gets and sets the button text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.ExtraText">
            <summary>
            Gets and sets the button extra text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.ResetExtraText">
            <summary>
            Resets the ExtraText property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.ToolTipTitle">
            <summary>
            Gets and sets the button tooltip title text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.ResetToolTipTitle">
            <summary>
            Resets the ToolTipTitle property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.ColorMap">
            <summary>
            Gets and sets image color to remap to container foreground.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.ResetColorMap">
            <summary>
            Resets the ColorMap property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.AllowInheritImage">
            <summary>
            Gets and sets if the button image be inherited if defined as null.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.ResetAllowInheritImage">
            <summary>
            Resets the AllowInheritImage property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.AllowInheritText">
            <summary>
            Gets and sets if the button text be inherited if defined as empty.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.ResetAllowInheritText">
            <summary>
            Resets the AllowInheritText property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.AllowInheritExtraText">
            <summary>
            Gets and sets if the button extra text be inherited if defined as empty.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.ResetAllowInheritExtraText">
            <summary>
            Resets the AllowInheritExtraText property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.AllowInheritToolTipTitle">
            <summary>
            Gets and sets if the button tooltip title text be inherited if defined as empty.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.ResetAllowInheritToolTipTitle">
            <summary>
            Resets the AllowInheritToolTipTitle property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.GetButtonSpecShortText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the short text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.GetButtonSpecLongText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the long text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.GetButtonSpecToolTipTitle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the tooltip title text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecTyped.GetButtonSpecColorMap(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap from the image to the container foreground.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase">
            <summary>
            Base class for defining button specifications.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.ButtonSpecChanged">
            <summary>
            Occurs when a button spec change occurs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Initialize a new instance of the KryptonPaletteButtonSpecBase class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.Redirector">
            <summary>
            Gets access to the redirector.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="style">The style of the button spec instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.Style">
            <summary>
            Gets and sets the button style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.ResetStyle">
            <summary>
            Resets the Style property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.Orientation">
            <summary>
            Gets and sets the button orientation.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.ResetOrientation">
            <summary>
            Resets the Orientation property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.Edge">
            <summary>
            Gets and sets the header edge to display the button against.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.ResetEdge">
            <summary>
            Resets the Edge property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.GetButtonSpecIcon(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the icon to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Icon value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.GetButtonSpecImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the image transparent color.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.GetButtonSpecShortText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the short text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.GetButtonSpecLongText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the long text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.GetButtonSpecToolTipTitle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the tooltip title text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.GetButtonSpecColorMap(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap from the image to the container foreground.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.GetButtonSpecStyle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button style used for drawing the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.GetButtonSpecLocation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Get the location for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>HeaderLocation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.GetButtonSpecEdge(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the edge to positon the button against.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteRelativeEdgeAlign value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.GetButtonSpecOrientation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button orientation.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonOrientation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecBase.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the ButtonSpecChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs">
            <summary>
            Overrides for defining button specifications.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.ButtonSpecChanged">
            <summary>
            Occurs when a button spec change occurs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Initialize a new instance of the KryptonPaletteButtonSpecs class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.Common">
            <summary>
            Gets access to the common button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.Generic">
            <summary>
            Gets access to the generic button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.Close">
            <summary>
            Gets access to the close button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.Context">
            <summary>
            Gets access to the context button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.Next">
            <summary>
            Gets access to the next button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.Previous">
            <summary>
            Gets access to the previous button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.ArrowLeft">
            <summary>
            Gets access to the left arrow button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.ArrowRight">
            <summary>
            Gets access to the right arrow button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.ArrowUp">
            <summary>
            Gets access to the right up button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.ArrowDown">
            <summary>
            Gets access to the right up button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.DropDown">
            <summary>
            Gets access to the drop down button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.PinVertical">
            <summary>
            Gets access to the pin vertical button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.PinHorizontal">
            <summary>
            Gets access to the pin horizontal button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.FormClose">
            <summary>
            Gets access to the form close button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.FormMin">
            <summary>
            Gets access to the form minimize button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.FormMax">
            <summary>
            Gets access to the form maximize button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.FormRestore">
            <summary>
            Gets access to the form restore button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.PendantClose">
            <summary>
            Gets access to the pendant close button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.PendantMin">
            <summary>
            Gets access to the pendant minimize button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.PendantRestore">
            <summary>
            Gets access to the pendant restore button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.WorkspaceMaximize">
            <summary>
            Gets access to the workspace maximize button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.WorkspaceRestore">
            <summary>
            Gets access to the workspace restore button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.RibbonMinimize">
            <summary>
            Gets access to the ribbon minimize button specification.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.RibbonExpand">
            <summary>
            Gets access to the ribbon expand button specification.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteButtonSpecs.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the ButtonSpecChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo">
            <summary>
            Storage of user supplied values not used by Krypton.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteCargo class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.Color1">
            <summary>
            Gets and sets a user supplied color value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.ResetColor1">
            <summary>
            esets the Color1 property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.Color2">
            <summary>
            Gets and sets a user supplied color value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.ResetColor2">
            <summary>
            esets the Color2 property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.Color3">
            <summary>
            Gets and sets a user supplied color value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.ResetColor3">
            <summary>
            esets the Color3 property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.Color4">
            <summary>
            Gets and sets a user supplied color value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.ResetColor4">
            <summary>
            esets the Color4 property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.Color5">
            <summary>
            Gets and sets a user supplied color value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.ResetColor5">
            <summary>
            esets the Color5 property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.Font1">
            <summary>
            Gets and sets a user supplied font value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.ResetFont1">
            <summary>
            esets the Font1 property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.Font2">
            <summary>
            Gets and sets a user supplied font value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCargo.ResetFont2">
            <summary>
            esets the Font2 property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon">
            <summary>
            Storage for common palette settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteCommon class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon.StateCommon">
            <summary>
            Gets access to the all appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon.StateDisabled">
            <summary>
            Gets access to the disabled appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon.StateOthers">
            <summary>
            Gets access to the non-disabled appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparators">
            <summary>
            Storage for separator palette settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparators.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteSeparators class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparators.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparators.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparators.SeparatorCommon">
            <summary>
            Gets access to the common separator appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparators.SeparatorLowProfile">
            <summary>
            Gets access to the low profile separator appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparators.SeparatorHighProfile">
            <summary>
            Gets access to the high profile separator appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparators.SeparatorHighInternalProfile">
            <summary>
            Gets access to the high profile for internal separator appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparators.SeparatorCustom1">
            <summary>
            Gets access to the first custom separator appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPalettePanels">
            <summary>
            Storage for panel palette settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalettePanels.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPalettePanels class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalettePanels.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalettePanels.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalettePanels.PanelCommon">
            <summary>
            Gets access to the common panel appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalettePanels.PanelClient">
            <summary>
            Gets access to the client panel appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalettePanels.PanelAlternate">
            <summary>
            Gets access to the alternate panel appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalettePanels.PanelRibbonInactive">
            <summary>
            Gets access to the ribbon inactive panel appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalettePanels.PanelCustom1">
            <summary>
            Gets access to the first custom panel appearance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaders">
            <summary>
            Storage for header palette settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaders.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteHeaders class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaders.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaders.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaders.HeaderCommon">
            <summary>
            Gets access to the common header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaders.HeaderPrimary">
            <summary>
            Gets access to the primary header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaders.HeaderSecondary">
            <summary>
            Gets access to the secondary header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaders.HeaderDockInactive">
            <summary>
            Gets access to the inactive dock header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaders.HeaderDockActive">
            <summary>
            Gets access to the active dock header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaders.HeaderCalendar">
            <summary>
            Gets access to the calendar header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaders.HeaderForm">
            <summary>
            Gets access to the main form header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaders.HeaderCustom1">
            <summary>
            Gets access to the first custom header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaders.HeaderCustom2">
            <summary>
            Gets access to the second custom header appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteControls">
            <summary>
            Storage for control palette settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteControls.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteControls class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteControls.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteControls.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteControls.ControlCommon">
            <summary>
            Gets access to the common control appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteControls.ControlClient">
            <summary>
            Gets access to the client control appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteControls.ControlAlternate">
            <summary>
            Gets access to the alternate control appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteControls.ControlGroupBox">
            <summary>
            Gets access to the group box control appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteControls.ControlToolTip">
            <summary>
            Gets access to the tooltip control appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteControls.ControlRibbon">
            <summary>
            Gets access to the control ribbon style appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteControls.ControlRibbonAppMenu">
            <summary>
            Gets access to the control ribbon application menu style appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteControls.ControlCustom1">
            <summary>
            Gets access to the first custom control appearance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels">
            <summary>
            Storage for label palette settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteLabels class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelCommon">
            <summary>
            Gets access to the common label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelNormalControl">
            <summary>
            Gets access to the normal label used for control style backgrounds.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelBoldControl">
            <summary>
            Gets access to the bold label used for control style backgrounds.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelItalicControl">
            <summary>
            Gets access to the italic label used for control style backgrounds.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelTitleControl">
            <summary>
            Gets access to the title label used for control style backgrounds.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelNormalPanel">
            <summary>
            Gets access to the normal label used for panel style backgrounds.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelBoldPanel">
            <summary>
            Gets access to the bold label used for panel style backgrounds.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelItalicPanel">
            <summary>
            Gets access to the italic label used for panel style backgrounds.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelTitlePanel">
            <summary>
            Gets access to the title label used for panel style backgrounds.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelCaptionPanel">
            <summary>
            Gets access to the caption label used for group box style backgrounds.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelToolTip">
            <summary>
            Gets access to the tooltip label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelSuperTip">
            <summary>
            Gets access to the super tooltip label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelKeyTip">
            <summary>
            Gets access to the keytip label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelCustom1">
            <summary>
            Gets access to the first custom label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelCustom2">
            <summary>
            Gets access to the second custom label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabels.LabelCustom3">
            <summary>
            Gets access to the third custom label appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton">
            <summary>
            Storage of palette check button states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteButtonBase class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="backStyle">Background style.</param>
            <param name="borderStyle">Border style.</param>
            <param name="contentStyle">Content style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton.StateCommon">
            <summary>
            Gets access to the common button appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton.StateDisabled">
            <summary>
            Gets access to the disabled button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton.StateNormal">
            <summary>
            Gets access to the normal button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton.StateTracking">
            <summary>
            Gets access to the hot tracking button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton.StatePressed">
            <summary>
            Gets access to the pressed button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton.StateCheckedNormal">
            <summary>
            Gets access to the normal checked button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton.StateCheckedTracking">
            <summary>
            Gets access to the hot tracking checked button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton.StateCheckedPressed">
            <summary>
            Gets access to the pressed checked button appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton.OverrideDefault">
            <summary>
            Gets access to the normal button appearance when default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButton.OverrideFocus">
            <summary>
            Gets access to the button appearance when it has focus.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons">
            <summary>
            Storage for check button palette settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteButtons class.
            </summary>
            <param name="redirector">Palette redirector for sourcing inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.PopulateFromBase(ComponentFactory.Krypton.Toolkit.KryptonPaletteCommon)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="common">Reference to common settings.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonCommon">
            <summary>
            Gets access to the common inherited button appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonStandalone">
            <summary>
            Gets access to the Standalone appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonAlternate">
            <summary>
            Gets access to the Alternate appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonLowProfile">
            <summary>
            Gets access to the LowProfile appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonButtonSpec">
            <summary>
            Gets access to the ButtonSpec appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonBreadCrumb">
            <summary>
            Gets access to the BreadCrumb appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonCalendarDay">
            <summary>
            Gets access to the CalendarDay appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonCluster">
            <summary>
            Gets access to the ButtonCluster appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonGallery">
            <summary>
            Gets access to the ButtonGallery appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonNavigatorStack">
            <summary>
            Gets access to the ButtonNavigatorStack appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonNavigatorOverflow">
            <summary>
            Gets access to the ButtonNavigatorOverflow appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonNavigatorMini">
            <summary>
            Gets access to the ButtonNavigatorMini appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonInputControl">
            <summary>
            Gets access to the ButtonInputControl appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonListItem">
            <summary>
            Gets access to the ButtonListItem appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonForm">
            <summary>
            Gets access to the ButtonForm appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonFormClose">
            <summary>
            Gets access to the ButtonFormClose appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonCommand">
            <summary>
            Gets access to the ButtonCommand appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonCustom1">
            <summary>
            Gets access to the Custom1 appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonCustom2">
            <summary>
            Gets access to the Custom2 appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteCheckButtons.ButtonCustom3">
            <summary>
            Gets access to the Custom3 appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroup">
            <summary>
            Storage for palette header group states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroup.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteHeaderGroup class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroup.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroup.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroup.StateCommon">
            <summary>
            Gets access to the common header group appearance entries.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.#ctor(System.Drawing.Color[],System.Drawing.Color[],System.Boolean,ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the KryptonProfessionalCustomKCT class.
            </summary>
            <param name="headerColors">Set of header colors to customize with.</param>
            <param name="colorTableColors">Set of ColorTable colors to customize with.</param>
            <param name="useSystemColors">Should be forced to use system colors.</param>
            <param name="palette">Associated palette instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonCheckedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonCheckedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonCheckedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonCheckedHighlight">
            <summary>
            Gets the solid color used when the button is checked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonCheckedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonCheckedHighlight.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonPressedBorder">
            <summary>
            Gets the border color to use with the ButtonPressedGradientBegin, ButtonPressedGradientMiddle, and ButtonPressedGradientEnd colors.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonPressedHighlight">
            <summary>
            Gets the solid color used when the button is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonPressedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonPressedHighlight.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonSelectedBorder">
            <summary>
            Gets the border color to use with the ButtonSelectedGradientBegin, ButtonSelectedGradientMiddle, and ButtonSelectedGradientEnd colors.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonSelectedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonSelectedHighlight">
            <summary>
            Gets the solid color used when the button is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ButtonSelectedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonSelectedHighlight.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.CheckBackground">
            <summary>
            Gets the solid color to use when the button is checked and gradients are being used.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.CheckPressedBackground">
            <summary>
            Gets the solid color to use when the button is checked and selected and gradients are being used.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.CheckSelectedBackground">
            <summary>
            Gets the solid color to use when the button is checked and selected and gradients are being used.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.GripDark">
            <summary>
            Gets the color to use for shadow effects on the grip (move handle).
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.GripLight">
            <summary>
            Gets the color to use for highlight effects on the grip (move handle).
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ImageMarginGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ImageMarginGradientEnd">
            <summary>
            Gets the end color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ImageMarginGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ImageMarginRevealedGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ImageMarginRevealedGradientEnd">
            <summary>
            Gets the end color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ImageMarginRevealedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.MenuBorder">
            <summary>
            Gets the color that is the border color to use on a MenuStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.MenuItemText">
            <summary>
            Gets the color used to draw menu item text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.MenuItemBorder">
            <summary>
            Gets the border color to use with a ToolStripMenuItem.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.MenuItemPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.MenuItemPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when a top-level ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.MenuItemPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.MenuItemSelected">
            <summary>
            Gets the solid color to use when a ToolStripMenuItem other than the top-level ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.MenuItemSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.MenuItemSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.MenuStripText">
            <summary>
            Gets the color used to draw text on a menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.MenuStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.MenuStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.OverflowButtonGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.OverflowButtonGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.OverflowButtonGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.RaftingContainerGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.RaftingContainerGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.SeparatorDark">
            <summary>
            Gets the color to use to for shadow effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.SeparatorLight">
            <summary>
            Gets the color to use to for highlight effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.StatusStripText">
            <summary>
            Gets the color used to draw text on a status strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.StatusStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.StatusStripGradientEnd">
            <summary>
            Gets the end color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ToolStripText">
            <summary>
            Gets the color used to draw text on a tool strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ToolStripBorder">
            <summary>
            Gets the border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ToolStripContentPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ToolStripContentPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ToolStripDropDownBackground">
            <summary>
            Gets the solid background color of the ToolStripDropDown.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ToolStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ToolStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ToolStripGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ToolStripPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalCustomKCT.ToolStripPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect">
            <summary>
            Implement storage for palette border edge details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.BackToBorder.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Initialize a new instance of the BackToBorder class.
            </summary>
            <param name="parent">Parent to get border values from.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.BackToBorder.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual background draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.BackToBorder.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual background graphics hint value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.BackToBorder.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.BackToBorder.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.BackToBorder.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.BackToBorder.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.BackToBorder.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.BackToBorder.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.BackToBorder.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.BackToBorder.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteBorderEdge class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.Width">
            <summary>
            Gets and sets the border width.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.SetPalette(ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Update the source palettes for drawing.
            </summary>
            <param name="paletteBorder">Palette source for the border.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual border draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual borders to draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual border graphics hint value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual first border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border rounding.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderEdgeRedirect.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteHeaderRedirect">
            <summary>
            Redirect storage for a header state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteHeaderRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Style for the background.</param>
            <param name="borderStyle">Style for the border.</param>
            <param name="contentStyle">Style for the content.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderRedirect.ButtonEdgeInset">
            <summary>
            Gets the sets how far to inset buttons from the header edge.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderRedirect.ResetButtonEdgeInset">
            <summary>
            Reset the ButtonEdgeInset to the default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderRedirect.ButtonPadding">
            <summary>
            Gets and sets the padding used around each button on the header.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderRedirect.ResetButtonPadding">
            <summary>
            Reset the ButtonPadding to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderRedirect.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderRedirect.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderRedirect.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonColorTable">
            <summary>
            Extend the ProfessionalColorTable with some Krypton specific properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonColorTable.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Creates a new instance of the KryptonColorTable class.
            </summary>
            <param name="palette">Reference to associated palette.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable.Palette">
            <summary>
            Gets the associated palette instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable.UseRoundedEdges">
            <summary>
            Gets a value indicating if rounded egdes are required.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable.MenuItemText">
            <summary>
            Gets the text color used on the menu items.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable.MenuStripText">
            <summary>
            Gets the text color used on the menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable.ToolStripText">
            <summary>
            Gets the text color used on the tool strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable.StatusStripText">
            <summary>
            Gets the text color used on the status strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable.MenuStripFont">
            <summary>
            Gets the font used on the menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable.ToolStripFont">
            <summary>
            Gets the font used on the tool strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonColorTable.StatusStripFont">
            <summary>
            Gets the font used on the status strip.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPalettePanel">
            <summary>
            Storage for palette panel states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalettePanel.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPalettePanel class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="backStyle">Back style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalettePanel.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalettePanel.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPalettePanel.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalettePanel.StateCommon">
            <summary>
            Gets access to the common panel appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalettePanel.StateDisabled">
            <summary>
            Gets access to the disabled panel appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPalettePanel.StateNormal">
            <summary>
            Gets access to the normal panel appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabel">
            <summary>
            Storage for palette label states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabel.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteLabel class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="contentStyle">Content style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabel.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabel.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabel.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabel.StateCommon">
            <summary>
            Gets access to the common label appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabel.StateDisabled">
            <summary>
            Gets access to the disabled label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabel.StateNormal">
            <summary>
            Gets access to the normal label appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabel.OverrideFocus">
            <summary>
            Gets access to the label appearance when it has focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabel.OverrideVisited">
            <summary>
            Gets access to normal state modifications when label has been visited.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabel.OverrideNotVisited">
            <summary>
            Gets access to normal state modifications when label has not been visited.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteLabel.OverridePressed">
            <summary>
            Gets access to the pressed label appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeader">
            <summary>
            Storage for palette header states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeader.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteHeader class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="backStyle">Background style.</param>
            <param name="borderStyle">Border style.</param>
            <param name="contentStyle">Content style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeader.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeader.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeader.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeader.StateCommon">
            <summary>
            Gets access to the common header appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeader.StateDisabled">
            <summary>
            Gets access to the disabled header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeader.StateNormal">
            <summary>
            Gets access to the normal header appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteControl">
            <summary>
            Storage for palette control states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteControl.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteControl class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="backStyle">Background style.</param>
            <param name="borderStyle">Border style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteControl.StateCommon">
            <summary>
            Gets access to the common control appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteControl.StateDisabled">
            <summary>
            Gets access to the disabled control appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteControl.StateNormal">
            <summary>
            Gets access to the normal control appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPersistAttribute">
            <summary>
            Attribute that marks properties for persistence inside the Krypton palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPersistAttribute.#ctor">
            <summary>
            Initialize a new instance of the KryptonPersistAttribute class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPersistAttribute.#ctor(System.Boolean)">
            <summary>
            Initialize a new instance of the KryptonPersistAttribute class.
            </summary>
            <param name="navigate">Should persistence navigate down the property.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPersistAttribute.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initialize a new instance of the KryptonPersistAttribute class.
            </summary>
            <param name="navigate">Should persistence navigate down the property.</param>
            <param name="populate">Should property be reset as part of a populate operation.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPersistAttribute.Navigate">
            <summary>
            Gets and sets a value indicating if the persistence should navigate the property.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPersistAttribute.Populate">
            <summary>
            Gets and sets a value indicating if the property should be reset as part of a populate operation.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectTripleMetric">
            <summary>
            Redirect back/border/content/metrics based on the incoming state of the request.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTripleMetric.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteRedirectTripleMetric class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTripleMetric.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Initialize a new instance of the PaletteRedirectTripleMetric class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="disableMetric">Redirection for disabled metric requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="normalMetric">Redirection for normal metric requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTripleMetric.SetRedirectStates(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="disableMetric">Redirection for disabled metric requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="normalMetric">Redirection for normal metric requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTripleMetric.ResetRedirectStates">
            <summary>
            Reset the redirection states to null.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTripleMetric.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTripleMetric.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectTripleMetric.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon">
            <summary>
            Redirect back/border/content based on the enabled/disabled state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Initialize a new instance of the PaletteRedirectCommon class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="others">Redirection for all other state requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the background.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the border.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border drawing style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirectCommon.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteSplitContainer">
            <summary>
            Extend storage for the split container with background and border information combined with separator information.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSplitContainer.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteSplitContainer class.
            </summary>
            <param name="inheritSplitContainer">Source for inheriting back/border defaulted values.</param>
            <param name="inheritSeparator">Source for inheriting separator defaulted values.</param>
            <param name="inheritMetric">Source for inheriting separator metric values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteSplitContainer.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteSplitContainer.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteSplitContainer.Separator">
            <summary>
            Get access to the overrides for defining separator appearance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPadding">
            <summary>
            Implement storage for palette border,background and separator padding.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPadding.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteSeparatorPadding class.
            </summary>
            <param name="inheritDouble">Source for inheriting border and background values.</param>
            <param name="inheritMetric">Source for inheriting metric values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPadding.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPadding.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Which state to populate from.</param>
            <param name="metric">Which metric should be used for padding.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPadding.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPadding.Padding">
            <summary>
            Gets the padding used to position the separator.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPadding.ResetPadding">
            <summary>
            Reset the Padding to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPadding.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPadding.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPadding.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroup">
            <summary>
            Implement storage for HeaderGroup states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroup.#ctor(ComponentFactory.Krypton.Toolkit.PaletteHeaderGroupRedirect,ComponentFactory.Krypton.Toolkit.PaletteHeaderPaddingRedirect,ComponentFactory.Krypton.Toolkit.PaletteHeaderPaddingRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteHeaderGroup class.
            </summary>
            <param name="inheritHeaderGroup">Source for inheriting palette defaulted values.</param>
            <param name="inheritHeaderPrimary">Source for inheriting primary header defaulted values.</param>
            <param name="inheritHeaderSecondary">Source for inheriting secondary header defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroup.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroup.SetInherit(ComponentFactory.Krypton.Toolkit.PaletteHeaderGroup)">
            <summary>
            Sets the inheritence parent.
            </summary>
            <param name="inheritHeaderGroup">Source for inheriting.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroup.HeaderPrimary">
            <summary>
            Gets access to the primary header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroup.HeaderSecondary">
            <summary>
            Gets access to the secondary header appearance entries.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroup.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroup.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroup.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState">
            <summary>
            Storage for header group values for a specific state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteHeaderGroupState class.
            </summary>
            <param name="redirect">Redirection for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.PrimaryHeaderPadding">
            <summary>
            Gets the padding used to position the primary header.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.ResetPrimaryHeaderPadding">
            <summary>
            Reset the PrimaryHeaderPadding to the default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.SecondaryHeaderPadding">
            <summary>
            Gets the padding used to position the secondary header.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.ResetSecondaryHeaderPadding">
            <summary>
            Reset the SecondaryHeaderPadding to the default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.DockInactiveHeaderPadding">
            <summary>
            Gets the padding used to position the dock inactive header.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.ResetDockInactiveHeaderPadding">
            <summary>
            Reset the DockInactiveHeaderPadding to the default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.DockActiveHeaderPadding">
            <summary>
            Gets the padding used to position the dock active header.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.ResetDockActiveHeaderPadding">
            <summary>
            Reset the DockActiveHeaderPadding to the default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.OverlayHeaders">
            <summary>
            Gets and sets a value indicating if headers should overlay the border.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.ResetOverlayHeaders">
            <summary>
            Resets the OverlayHeaders property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteHeaderGroupState.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparator">
            <summary>
            Storage for palette separator states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparator.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteSeparator class.
            </summary>
            <param name="redirect">Redirector to inherit values from.</param>
            <param name="backStyle">Background style.</param>
            <param name="borderStyle">Border style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparator.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparator.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparator.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="metric">Which metric should be used for padding.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparator.StateCommon">
            <summary>
            Gets access to the common separator appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparator.StateDisabled">
            <summary>
            Gets access to the disabled separator appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparator.StateNormal">
            <summary>
            Gets access to the normal separator appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparator.StateTracking">
            <summary>
            Gets access to the hot tracking separator appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteSeparator.StatePressed">
            <summary>
            Gets access to the pressed separator appearance entries.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSBase">
            <summary>
            Base class for the palette TMS storage classes to derive from.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSBase.#ctor(ComponentFactory.Krypton.Toolkit.KryptonInternalKCT,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteKCTBase class.
            </summary>
            <param name="internalKCT">Reference to inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSBase.InternalKCT">
            <summary>
            Gets access to the internal class used to inherit values.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu">
            <summary>
            Storage for menu entries of the professional color table.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.#ctor(ComponentFactory.Krypton.Toolkit.KryptonInternalKCT,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteKCTMenu class.
            </summary>
            <param name="internalKCT">Reference to inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ImageMarginGradientBegin">
            <summary>
            Gets and sets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetImageMarginGradientBegin">
            <summary>
            esets the ImageMarginGradientBegin property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ImageMarginGradientEnd">
            <summary>
            Gets and sets the ending color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetImageMarginGradientEnd">
            <summary>
            esets the ImageMarginGradientEnd property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ImageMarginGradientMiddle">
            <summary>
            Gets and sets the middle color color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetImageMarginGradientMiddle">
            <summary>
            esets the ImageMarginGradientMiddle property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ImageMarginRevealedGradientBegin">
            <summary>
            Gets and sets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetImageMarginRevealedGradientBegin">
            <summary>
            esets the ImageMarginRevealedGradientBegin property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ImageMarginRevealedGradientEnd">
            <summary>
            Gets and sets the ending color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetImageMarginRevealedGradientEnd">
            <summary>
            esets the ImageMarginRevealedGradientEnd property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ImageMarginRevealedGradientMiddle">
            <summary>
            Gets and sets the middle color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetImageMarginRevealedGradientMiddle">
            <summary>
            esets the ImageMarginRevealedGradientMiddle property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.MenuBorder">
            <summary>
            Gets and sets the color that is the border color to use on a MenuStrip.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetMenuBorder">
            <summary>
            esets the MenuBorder property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.MenuItemText">
            <summary>
            Gets and sets the color to draw text for individual menu items.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetMenuItemText">
            <summary>
            esets the MenuItemText property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.MenuItemBorder">
            <summary>
            Gets and sets the border color to use with a ToolStripMenuItem.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetMenuItemBorder">
            <summary>
            esets the MenuItemBorder property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.MenuItemPressedGradientBegin">
            <summary>
            Gets and sets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetMenuItemPressedGradientBegin">
            <summary>
            esets the MenuItemPressedGradientBegin property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.MenuItemPressedGradientEnd">
            <summary>
            Gets and sets the ending color of the gradient used when a top-level ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetMenuItemPressedGradientEnd">
            <summary>
            esets the MenuItemPressedGradientEnd property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.MenuItemPressedGradientMiddle">
            <summary>
            Gets and sets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetMenuItemPressedGradientMiddle">
            <summary>
            esets the MenuItemPressedGradientMiddle property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.MenuItemSelected">
            <summary>
            Gets and sets the solid color to use when a ToolStripMenuItem other than the top-level ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetMenuItemSelected">
            <summary>
            esets the MenuItemSelected property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.MenuItemSelectedGradientBegin">
            <summary>
            Gets and sets the starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetMenuItemSelectedGradientBegin">
            <summary>
            esets the MenuItemSelectedGradientBegin property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.MenuItemSelectedGradientEnd">
            <summary>
            Gets and sets the ending color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenu.ResetMenuItemSelectedGradientEnd">
            <summary>
            esets the MenuItemSelectedGradientEnd property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSRafting">
            <summary>
            Storage for rafting entries of the professional color table.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSRafting.#ctor(ComponentFactory.Krypton.Toolkit.KryptonInternalKCT,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteKCTRafting class.
            </summary>
            <param name="internalKCT">Reference to inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSRafting.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSRafting.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSRafting.RaftingContainerGradientBegin">
            <summary>
            Gets and sets the starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSRafting.ResetRaftingContainerGradientBegin">
            <summary>
            esets the RaftingContainerGradientBegin property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSRafting.RaftingContainerGradientEnd">
            <summary>
            Gets and sets the ending color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSRafting.ResetRaftingContainerGradientEnd">
            <summary>
            esets the RaftingContainerGradientEnd property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSGrip">
            <summary>
            Storage for grip entries of the professional color table.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSGrip.#ctor(ComponentFactory.Krypton.Toolkit.KryptonInternalKCT,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteKCTGrip class.
            </summary>
            <param name="internalKCT">Reference to inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSGrip.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSGrip.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSGrip.GripDark">
            <summary>
            Gets and sets the color to use for shadow effects on the grip (move handle).
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSGrip.ResetGripDark">
            <summary>
            esets the GripDark property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSGrip.GripLight">
            <summary>
            Gets and sets the color to use for highlight effects on the grip (move handle).
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSGrip.ResetGripLight">
            <summary>
            esets the GripLight property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSSeparator">
            <summary>
            Storage for separator entries of the professional color table.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSSeparator.#ctor(ComponentFactory.Krypton.Toolkit.KryptonInternalKCT,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteKCTSeparator class.
            </summary>
            <param name="internalKCT">Reference to inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSSeparator.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSSeparator.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSSeparator.SeparatorDark">
            <summary>
            Gets and sets the color to use for shadow effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSSeparator.ResetSeparatorDark">
            <summary>
            Resets the SeparatorDark property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSSeparator.SeparatorLight">
            <summary>
            Gets and sets the color to use for highlight effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSSeparator.ResetSeparatorLight">
            <summary>
            Resets the SeparatorLight property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenuStrip">
            <summary>
            Storage for menu strip entries of the professional color table.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenuStrip.#ctor(ComponentFactory.Krypton.Toolkit.KryptonInternalKCT,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteKCTMenuStrip class.
            </summary>
            <param name="internalKCT">Reference to inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenuStrip.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenuStrip.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenuStrip.MenuStripText">
            <summary>
            Gets and sets the color to draw text on the menu strip.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenuStrip.ResetMenuStripText">
            <summary>
            esets the MenuStripText property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenuStrip.MenuStripFont">
            <summary>
            Gets and sets the font to draw text on the menu strip.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenuStrip.ResetMenuStripFont">
            <summary>
            esets the MenuStripFont property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenuStrip.MenuStripGradientBegin">
            <summary>
            Gets and sets the starting color of the gradient used in the MenuStrip..
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenuStrip.ResetMenuStripGradientBegin">
            <summary>
            esets the MenuStripGradientBegin property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenuStrip.MenuStripGradientEnd">
            <summary>
            Gets and sets the ending color of the gradient used in the MenuStrip..
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSMenuStrip.ResetMenuStripGradientEnd">
            <summary>
            esets the MenuStripGradientEnd property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSStatusStrip">
            <summary>
            Storage for status strip entries of the professional color table.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSStatusStrip.#ctor(ComponentFactory.Krypton.Toolkit.KryptonInternalKCT,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteKCTStatusStrip class.
            </summary>
            <param name="internalKCT">Reference to inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSStatusStrip.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSStatusStrip.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSStatusStrip.StatusStripText">
            <summary>
            Gets and sets the color to draw text on the status strip.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSStatusStrip.ResetStatusStripText">
            <summary>
            Resets the StatusStripText property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSStatusStrip.StatusStripFont">
            <summary>
            Gets and sets the font to draw text on the status strip.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSStatusStrip.ResetStatusStripFont">
            <summary>
            Resets the StatusStripFont property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSStatusStrip.StatusStripGradientBegin">
            <summary>
            Gets and sets the starting color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSStatusStrip.ResetStatusStripGradientBegin">
            <summary>
            Resets the StatusStripGradientBegin property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSStatusStrip.StatusStripGradientEnd">
            <summary>
            Gets and sets the ending color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSStatusStrip.ResetStatusStripGradientEnd">
            <summary>
            Resets the StatusStripGradientEnd property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton">
            <summary>
            Storage for button entries of the professional color table.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.#ctor(ComponentFactory.Krypton.Toolkit.KryptonInternalKCT,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteKCTButton class.
            </summary>
            <param name="internalKCT">Reference to inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonCheckedGradientBegin">
            <summary>
            Gets and sets the starting color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonCheckedGradientBegin">
            <summary>
            Resets the ButtonCheckedGradientBegin property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonCheckedGradientEnd">
            <summary>
            Gets and sets the ending color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonCheckedGradientEnd">
            <summary>
            Resets the ButtonCheckedGradientEnd property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonCheckedGradientMiddle">
            <summary>
            Gets and sets the middle color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonCheckedGradientMiddle">
            <summary>
            Resets the ButtonCheckedGradientMiddle property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonCheckedHighlight">
            <summary>
            Gets and sets the highlight color used when the button is checked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonCheckedHighlight">
            <summary>
            Resets the ButtonCheckedHighlight property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonCheckedHighlightBorder">
            <summary>
            Gets and sets the border color to use with ButtonCheckedHighlight.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonCheckedHighlightBorder">
            <summary>
            Resets the ButtonCheckedHighlightBorder property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonPressedBorder">
            <summary>
            Gets and sets the border color to use with the ButtonPressedGradientBegin, ButtonPressedGradientMiddle, and ButtonPressedGradientEnd colors.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonPressedBorder">
            <summary>
            Resets the ButtonPressedBorder property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonPressedGradientBegin">
            <summary>
            Gets and sets the starting color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonPressedGradientBegin">
            <summary>
            Resets the ButtonPressedGradientBegin property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonPressedGradientEnd">
            <summary>
            Gets and sets the ending color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonPressedGradientEnd">
            <summary>
            Resets the ButtonPressedGradientEnd property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonPressedGradientMiddle">
            <summary>
            Gets and sets the middle color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonPressedGradientMiddle">
            <summary>
            Resets the ButtonPressedGradientMiddle property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonPressedHighlight">
            <summary>
            Gets and sets the solid color used when the button is pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonPressedHighlight">
            <summary>
            Resets the ButtonPressedHighlight property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonPressedHighlightBorder">
            <summary>
            Gets and sets the border color to use with ButtonPressedHighlight.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonPressedHighlightBorder">
            <summary>
            Resets the ButtonPressedHighlightBorder property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonSelectedBorder">
            <summary>
            Gets and sets the border color to use with the ButtonSelectedGradientBegin, ButtonSelectedGradientMiddle, and ButtonSelectedGradientEnd colors.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonSelectedBorder">
            <summary>
            Resets the ButtonSelectedBorder property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonSelectedGradientBegin">
            <summary>
            Gets and sets the starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonSelectedGradientBegin">
            <summary>
            Resets the ButtonSelectedGradientBegin property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonSelectedGradientEnd">
            <summary>
            Gets and sets the ending color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonSelectedGradientEnd">
            <summary>
            Resets the ButtonSelectedGradientEnd property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonSelectedGradientMiddle">
            <summary>
            Gets and sets the middle color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonSelectedGradientMiddle">
            <summary>
            Resets the ButtonSelectedGradientMiddle property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonSelectedHighlight">
            <summary>
            Gets and sets the solid color used when the button is selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonSelectedHighlight">
            <summary>
            Resets the ButtonSelectedHighlight property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ButtonSelectedHighlightBorder">
            <summary>
            Gets and sets the border color to use with ButtonSelectedHighlight.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetButtonSelectedHighlightBorder">
            <summary>
            Resets the ButtonSelectedHighlightBorder property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.CheckBackground">
            <summary>
            Gets and sets the solid color to use when the button is checked and gradients are being used.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetCheckBackground">
            <summary>
            esets the CheckBackground property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.CheckPressedBackground">
            <summary>
            Gets and sets the solid color to use when the button is checked and selected and gradients are being used.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetCheckPressedBackground">
            <summary>
            esets the CheckPressedBackground property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.CheckSelectedBackground">
            <summary>
            Gets and sets the solid color to use when the button is checked and selected and gradients are being used.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetCheckSelectedBackground">
            <summary>
            esets the CheckSelectedBackground property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.OverflowButtonGradientBegin">
            <summary>
            Gets and sets the starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetOverflowButtonGradientBegin">
            <summary>
            esets the OverflowButtonGradientBegin property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.OverflowButtonGradientEnd">
            <summary>
            Gets and sets the ending color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetOverflowButtonGradientEnd">
            <summary>
            esets the OverflowButtonGradientEnd property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.OverflowButtonGradientMiddle">
            <summary>
            Gets and sets the middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSButton.ResetOverflowButtonGradientMiddle">
            <summary>
            esets the OverflowButtonGradientMiddle property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMS">
            <summary>
            Colors associated with menus and tool strip.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMS.#ctor(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.KryptonColorTable,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteKCT class.
            </summary>
            <param name="palette">Associated palettte instance.</param>
            <param name="baseKCT">Initial base KCT to inherit values from.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMS.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMS.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMS.Button">
            <summary>
            Get access to the button colors.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMS.Grip">
            <summary>
            Get access to the grip colors.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMS.Menu">
            <summary>
            Get access to the menu colors.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMS.Rafting">
            <summary>
            Get access to the rafting colors.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMS.MenuStrip">
            <summary>
            Get access to the menu strip colors.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMS.Separator">
            <summary>
            Get access to the separator colors.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMS.StatusStrip">
            <summary>
            Get access to the status strip colors.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMS.ToolStrip">
            <summary>
            Get access to the tool strip colors.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMS.UseRoundedEdges">
            <summary>
            Gets and sets the use of rounded or square edges when rendering.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMS.ResetUseRoundedEdges">
            <summary>
            esets the UseRoundedEdges property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPanel">
            <summary>
            Provides an identifiable area for containing other controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPanel.#ctor">
            <summary>
            Initialize a new instance of the KryptonPanel class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPanel.#ctor(ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect,ComponentFactory.Krypton.Toolkit.PaletteDouble,ComponentFactory.Krypton.Toolkit.PaletteDouble)">
            <summary>
            Initialize a new instance of the KryptonPanel class.
            </summary>
            <param name="stateCommon">Common appearance state to inherit from.</param>
            <param name="stateDisabled">Disabled appearance state.</param>
            <param name="stateNormal">Normal appearance state.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPanel.PanelBackStyle">
            <summary>
            Gets and sets the panel style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPanel.StateCommon">
            <summary>
            Gets access to the common panel appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPanel.StateDisabled">
            <summary>
            Gets access to the disabled panel appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPanel.StateNormal">
            <summary>
            Gets access to the normal panel appearance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPanel.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPanel.ViewDrawPanel">
            <summary>
            Gets access to the view element used to draw the KryptonPanel.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPanel.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer">
            <summary>
            Control the sizing of two panels.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.AutoSizeChanged">
            <summary>
            Occurs when the value of the AutoSize property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.BackgroundImageChanged">
            <summary>
            Occurs when the value of the BackgroundImage property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.BackgroundImageLayoutChanged">
            <summary>
            Occurs when the value of the BackgroundImageLayout property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.ControlAdded">
            <summary>
            Occurs when the value of the ControlAdded property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.ControlRemoved">
            <summary>
            Occurs when the value of the ControlRemoved property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SplitterMoved">
            <summary>
            Occurs when the splitter control is moved.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SplitterMoving">
            <summary>
            Occurs when the splitter control is in the process of moving.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.#ctor">
            <summary>
            Initialize a new instance of the KryptonSplitContainer class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.Name">
            <summary>
            Gets and sets the name of the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.ContainerBackStyle">
            <summary>
            Gets and sets the container background style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SeparatorStyle">
            <summary>
            Gets and sets the separator style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.StateCommon">
            <summary>
            Gets access to the common split container appearance that other states can override.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.StateDisabled">
            <summary>
            Gets access to the disabled split container appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.StateNormal">
            <summary>
            Gets access to the normal split container appearance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.StateTracking">
            <summary>
            Gets access to the hot tracking separator appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.StatePressed">
            <summary>
            Gets access to the pressed separator appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.Panel1">
            <summary>
            Gets access to the first krypton splitter panel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.Panel1MinSize">
            <summary>
            Gets and sets the minium size of panel1.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.Panel1Collapsed">
            <summary>
            Gets and sets collapsed state of Panel1.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.Panel2">
            <summary>
            Gets access to the second krypton splitter panel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.Panel2MinSize">
            <summary>
            Gets and sets the minium size of panel2.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.Panel2Collapsed">
            <summary>
            Gets and sets collapsed state of Panel2.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.IsSplitterFixed">
            <summary>
            Gets and sets a value indicating if the splitter can be moved.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.FixedPanel">
            <summary>
            Gets and sets the panel to keep the same size when resizing.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SplitterDistance">
            <summary>
            Gets and sets the distance of the splitter.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SplitterWidth">
            <summary>
            Gets and sets the thickness of the splitter.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SplitterIncrement">
            <summary>
            Gets and sets the number of pixels the splitter moves in increments.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.Orientation">
            <summary>
            Gets or sets a value indicating the horizontal or vertical orientation of the KryptonSplitContainer panels.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="stateSplit">Palette state to fix against the split container.</param>
            <param name="stateSeparator">Palette state to fix against the separator.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SeparatorControl">
            <summary>
            Gets the top level control of the source.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SeparatorOrientation">
            <summary>
            Gets the orientation of the separator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SeparatorCanMove">
            <summary>
            Can the separator be moved by the user.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SeparatorIncrements">
            <summary>
            Gets the amount the splitter can be incremented.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SeparatorMoveBox">
            <summary>
            Gets the box representing the minimum and maximum allowed splitter movement.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SeparatorMoving(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Indicates the separator is moving.
            </summary>
            <param name="mouse">Current mouse position in client area.</param>
            <param name="splitter">Current position of the splitter.</param>
            <returns>True if movement should be cancelled; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SeparatorMoved(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Indicates the separator has finished and been moved.
            </summary>
            <param name="mouse">Current mouse position in client area.</param>
            <param name="splitter">Current position of the splitter.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.SeparatorNotMoved">
            <summary>
            Indicates the separator has not been moved.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.Controls">
            <summary>
            Gets the collection of controls contained within the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.Padding">
            <summary>
            Gets or sets padding within the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.DesignGetHitTest(System.Drawing.Point)">
            <summary>
            Internal design time usage only.
            </summary>
            <param name="pt">Mouse location.</param>
            <returns>Cursor to show.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.DesignMouseEnter">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.DesignMouseDown(System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
            <param name="button">Mouse button.</param>
            <returns>Process mouse down.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.DesignMouseMove(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.DesignMouseUp(System.Windows.Forms.MouseButtons)">
            <summary>
            Internal design time method.
            </summary>
            <param name="button">Mouse button.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.DesignMouseLeave">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.DesignAbortMoving">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.OnSplitterMoved(System.Windows.Forms.SplitterEventArgs)">
            <summary>
            Raises the SplitterMoved event.
            </summary>
            <param name="e">A SplitterEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.OnSplitterMoving(System.Windows.Forms.SplitterCancelEventArgs)">
            <summary>
            Raises the SplitterMoving event.
            </summary>
            <param name="e">A SplitterEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.ForceControlLayout">
            <summary>
            Force the layout logic to size and position the panels.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.OnInitialized(System.EventArgs)">
            <summary>
            Raises the Initialized event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the KryptonSplitContainer.
            </summary>
            <returns>A new instance of Control.ControlCollection assigned to the control.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.OnAutoSizeChanged(System.EventArgs)">
            <summary>
            Raises the AutoSizeChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.OnBackgroundImageChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageLayoutChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlAdded event.
            </summary>
            <param name="e">An ControlEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitContainer.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlRemoved event.
            </summary>
            <param name="e">An ControlEventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel">
            <summary>
            Special panel used in the KryptonSplitContainer.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.AutoSizeChanged">
            <summary>
            Occurs when the value of the AutoSize property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.DockChanged">
            <summary>
            Occurs when the value of the Dock property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.LocationChanged">
            <summary>
            Occurs when the value of the Location property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.TabIndexChanged">
            <summary>
            Occurs when the value of the TabIndex property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.TabStopChanged">
            <summary>
            Occurs when the value of the TabStop property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.VisibleChanged">
            <summary>
            Occurs when the value of the Visible property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.#ctor(ComponentFactory.Krypton.Toolkit.KryptonSplitContainer)">
            <summary>
            Initialize a new instance of the KryptonSplitterPanel class.
            </summary>
            <param name="container">Reference to owning container.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.Anchor">
            <summary>
            Gets or sets how a KryptonSplitterPanel attaches to the edges of the KryptonSplitContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.AutoSize">
            <summary>
            Gets or sets a value indicating whether the KryptonSplitterPanel is automatically resized to display its entire contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.AutoSizeMode">
            <summary>
            Gets or sets a value indicating whether the control is automatically resized to display its entire contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.BorderStyle">
            <summary>
            Gets or sets the border style for the KryptonSplitterPanel. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.Dock">
            <summary>
            Gets or sets which edge of the KryptonSplitContainer that the KryptonSplitterPanel is docked to. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.DockPadding">
            <summary>
            Gets the internal spacing between the KryptonSplitterPanel and its edges.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.Height">
            <summary>
            Gets or sets the height of the KryptonSplitterPanel. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of the KryptonSplitterPanel relative to the upper-left corner of its KryptonSplitContainer. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.MaximumSize">
            <summary>
            Gets or sets the size that is the upper limit that GetPreferredSize can specify.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.MinimumSize">
            <summary>
            Gets or sets the size that is the lower limit that GetPreferredSize can specify.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.Name">
            <summary>
            The name of this KryptonSplitterPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.Parent">
            <summary>
            The name of this KryptonSplitterPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.Size">
            <summary>
            Gets or sets the height and width of the KryptonSplitterPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.TabIndex">
            <summary>
            Gets or sets the tab order of the KryptonSplitterPanel within its KryptonSplitContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.TabStop">
            <summary>
            Gets or sets a value indicating whether the user can give the focus to this KryptonSplitterPanel using the TAB key.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.Visible">
            <summary>
            Gets or sets a value indicating whether the KryptonSplitterPanel is displayed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.Width">
            <summary>
            Gets or sets the width of the KryptonSplitterPanel. 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.DefaultMargin">
            <summary>
            Gets the space, in pixels, that is specified by default between controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.OnAutoSizeChanged(System.EventArgs)">
            <summary>
            Raises the AutoSizeChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.OnDockChanged(System.EventArgs)">
            <summary>
            Raises the DockChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.OnLocationChanged(System.EventArgs)">
            <summary>
            Raises the LocationChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.OnTabIndexChanged(System.EventArgs)">
            <summary>
            Raises the TabIndexChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.OnTabStopChanged(System.EventArgs)">
            <summary>
            Raises the TabStopChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonSplitterPanel.OnVisibleChanged(System.EventArgs)">
            <summary>
            Raises the VisibleChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.#ctor(ComponentFactory.Krypton.Toolkit.KryptonColorTable,ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the KryptonInternalKCT class.
            </summary>
            <param name="baseKCT">Initial base KCT to inherit values from.</param>
            <param name="palette">Reference to associated palette.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonCheckedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonCheckedGradientBegin">
            <summary>
            Sets and sets the internal ButtonCheckedGradientBegin value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonCheckedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonCheckedGradientEnd">
            <summary>
            Sets and sets the internal ButtonCheckedGradientEnd value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonCheckedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is checked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonCheckedGradientMiddle">
            <summary>
            Sets and sets the internal ButtonCheckedGradientMiddle value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonCheckedHighlight">
            <summary>
            Gets the solid color used when the button is checked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonCheckedHighlight">
            <summary>
            Sets and sets the internal ButtonCheckedHighlight value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonCheckedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonCheckedHighlight.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonCheckedHighlightBorder">
            <summary>
            Sets and sets the internal ButtonCheckedHighlightBorder value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonPressedBorder">
            <summary>
            Gets the border color to use with the ButtonPressedGradientBegin, ButtonPressedGradientMiddle, and ButtonPressedGradientEnd colors.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonPressedBorder">
            <summary>
            Sets and sets the internal ButtonPressedBorder value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonPressedGradientBegin">
            <summary>
            Sets and sets the internal ButtonPressedGradientBegin value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonPressedGradientEnd">
            <summary>
            Sets and sets the internal ButtonPressedGradientEnd value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonPressedGradientMiddle">
            <summary>
            Sets and sets the internal ButtonPressedGradientMiddle value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonPressedHighlight">
            <summary>
            Gets the solid color used when the button is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonPressedHighlight">
            <summary>
            Sets and sets the internal ButtonPressedHighlight value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonPressedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonPressedHighlight.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonPressedHighlightBorder">
            <summary>
            Sets and sets the internal ButtonPressedHighlightBorder value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonSelectedBorder">
            <summary>
            Gets the border color to use with the ButtonSelectedGradientBegin, ButtonSelectedGradientMiddle, and ButtonSelectedGradientEnd colors.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonSelectedBorder">
            <summary>
            Sets and sets the internal ButtonSelectedBorder value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonSelectedGradientBegin">
            <summary>
            Sets and sets the internal ButtonSelectedGradientBegin value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonSelectedGradientEnd">
            <summary>
            Sets and sets the internal ButtonSelectedGradientEnd value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonSelectedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when the button is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonSelectedGradientMiddle">
            <summary>
            Sets and sets the internal ButtonSelectedGradientMiddle value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonSelectedHighlight">
            <summary>
            Gets the solid color used when the button is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonSelectedHighlight">
            <summary>
            Sets and sets the internal ButtonSelectedHighlight value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ButtonSelectedHighlightBorder">
            <summary>
            Gets the border color to use with ButtonSelectedHighlight.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalButtonSelectedHighlightBorder">
            <summary>
            Sets and sets the internal ButtonSelectedHighlightBorder value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.CheckBackground">
            <summary>
            Gets the solid color to use when the button is checked and gradients are being used.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalCheckBackground">
            <summary>
            Sets and sets the internal CheckBackground value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.CheckPressedBackground">
            <summary>
            Gets the solid color to use when the button is checked and selected and gradients are being used.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalCheckPressedBackground">
            <summary>
            Sets and sets the internal CheckPressedBackground value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.CheckSelectedBackground">
            <summary>
            Gets the solid color to use when the button is checked and selected and gradients are being used.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalCheckSelectedBackground">
            <summary>
            Sets and sets the internal CheckSelectedBackground value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.GripDark">
            <summary>
            Gets the color to use for shadow effects on the grip (move handle).
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalGripDark">
            <summary>
            Sets and sets the internal GripDark value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.GripLight">
            <summary>
            Gets the color to use for highlight effects on the grip (move handle).
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalGripLight">
            <summary>
            Sets and sets the internal GripLight value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ImageMarginGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalImageMarginGradientBegin">
            <summary>
            Sets and sets the internal ImageMarginGradientBegin value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ImageMarginGradientEnd">
            <summary>
            Gets the end color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalImageMarginGradientEnd">
            <summary>
            Sets and sets the internal ImageMarginGradientEnd value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ImageMarginGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the image margin of a ToolStripDropDownMenu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalImageMarginGradientMiddle">
            <summary>
            Sets and sets the internal ImageMarginGradientMiddle value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ImageMarginRevealedGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalImageMarginRevealedGradientBegin">
            <summary>
            Sets and sets the internal ImageMarginRevealedGradientBegin value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ImageMarginRevealedGradientEnd">
            <summary>
            Gets the end color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalImageMarginRevealedGradientEnd">
            <summary>
            Sets and sets the internal ImageMarginRevealedGradientEnd value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ImageMarginRevealedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalImageMarginRevealedGradientMiddle">
            <summary>
            Sets and sets the internal ImageMarginRevealedGradientMiddle value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.MenuBorder">
            <summary>
            Gets the color that is the border color to use on a MenuStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalMenuBorder">
            <summary>
            Sets and sets the internal MenuBorder value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.MenuItemText">
            <summary>
            Gets the color used to draw menu item text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalMenuItemText">
            <summary>
            Sets and sets the internal MenuItemText value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.MenuStripFont">
            <summary>
            Gets the font used to draw text on a status strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalMenuStripFont">
            <summary>
            Sets and sets the internal MenuStripFont value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.MenuItemBorder">
            <summary>
            Gets the border color to use with a ToolStripMenuItem.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalMenuItemBorder">
            <summary>
            Sets and sets the internal MenuItemBorder value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.MenuItemPressedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalMenuItemPressedGradientBegin">
            <summary>
            Sets and sets the internal MenuItemPressedGradientBegin value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.MenuItemPressedGradientEnd">
            <summary>
            Gets the end color of the gradient used when a top-level ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalMenuItemPressedGradientEnd">
            <summary>
            Sets and sets the internal MenuItemPressedGradientEnd value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.MenuItemPressedGradientMiddle">
            <summary>
            Gets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalMenuItemPressedGradientMiddle">
            <summary>
            Sets and sets the internal MenuItemPressedGradientMiddle value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.MenuItemSelected">
            <summary>
            Gets the solid color to use when a ToolStripMenuItem other than the top-level ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalMenuItemSelected">
            <summary>
            Sets and sets the internal MenuItemSelected value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.MenuItemSelectedGradientBegin">
            <summary>
            Gets the starting color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalMenuItemSelectedGradientBegin">
            <summary>
            Sets and sets the internal MenuItemSelectedGradientBegin value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.MenuItemSelectedGradientEnd">
            <summary>
            Gets the end color of the gradient used when the ToolStripMenuItem is selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalMenuItemSelectedGradientEnd">
            <summary>
            Sets and sets the internal MenuItemSelectedGradientEnd value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.MenuStripText">
            <summary>
            Gets the color used to draw text on a menu strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalMenuStripText">
            <summary>
            Sets and sets the internal MenuStripText value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.MenuStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalMenuStripGradientBegin">
            <summary>
            Sets and sets the internal MenuStripGradientBegin value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.MenuStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the MenuStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalMenuStripGradientEnd">
            <summary>
            Sets and sets the internal MenuStripGradientEnd value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.OverflowButtonGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalOverflowButtonGradientBegin">
            <summary>
            Sets and sets the internal OverflowButtonGradientBegin value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.OverflowButtonGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalOverflowButtonGradientEnd">
            <summary>
            Sets and sets the internal OverflowButtonGradientEnd value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.OverflowButtonGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStripOverflowButton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalOverflowButtonGradientMiddle">
            <summary>
            Sets and sets the internal OverflowButtonGradientMiddle value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.RaftingContainerGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalRaftingContainerGradientBegin">
            <summary>
            Sets and sets the internal RaftingContainerGradientBegin value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.RaftingContainerGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContainer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalRaftingContainerGradientEnd">
            <summary>
            Sets and sets the internal RaftingContainerGradientEnd value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.SeparatorDark">
            <summary>
            Gets the color to use to for shadow effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalSeparatorDark">
            <summary>
            Sets and sets the internal SeparatorDark value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.SeparatorLight">
            <summary>
            Gets the color to use to for highlight effects on the ToolStripSeparator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalSeparatorLight">
            <summary>
            Sets and sets the internal SeparatorLight value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.StatusStripText">
            <summary>
            Gets the color used to draw text on a status strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalStatusStripText">
            <summary>
            Sets and sets the internal StatusStripText value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.StatusStripFont">
            <summary>
            Gets the font used to draw text on a status strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalStatusStripFont">
            <summary>
            Sets and sets the internal StatusStripFont value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.StatusStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalStatusStripGradientBegin">
            <summary>
            Sets and sets the internal StatusStripGradientBegin value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.StatusStripGradientEnd">
            <summary>
            Gets the end color of the gradient used on the StatusStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalStatusStripGradientEnd">
            <summary>
            Sets and sets the internal StatusStripGradientEnd value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ToolStripText">
            <summary>
            Gets the color used to draw text on a tool strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalToolStripText">
            <summary>
            Sets and sets the internal ToolStripText value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ToolStripFont">
            <summary>
            Gets the font used to draw text on a tool strip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalToolStripFont">
            <summary>
            Sets and sets the internal ToolStripFont value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ToolStripBorder">
            <summary>
            Gets the border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalToolStripBorder">
            <summary>
            Sets and sets the internal ToolStripBorder value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ToolStripContentPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalToolStripContentPanelGradientBegin">
            <summary>
            Sets and sets the internal ToolStripContentPanelGradientBegin value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ToolStripContentPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalToolStripContentPanelGradientEnd">
            <summary>
            Sets and sets the internal ToolStripContentPanelGradientEnd value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ToolStripDropDownBackground">
            <summary>
            Gets the solid background color of the ToolStripDropDown.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalToolStripDropDownBackground">
            <summary>
            Sets and sets the internal ToolStripDropDownBackground value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ToolStripGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalToolStripGradientBegin">
            <summary>
            Sets and sets the internal ToolStripGradientBegin value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ToolStripGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalToolStripGradientEnd">
            <summary>
            Sets and sets the internal ToolStripGradientEnd value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ToolStripGradientMiddle">
            <summary>
            Gets the middle color of the gradient used in the ToolStrip background.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalToolStripGradientMiddle">
            <summary>
            Sets and sets the internal ToolStripGradientMiddle value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ToolStripPanelGradientBegin">
            <summary>
            Gets the starting color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalToolStripPanelGradientBegin">
            <summary>
            Sets and sets the internal ToolStripPanelGradientBegin value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.ToolStripPanelGradientEnd">
            <summary>
            Gets the end color of the gradient used in the ToolStripPanel.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalToolStripPanelGradientEnd">
            <summary>
            Sets and sets the internal ToolStripPanelGradientEnd value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.UseRoundedEdges">
            <summary>
            Gets a value indicating if rounded egdes are required.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonInternalKCT.InternalUseRoundedEdges">
            <summary>
            Sets and sets the internal UseRoundedEdges value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip">
            <summary>
            Storage for tool strip entries of the professional color table.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.#ctor(ComponentFactory.Krypton.Toolkit.KryptonInternalKCT,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the KryptonPaletteKCTToolStrip class.
            </summary>
            <param name="internalKCT">Reference to inherited values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.PopulateFromBase">
            <summary>
            Populate values from the base palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ToolStripText">
            <summary>
            Gets and sets the color to draw text on the tool strip.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ResetToolStripText">
            <summary>
            esets the ToolStripText property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ToolStripFont">
            <summary>
            Gets and sets the font to draw text on the tool strip.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ResetToolStripFont">
            <summary>
            esets the ToolStripFont property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ToolStripBorder">
            <summary>
            Gets and sets the border color to use on the bottom edge of the ToolStrip.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ResetToolStripBorder">
            <summary>
            esets the ToolStripBorder property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ToolStripContentPanelGradientBegin">
            <summary>
            Gets and sets the starting color of the gradient used in the ToolStripContentPanel..
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ResetToolStripContentPanelGradientBegin">
            <summary>
            esets the ToolStripContentPanelGradientBegin property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ToolStripContentPanelGradientEnd">
            <summary>
            Gets and sets the ending color of the gradient used in the ToolStripContentPanel.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ResetToolStripContentPanelGradientEnd">
            <summary>
            esets the ToolStripContentPanelGradientEnd property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ToolStripDropDownBackground">
            <summary>
            Gets and sets the solid background color of the ToolStripDropDown..
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ResetToolStripDropDownBackground">
            <summary>
            esets the ToolStripDropDownBackground property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ToolStripGradientBegin">
            <summary>
            Gets and sets the starting color of the gradient used in the ToolStrip background..
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ResetToolStripGradientBegin">
            <summary>
            esets the ToolStripGradientBegin property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ToolStripGradientEnd">
            <summary>
            Gets and sets the ending color of the gradient used in the ToolStrip background..
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ResetToolStripGradientEnd">
            <summary>
            esets the ToolStripGradientEnd property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ToolStripGradientMiddle">
            <summary>
            Gets and sets the ending color of the gradient used in the ToolStrip background..
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ResetToolStripGradientMiddle">
            <summary>
            esets the ToolStripGradientMiddle property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ToolStripPanelGradientBegin">
            <summary>
            Gets and sets the starting color of the gradient used in the ToolStripPanel..
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ResetToolStripPanelGradientBegin">
            <summary>
            esets the ToolStripPanelGradientBegin property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ToolStripPanelGradientEnd">
            <summary>
            Gets and sets the ending color of the gradient used in the ToolStripPanel..
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonPaletteTMSToolStrip.ResetToolStripPanelGradientEnd">
            <summary>
            esets the ToolStripPanelGradientEnd property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteLayoutEventArgs">
            <summary>
            Details for palette layout events.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteLayoutEventArgs.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initialize a new instance of the PaletteLayoutEventArgs class.
            </summary>
            <param name="needLayout">Does the layout need regenerating.</param>
            <param name="needColorTable">Have the color table values changed?</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteLayoutEventArgs.NeedColorTable">
            <summary>
            Gets a value indicating if the color table needs to be reprocessed.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonManager">
            <summary>
            Exposes global settings that affect all the Krypton controls.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonManager.GlobalPaletteChanged">
            <summary>
            Occurs when the palette changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.KryptonManager.GlobalAllowFormChromeChanged">
            <summary>
            Occurs when the AllowFormChrome property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonManager.#ctor">
            <summary>
            Initialize a new instance of the KryptonManager class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonManager.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initialize a new instance of the KryptonManager class.
            </summary>
            <param name="container">Container that owns the component.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonManager.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.GlobalPaletteMode">
            <summary>
            Gets or sets the global palette used for drawing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonManager.ResetGlobalPaletteMode">
            <summary>
            Resets the GlobalPaletteMode property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.GlobalPalette">
            <summary>
            Gets and sets the global custom applied to drawing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonManager.ResetGlobalPalette">
            <summary>
            Resets the GlobalPalette property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.GlobalApplyToolstrips">
            <summary>
            Gets or sets a value indicating if the palette colors are applied to the toolstrips.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonManager.ResetGlobalApplyToolstrips">
            <summary>
            Resets the GlobalApplyToolstrips property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.GlobalAllowFormChrome">
            <summary>
            Gets or sets a value indicating if KryptonForm instances are allowed to show custom chrome.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonManager.ResetGlobalAllowFormChrome">
            <summary>
            Resets the GlobalAllowFormChrome property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.GlobalStrings">
            <summary>
            Gets a set of global strings used by Krypton that can be localized.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonManager.ResetGlobalStrings">
            <summary>
            Resets the GlobalStrings property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.ApplyToolstrips">
            <summary>
            Gets and sets the global flag that decides if palette colors are applied to toolstrips.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.AllowFormChrome">
            <summary>
            Gets and sets the global flag that decides if form chrom should be customized.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.Strings">
            <summary>
            Gets access to the set of global strings.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.CurrentGlobalPalette">
            <summary>
            Gets the current global palette instance given the manager settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonManager.GetPaletteForMode(ComponentFactory.Krypton.Toolkit.PaletteMode)">
            <summary>
            Gets the implementation for the requested palette mode.
            </summary>
            <param name="mode">Requested palette mode.</param>
            <returns>IPalette reference is available; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.PaletteProfessionalSystem">
            <summary>
            Gets the single instance of the professional system palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.PaletteProfessionalOffice2003">
            <summary>
            Gets the single instance of the professional office palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.PaletteOffice2007Blue">
            <summary>
            Gets the single instance of the Blue variant Office 2007 palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.PaletteOffice2007Silver">
            <summary>
            Gets the single instance of the Silver variant Office 2007 palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.PaletteOffice2007Black">
            <summary>
            Gets the single instance of the Black variant Office 2007 palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.PaletteOffice2010Blue">
            <summary>
            Gets the single instance of the Blue variant Office 2010 palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.PaletteOffice2010Silver">
            <summary>
            Gets the single instance of the Silver variant Office 2010 palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.PaletteOffice2010Black">
            <summary>
            Gets the single instance of the Black variant Office 2010 palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.PaletteSparkleBlue">
            <summary>
            Gets the single instance of the Blue variant sparkle palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.PaletteSparkleOrange">
            <summary>
            Gets the single instance of the Orange variant sparkle palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.PaletteSparklePurple">
            <summary>
            Gets the single instance of the Purple variant sparkle palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonManager.GetRendererForMode(ComponentFactory.Krypton.Toolkit.RendererMode)">
            <summary>
            Gets the implementation for the requested renderer mode.
            </summary>
            <param name="mode">Requested renderer mode.</param>
            <returns>IRenderer reference is available; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.RenderSparkle">
            <summary>
            Gets the single instance of the Sparkle renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.RenderOffice2007">
            <summary>
            Gets the single instance of the Office 2007 renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.RenderOffice2010">
            <summary>
            Gets the single instance of the Office 2010 renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.RenderProfessional">
            <summary>
            Gets the single instance of the professional renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonManager.RenderStandard">
            <summary>
            Gets the single instance of the standard renderer.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs">
            <summary>
            Details for need layout events.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs.#ctor(System.Boolean)">
            <summary>
            Initialize a new instance of the NeedLayoutEventArgs class.
            </summary>
            <param name="needLayout">Does the layout need regenerating.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs.#ctor(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Initialize a new instance of the NeedLayoutEventArgs class.
            </summary>
            <param name="needLayout">Does the layout need regenerating.</param>
            <param name="invalidRect">Specifies an invalidation rectangle.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs.NeedLayout">
            <summary>
            Gets a value indicating if the layout needs regenerating.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs.InvalidRect">
            <summary>
            Gets the rectangle to be invalidated.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualSimple">
            <summary>
            Base class used for implementation of simple controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualSimple.#ctor">
            <summary>
            Initialize a new instance of the VisualSimple class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualSimple.AutoSizeMode">
            <summary>
            Gets and sets the auto size mode.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualSimple.GetPreferredSize(System.Drawing.Size)">
            <summary>
            Get the preferred size of the control based on a proposed size.
            </summary>
            <param name="proposedSize">Starting size proposed by the caller.</param>
            <returns>Calculated preferred size.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualSimple.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualSimple.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualSimple.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.GraphicsTextHint">
            <summary>
            Apply a requested text rendering hint to a graphics instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GraphicsTextHint.#ctor(System.Drawing.Graphics,System.Drawing.Text.TextRenderingHint)">
            <summary>
            Initialize a new instance of the GraphicsSmooth class.
            </summary>
            <param name="graphics">Graphics context.</param>
            <param name="textHint">Temporary text rendering hint to apply.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GraphicsTextHint.Dispose">
            <summary>
            Reverse the text hint change.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ColorHSL">
            <summary>
            Represents a hue, saturation, luminance triple.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ColorHSL.#ctor">
            <summary>
            Initialize a new instance of the ColorHSL class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ColorHSL.#ctor(System.Drawing.Color)">
            <summary>
            Initialize a new instance of the ColorHSL class.
            </summary>
            <param name="c">Initialize from an existing Color.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ColorHSL.Color">
            <summary>
            Get a Color instance from the HSL triple.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ColorHSL.Hue">
            <summary>
            Gets and sets the hue.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ColorHSL.Saturation">
            <summary>
            Gets and sets the saturation.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ColorHSL.Luminance">
            <summary>
            Gets and sets the luminance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteModeConverter">
            <summary>
            Custom type converter so that PaletteMode values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteModeConverter.#ctor">
            <summary>
            Initialize a new instance of the PaletteModeConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteModeConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.StringLookupConverter">
            <summary>
            Helper base class used to convert from to/from a table of value,string pairs.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.StringLookupConverter.Pair">
            <summary>
            Represents a name/value pair association.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.StringLookupConverter.Pair.Enum">
            <summary>
            Enumeration value.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.StringLookupConverter.Pair.Display">
            <summary>
            Enumeration value display string.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.StringLookupConverter.Pair.#ctor(System.Object,System.String)">
            <summary>
            Initialize a new instance of the Pair structure.
            </summary>
            <param name="obj">Object instance.</param>
            <param name="str">String instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.StringLookupConverter.#ctor(System.Type)">
            <summary>
            Initialize a new instance of the StringLookupConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.StringLookupConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.StringLookupConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A CultureInfo object. If a null reference the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">The Type to convert the value parameter to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.StringLookupConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride">
            <summary>
            Inherit properties from primary source in preference to the backup source.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Initialize a new instance of the PaletteContentInheritOverride class.
            </summary>
            <param name="primary">First choice inheritence.</param>
            <param name="backup">Backup inheritence.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Initialize a new instance of the PaletteContentInheritOverride class.
            </summary>
            <param name="primary">First choice inheritence.</param>
            <param name="backup">Backup inheritence.</param>
            <param name="overrideState">State used by the override.</param>
            <param name="apply">Should the override we used.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.SetPalettes(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Update the the primary and backup palettes.
            </summary>
            <param name="primary">New primary palette.</param>
            <param name="backup">New backup palette.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.Apply">
            <summary>
            Gets and sets a value indicating if override should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.Override">
            <summary>
            Gets and sets a value indicating if override state should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.OverrideState">
            <summary>
            Gets and sets the override palette state to use.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritOverride.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride">
            <summary>
            Inherit properties from primary source in preference to the backup source.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Initialize a new instance of the PaletteBorderInheritOverride class.
            </summary>
            <param name="primary">First choice inheritence.</param>
            <param name="backup">Backup inheritence.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.SetPalettes(ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Update the the primary and backup palettes.
            </summary>
            <param name="primary">New primary palette.</param>
            <param name="backup">New backup palette.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.Apply">
            <summary>
            Gets and sets a value indicating if override should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.Override">
            <summary>
            Gets and sets a value indicating if override state should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.OverrideState">
            <summary>
            Gets and sets the override palette state to use.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border rounding.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritOverride.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride">
            <summary>
            Inherit properties from primary source in preference to the backup source.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBack)">
            <summary>
            Initialize a new instance of the PaletteBackInheritOverride class.
            </summary>
            <param name="primary">First choice inheritence.</param>
            <param name="backup">Backup inheritence.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.SetPalettes(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBack)">
            <summary>
            Update the the primary and backup palettes.
            </summary>
            <param name="primary">New primary palette.</param>
            <param name="backup">New backup palette.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.Apply">
            <summary>
            Gets and sets a value indicating if override should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.Override">
            <summary>
            Gets and sets a value indicating if override state should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.OverrideState">
            <summary>
            Gets and sets the override palette state to use.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritOverride.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContentImage">
            <summary>
            Implement storage for palette content image details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentImage.InternalStorage.#ctor">
            <summary>
            Initialize a new instance of the InternalStorage structure.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentImage.InternalStorage.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteContentImage.PropertyChanged">
            <summary>
            Occurs when a property has changed value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentImage.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteContentImage class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentImage.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentImage.ImageH">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentImage.ImageV">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentImage.Effect">
            <summary>
            Gets the effect applied to drawing the image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentImage.ImageColorMap">
            <summary>
            Gets and set the image color to remap into another color.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentImage.ImageColorTo">
            <summary>
            Gets and set the color to use in place of the image map color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentImage.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="property">Name of the property changed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContentText">
            <summary>
            Implement storage for palette content text details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentText.InternalStorage.#ctor">
            <summary>
            Initialize a new instance of the InternalStorage structure.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.InternalStorage.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteContentText.PropertyChanged">
            <summary>
            Occurs when a property has changed value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentText.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteContentText class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.Font">
            <summary>
            Gets the font for the text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.Hint">
            <summary>
            Gets the text rendering hint for the text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.Trim">
            <summary>
            Gets the text trimming for the text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.Prefix">
            <summary>
            Gets the drawing used for prefix characters.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.TextH">
            <summary>
            Gets the horizontal relative alignment of the text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.TextV">
            <summary>
            Gets the vertical relative alignment of the text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.MultiLineH">
            <summary>
            Gets the relative horizontal alignment of multiline content text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.MultiLine">
            <summary>
            Gets the flag indicating if multiline text is allowed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.Color1">
            <summary>
            Gets and sets the first color for the text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.Color2">
            <summary>
            Gets and sets the second color for the text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.ColorStyle">
            <summary>
            Gets and sets the color drawing style for the text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.ColorAlign">
            <summary>
            Gets and set the color alignment for the text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.ColorAngle">
            <summary>
            Gets and sets the color angle for the text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.Image">
            <summary>
            Gets and sets the image for the text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.ImageStyle">
            <summary>
            Gets and sets the image style for the text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentText.ImageAlign">
            <summary>
            Gets and set the image alignment for the text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentText.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="property">Name of the property changed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect">
            <summary>
            Provide inheritance of palette content properties from source redirector.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteContentStyle)">
            <summary>
            Initialize a new instance of the PaletteContentInheritRedirect class.
            </summary>
            <param name="style">Style used in requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Initialize a new instance of the PaletteContentInheritRedirect class.
            </summary>
            <param name="redirect">Source for inherit requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteContentStyle)">
            <summary>
            Initialize a new instance of the PaletteContentInheritRedirect class.
            </summary>
            <param name="redirect">Source for inherit requests.</param>
            <param name="style">Style used in requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetRedirector">
            <summary>
            Gets the redirector instance.
            </summary>
            <returns>Return the currently used redirector.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.Style">
            <summary>
            Gets and sets the style to use when inheriting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInheritRedirect.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContentInherit">
            <summary>
            Provide inheritance of palette content properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContentInherit.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContent">
            <summary>
            Implement storage for palette content details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.InternalStorage.#ctor">
            <summary>
            Initialize a new instance of the InternalStorage structure.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContent.InternalStorage.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteContent.PropertyChanged">
            <summary>
            Occurs when a property has changed value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Initialize a new instance of the PaletteContent class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteContent class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContent.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContent.Draw">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContent.DrawFocus">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content draw with focus value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContent.Image">
            <summary>
            Gets access to the image palette details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content image horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content image vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual image drawing effect value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContent.ShortText">
            <summary>
            Gets access to the short text palette details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text font value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text rendering hint for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text trimming for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text horizontal multiline alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets an image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContent.LongText">
            <summary>
            Gets access to the long text palette details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text font value.
            </summary>
            <returns>Font value.</returns>
            <param name="state">Palette value should be applicable to this state.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text rendering hint for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text trimming for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text horizontal multiline alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets an image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContent.Padding">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.ResetPadding">
            <summary>
            Reset the Padding to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteContent.AdjacentGap">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.ResetAdjacentGap">
            <summary>
            Reset the AdjacentGap to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteContent.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="property">Name of the property changed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteModeManagerConverter">
            <summary>
            Custom type converter so that PaletteModeManager values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteModeManagerConverter.#ctor">
            <summary>
            Initialize a new instance of the PaletteModeManagerConverter clas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteModeManagerConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonProfessionalKCT.#ctor(System.Drawing.Color[],System.Boolean,ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the KryptonProfessionalKCT class.
            </summary>
            <param name="colors">Set of colors to customize with.</param>
            <param name="useSystemColors">Should be forced to use system colors.</param>
            <param name="palette">Reference to associated palette.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalKCT.Header1Begin">
            <summary>
            Gets the starting color of the gradient used in the Header1.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.KryptonProfessionalKCT.Header1End">
            <summary>
            Gets the end color of the gradient used in the Header1.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem">
            <summary>
            Provides a professional appearance using colors/fonts generated from system settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.#ctor">
            <summary>
            Initialize a new instance of the PaletteProfessionalSystem class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetAllowFormChrome">
            <summary>
            Gets a value indicating if KryptonForm instances should show custom chrome.
            </summary>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRenderer">
            <summary>
            Gets the renderer to use for this palette.
            </summary>
            <returns>Renderer to use for drawing palette settings.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the background.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the border.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border drawing style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentImageColorTransparent(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetTreeViewImage(System.Boolean)">
            <summary>
            Gets a tree view image appropriate for the provided state.
            </summary>
            <param name="expanded">Is the node expanded</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetCheckBoxImage(System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the check box enabled.</param>
            <param name="checkState">Is the check box checked/unchecked/indeterminate.</param>
            <param name="tracking">Is the check box being hot tracked.</param>
            <param name="pressed">Is the check box being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRadioButtonImage(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the radio button enabled.</param>
            <param name="checkState">Is the radio button checked.</param>
            <param name="tracking">Is the radio button being hot tracked.</param>
            <param name="pressed">Is the radio button being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContextMenuCheckedImage">
            <summary>
            Gets a checked image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContextMenuIndeterminateImage">
            <summary>
            Gets a indeterminate image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetContextMenuSubMenuImage">
            <summary>
            Gets an image indicating a sub-menu on a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetGalleryButtonImage(ComponentFactory.Krypton.Toolkit.PaletteRibbonGalleryButton,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="button">Enum of the button to fetch.</param>
            <param name="state">State of the button to fetch.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetButtonSpecIcon(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the icon to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Icon value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetButtonSpecImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the image transparent color.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetButtonSpecShortText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the short text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetButtonSpecLongText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the long text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetButtonSpecColorMap(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap from the image to the container foreground.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetButtonSpecColorTransparent(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap to transparent.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetButtonSpecStyle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button style used for drawing the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetButtonSpecLocation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Get the location for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>HeaderLocation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetButtonSpecEdge(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the edge to positon the button against.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteRelativeEdgeAlign value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetButtonSpecOrientation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button orientation.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonOrientation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonShape">
            <summary>
            Gets the ribbon shape that should be used.
            </summary>
            <returns>Ribbon shape value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonContextTextAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text alignment for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonContextTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonContextTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonDisabledDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the dark disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonDisabledLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the light disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonDropArrowLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonDropArrowDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonGroupDialogDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonGroupDialogLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonGroupSeparatorDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonGroupSeparatorLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonMinimizeBarDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonMinimizeBarLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonTabSeparatorColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonTabSeparatorContextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab context separators.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the ribbon font.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonQATButtonDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button dark content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonQATButtonLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button light content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the =color for the item text.
            </summary>
            <param name="style">Text style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetElementColor1(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetElementColor2(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetElementColor3(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetElementColor4(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GetElementColor5(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.ColorTable">
            <summary>
            Gets access to the color table instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.GenerateColorTable">
            <summary>
            Generate an appropriate color table.
            </summary>
            <returns>KryptonProfessionalKCT instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.OnUserPreferenceChanged(System.Object,Microsoft.Win32.UserPreferenceChangedEventArgs)">
            <summary>
            Handle a change in the user preferences.
            </summary>
            <param name="sender">Source of event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalSystem.DefineFonts">
            <summary>
            Update the fonts to reflect system or user defined changes.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBase">
            <summary>
            Provides base class implementation for palettes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteBase.PalettePaint">
            <summary>
            Occurs when a palette change requires a repaint.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteBase.AllowFormChromeChanged">
            <summary>
            Occurs when the AllowFormChrome setting changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteBase.BasePaletteChanged">
            <summary>
            Occurs when the BasePalette/BasePaletteMode setting changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteBase.BaseRendererChanged">
            <summary>
            Occurs when the BaseRenderer/BaseRendererMode setting changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteBase.ButtonSpecChanged">
            <summary>
            Occurs when a button spec change occurs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.#ctor">
            <summary>
            Initialize a new instance of the PaletteBase class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetAllowFormChrome">
            <summary>
            Gets a value indicating if KryptonForm instances should show custom chrome.
            </summary>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRenderer">
            <summary>
            Gets the renderer to use for this palette.
            </summary>
            <returns>Renderer to use for drawing palette settings.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the background.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the border.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border drawing style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentImageColorTransparent(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetTreeViewImage(System.Boolean)">
            <summary>
            Gets a tree view image appropriate for the provided state.
            </summary>
            <param name="expanded">Is the node expanded</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetCheckBoxImage(System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the check box enabled.</param>
            <param name="checkState">Is the check box checked/unchecked/indeterminate.</param>
            <param name="tracking">Is the check box being hot tracked.</param>
            <param name="pressed">Is the check box being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRadioButtonImage(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the radio button enabled.</param>
            <param name="checkState">Is the radio button checked.</param>
            <param name="tracking">Is the radio button being hot tracked.</param>
            <param name="pressed">Is the radio button being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContextMenuCheckedImage">
            <summary>
            Gets a checked image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContextMenuIndeterminateImage">
            <summary>
            Gets a indeterminate image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetContextMenuSubMenuImage">
            <summary>
            Gets an image indicating a sub-menu on a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetGalleryButtonImage(ComponentFactory.Krypton.Toolkit.PaletteRibbonGalleryButton,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="button">Enum of the button to fetch.</param>
            <param name="state">State of the button to fetch.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetButtonSpecIcon(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the icon to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Icon value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetButtonSpecImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the image transparent color.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetButtonSpecShortText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the short text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetButtonSpecLongText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the long text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetButtonSpecToolTipTitle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the tooltip title text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetButtonSpecColorMap(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap from the image to the container foreground.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetButtonSpecColorTransparent(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap to transparent.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetButtonSpecStyle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button style used for drawing the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetButtonSpecLocation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Get the location for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>HeaderLocation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetButtonSpecEdge(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the edge to positon the button against.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteRelativeEdgeAlign value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetButtonSpecOrientation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button orientation.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonOrientation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonShape">
            <summary>
            Gets the ribbon shape that should be used.
            </summary>
            <returns>Ribbon shape value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonContextTextAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text alignment for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonContextTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonContextTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonDisabledDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the dark disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonDisabledLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the light disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonDropArrowLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonDropArrowDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonGroupDialogDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonGroupDialogLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonGroupSeparatorDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonGroupSeparatorLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonMinimizeBarDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonMinimizeBarLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonTabSeparatorColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonTabSeparatorContextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab context separators.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the ribbon font.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonQATButtonDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button dark content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonQATButtonLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button light content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="style">Text style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetElementColor1(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetElementColor2(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetElementColor3(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetElementColor4(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetElementColor5(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetDragDropFeedback">
            <summary>
            Gets the feedback drawing method used.
            </summary>
            <returns>Feedback enumeration value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetDragDropSolidBack">
            <summary>
            Gets the background color for a solid drag drop area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetDragDropSolidBorder">
            <summary>
            Gets the border color for a solid drag drop area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetDragDropSolidOpacity">
            <summary>
            Gets the opacity of the solid area.
            </summary>
            <returns>Opacity ranging from 0 to 1.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetDragDropDockBack">
            <summary>
            Gets the background color for the docking indicators area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetDragDropDockBorder">
            <summary>
            Gets the border color for the docking indicators area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetDragDropDockActive">
            <summary>
            Gets the active color for docking indicators.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.GetDragDropDockInactive">
            <summary>
            Gets the inactive color for docking indicators.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBase.BaseFontSize">
            <summary>
            Gets and sets the base font size used when defining fonts.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.DefineFonts">
            <summary>
            Update the fonts to reflect system or user defined changes.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBase.ColorTable">
            <summary>
            Gets access to the color table instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.MergeColors(System.Drawing.Color,System.Single,System.Drawing.Color,System.Single)">
            <summary>
            Merge two colors together using relative percentages.
            </summary>
            <param name="color1">First color.</param>
            <param name="percent1">Percentage of first color to use.</param>
            <param name="color2">Second color.</param>
            <param name="percent2">Percentage of second color to use.</param>
            <returns>Merged color.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.MergeColors(System.Drawing.Color,System.Single,System.Drawing.Color,System.Single,System.Drawing.Color,System.Single)">
            <summary>
            Merge three colors together using relative percentages.
            </summary>
            <param name="color1">First color.</param>
            <param name="percent1">Percentage of first color to use.</param>
            <param name="color2">Second color.</param>
            <param name="percent2">Percentage of second color to use.</param>
            <param name="color3">Third color.</param>
            <param name="percent3">Percentage of third color to use.</param>
            <returns>Merged color.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.FadedColor(System.Drawing.Color)">
            <summary>
            Create a faded version of provided color.
            </summary>
            <param name="baseColor">Starting color.</param>
            <returns>Faded version of parameter color.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBase.InputControlPadding">
            <summary>
            Gets the input control padding needed to add a border to a borderless input control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.OnUserPreferenceChanged(System.Object,Microsoft.Win32.UserPreferenceChangedEventArgs)">
            <summary>
            Handle a change in the user preferences.
            </summary>
            <param name="sender">Source of event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.OnPalettePaint(System.Object,ComponentFactory.Krypton.Toolkit.PaletteLayoutEventArgs)">
            <summary>
            Raises the PalettePaint event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An PaletteLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.OnAllowFormChromeChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the AllowFormChromeChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.OnBasePaletteChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the BasePaletteChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.OnBaseRendererChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the BaseRendererChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBase.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the ButtonSpecChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect">
            <summary>
            Provide inheritance of palette background properties from source redirector.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Initialize a new instance of the PaletteBackInheritRedirect class.
            </summary>
            <param name="redirect">Source for inherit requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle)">
            <summary>
            Initialize a new instance of the PaletteBackInheritRedirect class.
            </summary>
            <param name="redirect">Source for inherit requests.</param>
            <param name="style">Style used in requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.GetRedirector">
            <summary>
            Gets the redirector instance.
            </summary>
            <returns>Return the currently used redirector.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.Style">
            <summary>
            Gets and sets the style to use when inheriting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInheritRedirect.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBackInherit">
            <summary>
            Provide inheritance of palette background properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInherit.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInherit.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInherit.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInherit.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInherit.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInherit.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInherit.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInherit.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInherit.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBackInherit.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect">
            <summary>
            Provide inheritance of palette border properties from source redirector.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Initialize a new instance of the PaletteBorderInheritRedirect class.
            </summary>
            <param name="redirect">Source for inherit requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle)">
            <summary>
            Initialize a new instance of the PaletteBorderInheritRedirect class.
            </summary>
            <param name="redirect">Source for inherit requests.</param>
            <param name="style">Style used in requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.OverrideBorderToFalse">
            <summary>
            Gets and sets the overriding of the border draw to always be false.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.GetRedirector">
            <summary>
            Gets the redirector instance.
            </summary>
            <returns>Return the currently used redirector.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.Style">
            <summary>
            Gets and sets the style to use when inheriting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border rounding from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInheritRedirect.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style from the redirector.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBorderInherit">
            <summary>
            Provide inheritance of palette border properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInherit.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInherit.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInherit.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInherit.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInherit.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInherit.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInherit.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInherit.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInherit.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInherit.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border rounding.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInherit.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInherit.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorderInherit.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IContentValues">
            <summary>
            Exposes access to content values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContentValues.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContentValues.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContentValues.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContentValues.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IButtonSpecValues">
            <summary>
            Exposes access to button specification values.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.ButtonSpecPropertyChanged">
            <summary>
            Occurs when a button spec property has changed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.GetImage(ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the button image.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <param name="state">State for which an image is needed.</param>
            <returns>Button image.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button image transparent color.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.GetShortText(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button short text.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Short text string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.GetLongText(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button long text.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Long text string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.GetToolTipTitle(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button tooltip title text.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Tooltip title string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.GetColorMap(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets and image color to remap to container foreground.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.GetVisible(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visibility.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibility value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.GetEnabled(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.SetView(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Sets the current view associated with the button spec.
            </summary>
            <param name="view">View element reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.GetView">
            <summary>
            Get the current view associated with the button spec.
            </summary>
            <returns>View element reference.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.GetViewEnabled">
            <summary>
            Gets a value indicating if the associated view is enabled.
            </summary>
            <returns>True if enabled; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.GetEdge(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button edge alignment.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button edge value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.GetStyle(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button style.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.GetLocation(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button location value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button location.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IButtonSpecValues.GetOrientation(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button orienation.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Orientation value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IContextMenuProvider">
            <summary>
            Interface exposed by a context menu provider.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.Dispose">
            <summary>
            Raises the Dispose event.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.Closing">
            <summary>
            Raises the Closing event.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.Close">
            <summary>
            Raises the Close event.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.OnDispose(System.EventArgs)">
            <summary>
            Fires the Closing event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Fires the Closing event.
            </summary>
            <param name="cea">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.OnClose(ComponentFactory.Krypton.Toolkit.CloseReasonEventArgs)">
            <summary>
            Fires the Close event.
            </summary>
            <param name="e">An CloseReasonMenuArgs containing the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.HasParentProvider">
            <summary>
            Does this provider have a parent provider.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderEnabled">
            <summary>
            Is the entire context menu enabled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderCanCloseMenu">
            <summary>
            Is context menu capable of being closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderShowSubMenuFixed(ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem)">
            <summary>
            Should the sub menu be shown at fixed screen location for this menu item.
            </summary>
            <param name="menuItem">Menu item that needs to show sub menu.</param>
            <returns>True if the sub menu should be a fixed size.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderShowSubMenuFixedRect(ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem)">
            <summary>
            Should the sub menu be shown at fixed screen location for this menu item.
            </summary>
            <param name="menuItem">Menu item that needs to show sub menu.</param>
            <returns>Screen rectangle to use as display rectangle.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderCloseReason">
            <summary>
            Sets the reason for the context menu being closed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderShowHorz">
            <summary>
            Gets and sets the horizontal setting used to position the menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderShowVert">
            <summary>
            Gets and sets the vertical setting used to position the menu.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderViewColumns">
            <summary>
            Gets access to the layout for context menu columns.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderViewManager">
            <summary>
            Gets access to the context menu specific view manager.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderStateCommon">
            <summary>
            Gets access to the context menu common state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderStateDisabled">
            <summary>
            Gets access to the context menu disabled state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderStateNormal">
            <summary>
            Gets access to the context menu normal state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderStateHighlight">
            <summary>
            Gets access to the context menu highlight state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderStateChecked">
            <summary>
            Gets access to the context menu checked state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderImages">
            <summary>
            Gets access to the context menu images.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderPalette">
            <summary>
            Gets access to the custom palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderPaletteMode">
            <summary>
            Gets access to the palette mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderRedirector">
            <summary>
            Gets access to the context menu redirector.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuProvider.ProviderNeedPaintDelegate">
            <summary>
            Gets a delegate used to indicate a repaint is required.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IContextMenuItemColumn">
            <summary>
            Interface used to control width of a context menu item column.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuItemColumn.ColumnIndex">
            <summary>
            Gets the index of the column within the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuItemColumn.LastPreferredSize">
            <summary>
            Gets the last calculated preferred size value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuItemColumn.OverridePreferredWidth">
            <summary>
            Sets the preferred width value to use until further notice.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IContextMenuTarget">
            <summary>
            Interface used to control width of a context menu item column.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuTarget.HasSubMenu">
            <summary>
            Returns if the item shows a sub menu when selected.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContextMenuTarget.ShowTarget">
            <summary>
            This target should display as the active target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContextMenuTarget.ClearTarget">
            <summary>
            This target should clear any active display.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContextMenuTarget.ShowSubMenu">
            <summary>
            This target should show any appropriate sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContextMenuTarget.ClearSubMenu">
            <summary>
            This target should remove any showing sub menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContextMenuTarget.MatchMnemonic(System.Char)">
            <summary>
            Determine if the keys value matches the mnemonic setting for this target.
            </summary>
            <param name="charCode">Key code to test against.</param>
            <returns>True if a match is found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContextMenuTarget.MnemonicActivate">
            <summary>
            Activate the item because of a mnemonic key press.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContextMenuTarget.GetActiveView">
            <summary>
            Gets the view element that should be used when this target is active.
            </summary>
            <returns>View element to become active.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContextMenuTarget.ClientRectangle">
            <summary>
            Get the client rectangle for the display of this target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IContextMenuTarget.DoesStackedClientMouseDownBecomeCurrent(System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause the currently stacked context menu to become current.
            </summary>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IContainedInputControl">
            <summary>
            Interface allowing access to the contained input control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IContainedInputControl.ContainedControl">
            <summary>
            Gets access to the contained input control.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IKryptonCommand">
            <summary>
            Interface exposes access to a command definition.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.IKryptonCommand.Execute">
            <summary>
            Occurs when the command needs executing.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.IKryptonCommand.PropertyChanged">
            <summary>
            Occurs when a property has changed value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonCommand.Enabled">
            <summary>
            Gets and sets the enabled state of the command.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonCommand.Checked">
            <summary>
            Gets and sets the checked state of the command.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonCommand.CheckState">
            <summary>
            Gets and sets the check state of the command.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonCommand.Text">
            <summary>
            Gets and sets the command text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonCommand.ExtraText">
            <summary>
            Gets and sets the command extra text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonCommand.TextLine1">
            <summary>
            Gets and sets the command text line 1 for use in KryptonRibbon.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonCommand.TextLine2">
            <summary>
            Gets and sets the command text line 2 for use in KryptonRibbon.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonCommand.ImageSmall">
            <summary>
            Gets and sets the command small image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonCommand.ImageLarge">
            <summary>
            Gets and sets the command large image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonCommand.ImageTransparentColor">
            <summary>
            Gets and sets the command image transparent color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IKryptonCommand.PerformExecute">
            <summary>
            Generates a Execute event for a command.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar">
            <summary>
            Provides month calendar information.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.CalendarControl">
            <summary>
            Gets access to the owning control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.InDesignMode">
            <summary>
            Gets if the control is in design mode.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.GetRenderer">
            <summary>
            Get the renderer.
            </summary>
            <returns>Render instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.GetToolStripDelegate">
            <summary>
            Gets a delegate for creating tool strip renderers.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.CalendarDimensions">
            <summary>
            Gets the number of columns and rows of months displayed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.FirstDayOfWeek">
            <summary>
            First day of the week.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.MinDate">
            <summary>
            First date allowed to be drawn/selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.MaxDate">
            <summary>
            Last date allowed to be drawn/selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.TodayDate">
            <summary>
            Today's date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.TodayFormat">
            <summary>
            Today's date format.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.FocusDay">
            <summary>
            Gets the focus day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.MaxSelectionCount">
            <summary>
            Number of days allowed to be selected at a time.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.ScrollChange">
            <summary>
            Gets the number of months to move for next/prev buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.SelectionStart">
            <summary>
            Start of selected range.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.SelectionEnd">
            <summary>
            End of selected range.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.SetBoldedOverride(System.Boolean)">
            <summary>
            Update usage of bolded overrides.
            </summary>
            <param name="bolded">Should show bolded.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.SetTodayOverride(System.Boolean)">
            <summary>
            Update usage of today overrides.
            </summary>
            <param name="today">New today state.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.SetFocusOverride(System.Boolean)">
            <summary>
            Update usage of focus overrides.
            </summary>
            <param name="focus">Should show focus.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.SetSelectionRange(System.DateTime,System.DateTime)">
            <summary>
            Set the selection range.
            </summary>
            <param name="start">New starting date.</param>
            <param name="end">New ending date.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.BoldedDatesList">
            <summary>
            Dates to be bolded.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.MonthlyBoldedDatesMask">
            <summary>
            Monthly days to be bolded.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.AnnuallyBoldedDatesMask">
            <summary>
            Array of annual days per month to be bolded.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.StateCommon">
            <summary>
            Gets access to the month calendar common appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.StateNormal">
            <summary>
            Gets access to the month calendar normal appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.StateDisabled">
            <summary>
            Gets access to the month calendar disabled appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.StateTracking">
            <summary>
            Gets access to the month calendar tracking appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.StatePressed">
            <summary>
            Gets access to the month calendar pressed appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.StateCheckedNormal">
            <summary>
            Gets access to the month calendar checked normal appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.StateCheckedTracking">
            <summary>
            Gets access to the month calendar checked tracking appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.StateCheckedPressed">
            <summary>
            Gets access to the month calendar checked pressed appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.OverrideDisabled">
            <summary>
            Gets access to the override for disabled day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.OverrideNormal">
            <summary>
            Gets access to the override for disabled day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.OverrideTracking">
            <summary>
            Gets access to the override for tracking day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.OverridePressed">
            <summary>
            Gets access to the override for pressed day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.OverrideCheckedNormal">
            <summary>
            Gets access to the override for checked normal day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.OverrideCheckedTracking">
            <summary>
            Gets access to the override for checked tracking day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar.OverrideCheckedPressed">
            <summary>
            Gets access to the override for checked pressed day.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IKryptonDebug">
            <summary>
            Exposes access to the debugging helpers for krypton controls.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IKryptonDebug.KryptonResetCounters">
            <summary>
            Reset the internal counters.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonDebug.KryptonLayoutCounter">
            <summary>
            Gets the number of layout cycles performed since last reset.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonDebug.KryptonPaintCounter">
            <summary>
            Gets the number of paint cycles performed since last reset.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IKryptonDesignerSelect">
            <summary>
            Exposes design time selection of parent control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonDesignerSelect.CanPaint">
            <summary>
            Should painting be performed for the selection glyph.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IKryptonDesignerSelect.SelectParentControl">
            <summary>
            Request the parent control be selected.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IKryptonComposition">
            <summary>
            Exposes interface for visual form to cooperate with a view for composition.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonComposition.CompHeight">
            <summary>
            Gets the pixel height of the composition extension into the client area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonComposition.CompVisible">
            <summary>
            Should painting be performed for the selection glyph.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonComposition.CompOwnerForm">
            <summary>
            Gets and sets the form that owns the composition.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IKryptonComposition.CompNeedPaint(System.Boolean)">
            <summary>
            Request a repaint and optional layout.
            </summary>
            <param name="needLayout">Is a layout required.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonComposition.CompHandle">
            <summary>
            Gets the handle of the composition element control.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IKryptonDesignObject">
            <summary>
            Exposes interface for visual form to cooperate with a view for composition.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonDesignObject.DesignEnabled">
            <summary>
            Gets and sets if the object is enabled.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IKryptonDesignObject.DesignVisible">
            <summary>
            Gets and sets if the object is visible.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualOrientation">
            <summary>
            Specifies the orientation of a visual element.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.VisualOrientation.Top">
            <summary>
            Specifies the element is orientated in a vertical top down manner.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.VisualOrientation.Bottom">
            <summary>
            Specifies the element is orientated in a vertical bottom upwards manner.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.VisualOrientation.Left">
            <summary>
            Specifies the element is orientated in a horizontal left to right manner.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.VisualOrientation.Right">
            <summary>
            Specifies the element is orientated in a horizontal right to left manner.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.TabBorderStyle">
            <summary>
            Specifies the style of tab border to draw.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.SquareEqualSmall">
            <summary>
            Specifies square tabs of equal size with small spacing gaps.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.SquareEqualMedium">
            <summary>
            Specifies square tabs of equal size with medium spacing gaps.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.SquareEqualLarge">
            <summary>
            Specifies square tabs of equal size with large spacing gaps.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.SquareOutsizeSmall">
            <summary>
            Specifies square tabs with larger selected entry with small spacing gaps.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.SquareOutsizeMedium">
            <summary>
            Specifies square tabs with larger selected entry with medium spacing gaps.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.SquareOutsizeLarge">
            <summary>
            Specifies square tabs with larger selected entry with large spacing gaps.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.RoundedEqualSmall">
            <summary>
            Specifies rounded tabs of equal size with small spacing gaps.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.RoundedEqualMedium">
            <summary>
            Specifies rounded tabs of equal size with medium spacing gaps.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.RoundedEqualLarge">
            <summary>
            Specifies rounded tabs of equal size with large spacing gaps.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.RoundedOutsizeSmall">
            <summary>
            Specifies rounded tabs with larger selected entry with small spacing gaps.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.RoundedOutsizeMedium">
            <summary>
            Specifies rounded tabs with larger selected entry with medium spacing gaps.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.RoundedOutsizeLarge">
            <summary>
            Specifies rounded tabs with larger selected entry with large spacing gaps.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.SlantEqualNear">
            <summary>
            Specifies near slanted tabs of equal size.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.SlantEqualFar">
            <summary>
            Specifies far slanted tabs of equal size.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.SlantEqualBoth">
            <summary>
            Specifies double slanted tabs of equal size.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.SlantOutsizeNear">
            <summary>
            Specifies near slanted tabs with larger selected entry.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.SlantOutsizeFar">
            <summary>
            Specifies far slanted tabs with larger selected entry.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.SlantOutsizeBoth">
            <summary>
            Specifies double slanted tabs with larger selected entry.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.OneNote">
            <summary>
            Specifies the OneNote application style tab appearance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.SmoothEqual">
            <summary>
            Specifies smooth tabs of equal size.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.SmoothOutsize">
            <summary>
            Specifies smooth tabs with larger selected entry.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.DockEqual">
            <summary>
            Specifies docking tabs of requal size.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabBorderStyle.DockOutsize">
            <summary>
            Specifies docking tabs with larger selected entry.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonEnabled">
            <summary>
            Specifies the enabled state of a button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonEnabled.Container">
            <summary>
            Specifies button should take enabled state from container control state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonEnabled.True">
            <summary>
            Specifies button should be enabled.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonEnabled.False">
            <summary>
            Specifies button should be disabled.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonOrientation">
            <summary>
            Specifies the orientation of a button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonOrientation.Auto">
            <summary>
            Specifies orientation should automatically match the concept of use.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonOrientation.FixedTop">
            <summary>
            Specifies the button is orientated in a vertical top down manner.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonOrientation.FixedBottom">
            <summary>
            Specifies the button is orientated in a vertical bottom upwards manner.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonOrientation.FixedLeft">
            <summary>
            Specifies the button is orientated in a horizontal left to right manner.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonOrientation.FixedRight">
            <summary>
            Specifies the button is orientated in a horizontal right to left manner.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonCheckState">
            <summary>
            Specifies the checked state of a button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonCheckState.NotCheckButton">
            <summary>
            Specifies the button is not a checked button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonCheckState.Checked">
            <summary>
            Specifies the check button is currently checked.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonCheckState.Unchecked">
            <summary>
            Specifies the check button is not currently checked.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RelativeEdgeAlign">
            <summary>
            Specifies a relative edge alignment position.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.RelativeEdgeAlign.Near">
            <summary>
            Specifies a relative alignment of near.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.RelativeEdgeAlign.Far">
            <summary>
            Specifies a relative alignment of far.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RelativePositionAlign">
            <summary>
            Specifies a relative alignment position.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.RelativePositionAlign.Near">
            <summary>
            Specifies a relative alignment of near.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.RelativePositionAlign.Center">
            <summary>
            Specifies a relative alignment of center.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.RelativePositionAlign.Far">
            <summary>
            Specifies a relative alignment of far.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.LabelStyle">
            <summary>
            Specifies the label style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.NormalControl">
            <summary>
            Specifies a normal label for use on a control style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.BoldControl">
            <summary>
            Specifies a bold label for use on a control style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.ItalicControl">
            <summary>
            Specifies an italic label for use on a control style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.TitleControl">
            <summary>
            Specifies a label appropriate for titles for use on a control style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.NormalPanel">
            <summary>
            Specifies a normal label for use on a panel style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.BoldPanel">
            <summary>
            Specifies a bold label for use on a panel style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.ItalicPanel">
            <summary>
            Specifies an italic label for use on a panel style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.TitlePanel">
            <summary>
            Specifies a label appropriate for titles for use on a panel style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.GroupBoxCaption">
            <summary>
            Specifies a label appropriate for captions for use on a group box style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.ToolTip">
            <summary>
            Specifies a label appropriate for use inside a tooltip.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.SuperTip">
            <summary>
            Specifies a label appropriate for use inside a super tooltip.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.KeyTip">
            <summary>
            Specifies a label appropriate for use inside a key tooltip.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.Custom1">
            <summary>
            Specifies the first custom label style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.Custom2">
            <summary>
            Specifies the second custom label style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.LabelStyle.Custom3">
            <summary>
            Specifies the third custom label style.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.GridStyle">
            <summary>
            Specifies the grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.GridStyle.List">
            <summary>
            Specifies a list grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.GridStyle.Sheet">
            <summary>
            Specifies a worksheet grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.GridStyle.Custom1">
            <summary>
            Specifies the first custom grid style.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.DataGridViewStyle">
            <summary>
            Specifies the data grid view style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.DataGridViewStyle.List">
            <summary>
            Specifies a list grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.DataGridViewStyle.Sheet">
            <summary>
            Specifies a worksheet grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.DataGridViewStyle.Custom1">
            <summary>
            Specifies the first custom grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.DataGridViewStyle.Mixed">
            <summary>
            Specifies a mixed set of styles.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.HeaderStyle">
            <summary>
            Specifies the header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.HeaderStyle.Primary">
            <summary>
            Specifies a primary header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.HeaderStyle.Secondary">
            <summary>
            Specifies a secondary header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.HeaderStyle.DockInactive">
            <summary>
            Specifies an inactive docking header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.HeaderStyle.DockActive">
            <summary>
            Specifies an active docking header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.HeaderStyle.Form">
            <summary>
            Specifies a form header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.HeaderStyle.Calendar">
            <summary>
            Specifies a calendar header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.HeaderStyle.Custom1">
            <summary>
            Specifies the first custom header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.HeaderStyle.Custom2">
            <summary>
            Specifies the second custom header style.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonStyle">
            <summary>
            Specifies the button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.Standalone">
            <summary>
            Specifies a standalone button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.Alternate">
            <summary>
            Specifies an alternate standalone button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.LowProfile">
            <summary>
            Specifies a low profile button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.ButtonSpec">
            <summary>
            Specifies a button spec usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.BreadCrumb">
            <summary>
            Specifies a button style appropriate for bread crumbs.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.CalendarDay">
            <summary>
            Specifies a button style appropriate for calendar day.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.Cluster">
            <summary>
            Specifies a ribbon cluster button usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.Gallery">
            <summary>
            Specifies a ribbon gallery button usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.NavigatorStack">
            <summary>
            Specifies a navigator stack usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.NavigatorOverflow">
            <summary>
            Specifies a navigator overflow usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.NavigatorMini">
            <summary>
            Specifies a navigator mini usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.InputControl">
            <summary>
            Specifies an input control usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.ListItem">
            <summary>
            Specifies a list item usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.Form">
            <summary>
            Specifies a form level style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.FormClose">
            <summary>
            Specifies a form close button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.Command">
            <summary>
            Specifies a command button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.Custom1">
            <summary>
            Specifies the first custom button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.Custom2">
            <summary>
            Specifies the second custom button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ButtonStyle.Custom3">
            <summary>
            Specifies the third custom button style.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.InputControlStyle">
            <summary>
            Specifies the input control style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.InputControlStyle.Standalone">
            <summary>
            Specifies a standalone input button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.InputControlStyle.Ribbon">
            <summary>
            Specifies a ribbon input button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.InputControlStyle.Custom1">
            <summary>
            Specifies a custom input button style.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.SeparatorStyle">
            <summary>
            Specifies the separator style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.SeparatorStyle.LowProfile">
            <summary>
            Specifies a low profile separator.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.SeparatorStyle.HighProfile">
            <summary>
            Specifies a high profile separator.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.SeparatorStyle.HighInternalProfile">
            <summary>
            Specifies a high profile for internal separator.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.SeparatorStyle.Custom1">
            <summary>
            Specifies a custom separator.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.TabStyle">
            <summary>
            Specifies the tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabStyle.HighProfile">
            <summary>
            Specifies the high profile tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabStyle.StandardProfile">
            <summary>
            Specifies the standard profile style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabStyle.LowProfile">
            <summary>
            Specifies the low profile tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabStyle.OneNote">
            <summary>
            Specifies the Microsoft OneNote tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabStyle.Dock">
            <summary>
            Specifies the docking tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabStyle.DockAutoHidden">
            <summary>
            Specifies the auto hidden docking tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabStyle.Custom1">
            <summary>
            Specifies the first custom tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabStyle.Custom2">
            <summary>
            Specifies the second custom tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TabStyle.Custom3">
            <summary>
            Specifies the third custom tab style.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.HeaderLocation">
            <summary>
            Specifies a target header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.HeaderLocation.PrimaryHeader">
            <summary>
            Specifies the primary header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.HeaderLocation.SecondaryHeader">
            <summary>
            Specifies the secondary header.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.HeaderGroupCollapsedTarget">
            <summary>
            Specifies the target collapsed state of a header group when in the collapsed mode.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.HeaderGroupCollapsedTarget.CollapsedToPrimary">
            <summary>
            Specifies the appearance is collapsed to just the primary header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.HeaderGroupCollapsedTarget.CollapsedToSecondary">
            <summary>
            Specifies the appearance is collapsed to just the secondary header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.HeaderGroupCollapsedTarget.CollapsedToBoth">
            <summary>
            Specifies the appearance is collapsed to just the primary and secondary headers.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonLinkBehavior">
            <summary>
            Specifies the logic for underlining the link label short text.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.KryptonLinkBehavior.AlwaysUnderline">
            <summary>
            Specifies the short text is always underlined.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.KryptonLinkBehavior.HoverUnderline">
            <summary>
            Specifies the short text is underlined only when mouse hovers over text.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.KryptonLinkBehavior.NeverUnderline">
            <summary>
            Specifies the short text is never underlined.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDockStyle">
            <summary>
            Specifies the docking styles for the docking view elements.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ViewDockStyle.Fill">
            <summary>
            Specifies the child element should fill the remaining space.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ViewDockStyle.Top">
            <summary>
            Specifies the child element should dock against the top edge.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ViewDockStyle.Bottom">
            <summary>
            Specifies the child element should dock against the bottom edge.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ViewDockStyle.Left">
            <summary>
            Specifies the child element should dock against the left edge.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ViewDockStyle.Right">
            <summary>
            Specifies the child element should dock against the right edge.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.GridRowGlyph">
            <summary>
            Specifies the grid row glyph.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.GridRowGlyph.None">
            <summary>
            Specifies no glyph for the row.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.GridRowGlyph.Star">
            <summary>
            Specifies a star for showing a dirty row.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.GridRowGlyph.Arrow">
            <summary>
            Specifies an arrow for the current row.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.GridRowGlyph.ArrowStar">
            <summary>
            Specifies a star and arrow for a dirty current row.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.GridRowGlyph.Pencil">
            <summary>
            Specifies a pencil for the line being edited.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV">
            <summary>
            Specifies the relative vertical position for showing a KryptonContextMenu.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV.Above">
            <summary>
            Specifies bottom of context menu is adjacent to top of rectangle.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV.Below">
            <summary>
            Specifies top of context menu is adjacent to bottom of rectangle.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV.Top">
            <summary>
            Specifies top of context menu is adjacent to top of rectangle.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionV.Bottom">
            <summary>
            Specifies bottom of context menu is adjacent to bottom of rectangle.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH">
            <summary>
            Specifies the relative horizontal position for showing a KryptonContextMenu.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH.Before">
            <summary>
            Specifies right of context menu is adjacent to left of rectangle.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH.After">
            <summary>
            Specifies left of context menu is adjacent to right of rectangle.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH.Left">
            <summary>
            Specifies left of context menu is adjacent to left of rectangle.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.KryptonContextMenuPositionH.Right">
            <summary>
            Specifies right of context menu is adjacent to right of rectangle.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ColorScheme">
            <summary>
            Specifies a color scheme.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ColorScheme.None">
            <summary>
            Specifies no predefined colors.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ColorScheme.Mono2">
            <summary>
            Specifies just white and black.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ColorScheme.Mono8">
            <summary>
            Specifies 8 colors ranging from white to black.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ColorScheme.Basic16">
            <summary>
            Specifies the basic set of 16 colors.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ColorScheme.OfficeStandard">
            <summary>
            Specifies the Office set of standard 10 colors.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ColorScheme.OfficeThemes">
            <summary>
            Specifies the Office set of 10 color themes.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.TaskDialogButtons">
            <summary>
            Specifies task dialog buttons.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TaskDialogButtons.None">
            <summary>
            Specifies no buttons be shown.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TaskDialogButtons.OK">
            <summary>
            Specifies the OK button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TaskDialogButtons.Cancel">
            <summary>
            Specifies the Cancel button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TaskDialogButtons.Yes">
            <summary>
            Specifies the Yes button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TaskDialogButtons.No">
            <summary>
            Specifies the No button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TaskDialogButtons.Retry">
            <summary>
            Specifies the Retry button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.TaskDialogButtons.Close">
            <summary>
            Specifies the Close button.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.CheckedSelectionMode">
            <summary>
            Specifies selection mode of the KryptonCheckedListBox.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.CheckedSelectionMode.None">
            <summary>
            No items can be selected.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.CheckedSelectionMode.One">
            <summary>
            Only one item can be selected.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.DateTimeList">
            <summary>
            Manage a list of DateTime instances.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MonthCalendarButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecAny instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MonthCalendarButtonSpecCollection.#ctor(ComponentFactory.Krypton.Toolkit.ViewLayoutMonths)">
            <summary>
            Initialize a new instance of the MonthCalendarButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.NeedPaintHandler">
            <summary>
            Signature of method that is called when painting needs to occur.
            </summary>
            <param name="sender">Source of the call.</param>
            <param name="e">A NeedLayoutEventArgs containing event information.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PointHandler">
            <summary>
            Signature of method that provides a point as the data.
            </summary>
            <param name="sender">Source of the call.</param>
            <param name="pt">A Point related to the event.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTripleOverride">
            <summary>
            Allow the palette to be overriden optionally.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleOverride.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Initialize a new instance of the PaletteTripleOverride class.
            </summary>
            <param name="normalTriple">Normal palette to use.</param>
            <param name="overrideTriple">Override palette to use.</param>
            <param name="overrideState">State used by the override.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleOverride.SetPalettes(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Update the the normal and override palettes.
            </summary>
            <param name="normalTriple">New normal palette.</param>
            <param name="overrideTriple">New override palette.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleOverride.Apply">
            <summary>
            Gets and sets a value indicating if override should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleOverride.Override">
            <summary>
            Gets and sets a value indicating if override state should be applied.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleOverride.OverrideState">
            <summary>
            Gets and sets the override palette state to use.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleOverride.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleOverride.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleOverride.PaletteContent">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect">
            <summary>
            Implement storage for palette border, background and content.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle)">
            <summary>
            Initialize a new instance of the PaletteTripleRedirect class.
            </summary>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="contentStyle">Initial content style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle)">
            <summary>
            Initialize a new instance of the PaletteTripleRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="contentStyle">Initial content style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteTripleRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="contentStyle">Initial content style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.SetRedirector(ComponentFactory.Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle)">
            <summary>
            Update each individual style.
            </summary>
            <param name="backStyle">New background style.</param>
            <param name="borderStyle">New border style.</param>
            <param name="contentStyle">New content style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.ButtonStyle)">
            <summary>
            Update the palette styles using a button style.
            </summary>
            <param name="buttonStyle">New button style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.SetStyles(ComponentFactory.Krypton.Toolkit.HeaderStyle)">
            <summary>
            Update the palette styles using a header style.
            </summary>
            <param name="headerStyle">New header style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.BackStyle">
            <summary>
            Gets and sets the back palette style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.BorderStyle">
            <summary>
            Gets and sets the border palette style.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.Content">
            <summary>
            Gets access to the content palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.ContentStyle">
            <summary>
            Gets and sets the content palette style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroupRedirect">
            <summary>
            Redirect storage for HeaderGroup states.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroupRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteHeaderGroupRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroupRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteHeaderGroupRedirect class.
            </summary>
            <param name="redirectHeaderGroup">Inheritence redirection for header group.</param>
            <param name="redirectHeaderPrimary">Inheritence redirection for primary header.</param>
            <param name="redirectHeaderSecondary">Inheritence redirection for secondary header.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroupRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroupRedirect.HeaderPrimary">
            <summary>
            Gets access to the primary header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroupRedirect.HeaderSecondary">
            <summary>
            Gets access to the secondary header appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroupRedirect.OverlayHeaders">
            <summary>
            Gets and sets a value indicating if headers should overlay the border.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroupRedirect.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroupRedirect.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderGroupRedirect.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteHeaderPaddingRedirect">
            <summary>
            Redirect storage for headers within a HeaderGroup state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderPaddingRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteHeaderPaddingRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="contentStyle">Initial content style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderPaddingRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteHeaderPaddingRedirect.HeaderPadding">
            <summary>
            Gets and sets the padding used to inset the header within the HeaderGroup
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderPaddingRedirect.ResetHeaderPadding">
            <summary>
            Reset the HeaderPadding to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteHeaderPaddingRedirect.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPaddingRedirect">
            <summary>
            Implement storage for palette border,background and separator padding.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPaddingRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteSeparatorPaddingRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backStyle">Initial background style.</param>
            <param name="borderStyle">Initial border style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPaddingRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPaddingRedirect.Padding">
            <summary>
            Gets the padding used to position the separator.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPaddingRedirect.ResetPadding">
            <summary>
            Reset the Padding to the default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPaddingRedirect.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPaddingRedirect.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSeparatorPaddingRedirect.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteSplitContainerRedirect">
            <summary>
            Extend storage for the split container with background and border information combined with separator information.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteSplitContainerRedirect.#ctor(ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteSplitContainerRedirect class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="backContainerStyle">Initial split container background style.</param>
            <param name="borderContainerStyle">Initial split container border style.</param>
            <param name="backSeparatorStyle">Initial separator background style.</param>
            <param name="borderSeparatorStyle">Initial separator border style.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteSplitContainerRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteSplitContainerRedirect.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteSplitContainerRedirect.Separator">
            <summary>
            Get access to the overrides for defining separator appearance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.GradientItemColorsItem.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the GradientItemColorsItem class.
            </summary>
            <param name="border">Base border color.</param>
            <param name="begin">Beginning background color.</param>
            <param name="end">Ending background color.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.GradientItemColorsTracking.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the GradientItemColorsTracking class.
            </summary>
            <param name="border">Base border color.</param>
            <param name="begin">Beginning background color.</param>
            <param name="end">Ending background color.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.GradientItemColorsPressed.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the GradientItemColorsPressed class.
            </summary>
            <param name="border">Base border color.</param>
            <param name="begin">Beginning background color.</param>
            <param name="end">Ending background color.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.GradientItemColorsChecked.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the GradientItemColorsChecked class.
            </summary>
            <param name="border">Base border color.</param>
            <param name="begin">Beginning background color.</param>
            <param name="end">Ending background color.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.GradientItemColorsCheckedTracking.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the GradientItemColorsCheckedTracking class.
            </summary>
            <param name="border">Base border color.</param>
            <param name="begin">Beginning background color.</param>
            <param name="end">Ending background color.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.#ctor(ComponentFactory.Krypton.Toolkit.KryptonColorTable)">
            <summary>
            Initialise a new instance of the KryptonOffice2007Renderer class.
            </summary>
            <param name="kct">Source for text colors.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.OnRenderArrow(System.Windows.Forms.ToolStripArrowRenderEventArgs)">
            <summary>
            Raises the RenderArrow event. 
            </summary>
            <param name="e">An ToolStripArrowRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.OnRenderButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.OnRenderDropDownButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderDropDownButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.OnRenderItemCheck(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>
            Raises the RenderItemCheck event. 
            </summary>
            <param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.OnRenderItemText(System.Windows.Forms.ToolStripItemTextRenderEventArgs)">
            <summary>
            Raises the RenderItemText event. 
            </summary>
            <param name="e">A ToolStripItemTextRenderEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.OnRenderItemImage(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
            <summary>
            Raises the RenderItemImage event. 
            </summary>
            <param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.OnRenderMenuItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderMenuItemBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.OnRenderSplitButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
            <summary>
            Raises the RenderSplitButtonBackground event. 
            </summary>
            <param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.OnRenderStatusStripSizingGrip(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderStatusStripSizingGrip event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.OnRenderToolStripContentPanelBackground(System.Windows.Forms.ToolStripContentPanelRenderEventArgs)">
            <summary>
            Raises the RenderToolStripContentPanelBackground event. 
            </summary>
            <param name="e">An ToolStripContentPanelRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.OnRenderSeparator(System.Windows.Forms.ToolStripSeparatorRenderEventArgs)">
            <summary>
            Raises the RenderSeparator event. 
            </summary>
            <param name="e">An ToolStripSeparatorRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBackground event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.OnRenderImageMargin(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderImageMargin event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonOffice2007Renderer.OnRenderToolStripBorder(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBorder event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoDisposable">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoDisposable.Finalize">
            <summary>
            Dispose of resources.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoDisposable.Dispose">
            <summary>
            Dispose of resources.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoDisposable.Dispose(System.Boolean)">
            <summary>
            Dispose of resources.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoDouble">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoDouble.first">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoDouble.second">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoDouble.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoTriple">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoTriple.third">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoTriple.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRectOneColor">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRectOneColor.rect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRectOneColor.c1">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRectOneColor.#ctor(System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRectOneColor.UseCachedValues(System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRectTwoColor">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRectTwoColor.rect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRectTwoColor.c1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRectTwoColor.c2">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRectTwoColor.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRectTwoColor.UseCachedValues(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRectThreeColor">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRectThreeColor.c3">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRectThreeColor.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRectThreeColor.UseCachedValues(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRectFourColor">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRectFourColor.c4">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRectFourColor.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRectFourColor.UseCachedValues(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRectFiveColor">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRectFiveColor.c5">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRectFiveColor.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRectFiveColor.UseCachedValues(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonLinear">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonLinear.linearBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonLinear.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonLinear.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonLinearBorder">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonLinearBorder.linearBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonLinearBorder.linearPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonLinearBorder.borderPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonLinearBorder.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonLinearBorder.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButtonInner">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButtonInner.outsideBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButtonInner.insideBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButtonInner.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButtonInner.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButtonOuter">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButtonOuter.wholeBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButtonOuter.backPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButtonOuter.bottomDarkGradient">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButtonOuter.topLightenGradient">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButtonOuter.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButtonOuter.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonAppTab">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppTab.borderPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppTab.borderFillPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppTab.insideFillPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppTab.highlightPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppTab.highlightBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppTab.highlightRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppTab.borderPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppTab.borderBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppTab.insideFillBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonAppTab.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonAppTab.GeneratePaths(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonAppTab.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupGradientOne">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupGradientOne.brush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupGradientOne.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupGradientOne.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupGradientTwo">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupGradientTwo.topRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupGradientTwo.bottomRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupGradientTwo.topBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupGradientTwo.bottomBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupGradientTwo.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupGradientTwo.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupCollapsedBorder">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupCollapsedBorder.solidPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupCollapsedBorder.insidePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupCollapsedBorder.solidPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupCollapsedBorder.insidePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupCollapsedBorder.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupCollapsedBorder.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupCollapsedFrameBorder">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupCollapsedFrameBorder.solidPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupCollapsedFrameBorder.titleBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupCollapsedFrameBorder.solidPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupCollapsedFrameBorder.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupCollapsedFrameBorder.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorder">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorder.backRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorder.solidPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorder.insidePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorder.outsidePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorder.lightPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorder.solidPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorder.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorder.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorderSep">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorderSep.totalBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorderSep.innerBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorderSep.trackSepBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorderSep.trackFillBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorderSep.trackHighlightBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorderSep.pressedFillBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorderSep.innerPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorderSep.trackSepPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorderSep.trackBottomPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorderSep.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorderSep.UseCachedValues(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalBorderSep.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalTitle">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalTitle.titlePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalTitle.titleBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalTitle.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupNormalTitle.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder.outsidePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder.insidePathN">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder.insidePathL">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder.shadowPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder.fillBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder.fillTopBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder.shadowPenN">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder.shadowPenL">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder.outsidePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder.insidePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.borderRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.borderPoints">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.backRect1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.backRect2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.backBrush1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.backBrush2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.backBrush3">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.gradientBorderBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.gradientBorderPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.solidBorderPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.shadowPen1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.shadowPen2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.shadowPen3">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorder3.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorderContext">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorderContext.outsidePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorderContext.insidePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorderContext.shadowPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorderContext.fillBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorderContext.fillTopBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorderContext.shadowPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorderContext.outsidePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorderContext.insidePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorderContext.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonGroupAreaBorderContext.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.half1Rect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.half2Rect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.half2RectF">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.ellipseRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.outsidePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.topPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.ellipsePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.half1LeftBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.half1RightBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.half1LightBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.outsideBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.insideBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.topBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.ellipseBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.half2Brush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.outsidePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.topPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.UseCachedValues(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010.borderPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010.outsidePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010.insidePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010.outsideBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010.insideBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010.outsidePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010.UseCachedValues(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007.centerRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007.centerBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007.outsidePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007.insideBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007.outsidePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007.middlePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007.insidePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007.centerPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007.UseCachedValues(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010.centerBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010.outsidePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010.outsidePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010.centerPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010.insideBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010.insidePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010.UseCachedValues(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.interiorRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.insideBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.outsidePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.outsidePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.l1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.l2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.l3">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.leftPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.rightPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.bottomInnerPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.bottomOuterPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.UseCachedValues(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight.topBorderBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight.borderVertBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight.outsideVertBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight.selectedMemento">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight.innerVertPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight.innerHorzPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight.borderHorzPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight.UseCachedValues(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing.fullRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing.ellipseRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing.outsidePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing.topPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing.ellipsePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing.insideBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing.topBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing.ellipseBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing.insidePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing.outsidePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing.UseCachedValues(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContext">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContext.fillRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContext.borderPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContext.underlinePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContext.fillBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContext.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContext.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextOffice">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextOffice.fillRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextOffice.borderPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextOffice.underlinePen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextOffice.fillBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextOffice.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextOffice.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextOffice2010">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextOffice2010.borderInnerPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextOffice2010.borderOuterPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextOffice2010.topBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextOffice2010.bottomBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextOffice2010.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextOffice2010.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonQATMinibar">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATMinibar.lightPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATMinibar.borderPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATMinibar.whitenPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATMinibar.borderPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATMinibar.topRight1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATMinibar.bottomLeft1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATMinibar.innerBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonQATMinibar.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonQATMinibar.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarRound">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarRound.innerRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarRound.innerBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarRound.darkPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarRound.lightPath1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarRound.lightPath2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarRound.darkPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarRound.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarRound.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarSquare">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarSquare.lightPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarSquare.mediumBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarSquare.darkPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarSquare.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonQATFullbarSquare.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonQATOverflow">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATOverflow.backBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonQATOverflow.borderPen">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonQATOverflow.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonQATOverflow.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton.borderShadow1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton.borderShadow2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton.borderMain1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton.borderMain2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton.borderMain3">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton.borderMain4">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton.rectLower">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton.rectBottomGlow">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton.rectUpperGlow">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton.brushUpper1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton.brushLower">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoBackSolid">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackSolid.drawRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackSolid.color1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackSolid.solidBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackSolid.#ctor(System.Drawing.RectangleF,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackSolid.UseCachedValues(System.Drawing.RectangleF,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackSolid.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoBackLinear">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackLinear.drawRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackLinear.sigma">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackLinear.color1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackLinear.color2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackLinear.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackLinear.entireBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackLinear.#ctor(System.Drawing.RectangleF,System.Boolean,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackLinear.UseCachedValues(System.Drawing.RectangleF,System.Boolean,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackLinear.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoBackLinearRadial">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackLinearRadial.drawRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackLinearRadial.color2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackLinearRadial.color3">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackLinearRadial.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackLinearRadial.ellipseRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackLinearRadial.path">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackLinearRadial.bottomBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackLinearRadial.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackLinearRadial.UseCachedValues(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackLinearRadial.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.drawRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.color1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.color2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.glassColor1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.glassColor2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.factorX">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.factorY">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.glassPercent">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.glassRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.totalBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.glassBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Single)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.UseCachedValues(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Single)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassBasic.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.drawRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.outerRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.color1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.color2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.glassColor1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.glassColor2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.glassPercent">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.glassRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.mainRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.totalBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.topBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.bottomBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.#ctor(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Single)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.UseCachedValues(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Single)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassLinear.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoBackGlassCenter">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassCenter.drawRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassCenter.color2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassCenter.path">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassCenter.bottomBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassCenter.#ctor(System.Drawing.RectangleF,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassCenter.UseCachedValues(System.Drawing.RectangleF,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassCenter.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoBackGlassRadial">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassRadial.drawRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassRadial.color1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassRadial.color2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassRadial.factorX">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassRadial.factorY">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassRadial.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassRadial.mainRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassRadial.path">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassRadial.bottomBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassRadial.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassRadial.UseCachedValues(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassRadial.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoBackGlassFade">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassFade.drawRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassFade.outerRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassFade.color1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassFade.color2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassFade.glassColor1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassFade.glassColor2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassFade.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassFade.glassRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassFade.mainBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassFade.topBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassFade.#ctor(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassFade.UseCachedValues(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassFade.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoBackGlassThreeEdge">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassThreeEdge.rect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassThreeEdge.color1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassThreeEdge.color2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassThreeEdge.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassThreeEdge.colorA1L">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassThreeEdge.colorA2L">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassThreeEdge.colorA2LL">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassThreeEdge.colorB2LL">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackGlassThreeEdge.rectB">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassThreeEdge.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackGlassThreeEdge.UseCachedValues(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoBackDarkEdge">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackDarkEdge.drawRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackDarkEdge.color1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackDarkEdge.thickness">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackDarkEdge.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackDarkEdge.entireRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackDarkEdge.entireBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackDarkEdge.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Int32,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackDarkEdge.UseCachedValues(System.Drawing.RectangleF,System.Drawing.Color,System.Int32,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackDarkEdge.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoBackExpertChecked">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertChecked.drawRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertChecked.color1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertChecked.color2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertChecked.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertChecked.entireBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertChecked.ellipsePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertChecked.insideLighten">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertChecked.clipPath">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackExpertChecked.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackExpertChecked.UseCachedValues(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackExpertChecked.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoBackExpertShadow">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertShadow.drawRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertShadow.color1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertShadow.color2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertShadow.path1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertShadow.path2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertShadow.path3">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertShadow.brush1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertShadow.brush2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertShadow.brush3">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackExpertShadow.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackExpertShadow.UseCachedValues(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackExpertShadow.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.MementoBackExpertSquareHighlight">
            <summary>
            Memento used to cache drawing details.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertSquareHighlight.drawRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertSquareHighlight.color1">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertSquareHighlight.color2">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertSquareHighlight.orientation">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertSquareHighlight.backBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertSquareHighlight.innerRect">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertSquareHighlight.innerBrush">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertSquareHighlight.ellipsePath">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.MementoBackExpertSquareHighlight.insideLighten">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackExpertSquareHighlight.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackExpertSquareHighlight.UseCachedValues(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>For internal use only.</summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.MementoBackExpertSquareHighlight.Dispose(System.Boolean)">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RenderOffice2010">
            <summary>
            Extends the professional renderer to provide Office2010 style additions.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderOffice2010.DrawRibbonClusterEdge(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon cluster edge.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteBack">Palette used for recovering drawing details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderOffice2010.RenderToolStrip(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets a renderer for drawing the toolstrips.
            </summary>
            <param name="colorPalette">Color palette to use when rendering toolstrip.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderOffice2010.DrawRibbonTabContext(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers">
            <summary>
            Helper functions for drawing in the glass styles.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassCenter(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background with glass effect where the fade is from the center.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassBottom(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background with glass effect where the fade is from the bottom.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassFade(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in normal full glass effect but only over 50% of the background.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassSimpleFull(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in simple glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassNormalFull(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in normal full glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassTrackingFull(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in tracking full glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassCheckedFull(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in checked full glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassCheckedTrackingFull(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in checked/tracking full glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassPressedFull(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in checked/pressed full glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassNormalStump(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in normal stumpy glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassTrackingStump(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in tracking stumpy glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassPressedStump(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in checked/pressed stumpy glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassCheckedStump(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in checked stumpy glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassCheckedTrackingStump(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in checked/tracking stumpy glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassThreeEdge(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in glass effect with three edges lighter.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassNormalSimple(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in normal simple glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassTrackingSimple(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in tracking simple glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassCheckedSimple(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in checked simple glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassCheckedTrackingSimple(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in checked/tracking simple glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderGlassHelpers.DrawBackGlassPressedSimple(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Drawing2D.GraphicsPath,System.IDisposable)">
            <summary>
            Draw a background in checked/pressed simple glass effect.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Rectangle to draw.</param>
            <param name="backColor1">First color.</param>
            <param name="backColor2">Second color.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="path">Clipping path.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RenderProfessional">
            <summary>
            Extends the standard renderer to provide Professional style additions.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderProfessional.DrawSeparator(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,System.Windows.Forms.Orientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Perform drawing of a separator glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteBack">Background palette details.</param>
            <param name="paletteBorder">Border palette details.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="state">State associated with rendering.</param>
            <param name="canMove">Can the separator be moved.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderProfessional.DrawGrabHandleGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Windows.Forms.Orientation,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderProfessional.DrawRibbonTabContext(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonStandardRenderer.#ctor(ComponentFactory.Krypton.Toolkit.KryptonColorTable)">
            <summary>
            Initialise a new instance of the KryptonStandardRenderer class.
            </summary>
            <param name="kct">Source for text colors.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonStandardRenderer.OnRenderItemText(System.Windows.Forms.ToolStripItemTextRenderEventArgs)">
            <summary>
            Raises the RenderItemText event. 
            </summary>
            <param name="e">A ToolStripItemTextRenderEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.KryptonStandardRenderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
            <summary>
            Raises the RenderToolStripBackground event. 
            </summary>
            <param name="e">An ToolStripRenderEventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.Storage">
            <summary>
            Base class for storage implementations.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.Storage.ToString">
            <summary>
            Returns a string that represents the current defaulted state.
            </summary>
            <returns>A string that represents the current defaulted state.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.Storage.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.Storage.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.Storage.NeedPaintDelegate">
            <summary>
            Gets access to the need paint delegate.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.Storage.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.Storage.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.Storage.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRedirect">
            <summary>
            Redirects requests onto a dynamic instance of a IPalette.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteRedirect.PalettePaint">
            <summary>
            Occurs when a palette change requires a repaint.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteRedirect.AllowFormChromeChanged">
            <summary>
            Occurs when the AllowFormChrome setting changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteRedirect.BasePaletteChanged">
            <summary>
            Occurs when the BasePalette/BasePaletteMode setting changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteRedirect.BaseRendererChanged">
            <summary>
            Occurs when the BaseRenderer/BaseRendererMode setting changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteRedirect.ButtonSpecChanged">
            <summary>
            Occurs when a button spec change occurs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.#ctor">
            <summary>
            Initialize a new instance of the PaletteRedirect class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteRedirect class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRedirect.Target">
            <summary>
            Gets and sets the redirection target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetAllowFormChrome">
            <summary>
            Gets a value indicating if KryptonForm instances should show custom chrome.
            </summary>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRenderer">
            <summary>
            Gets the renderer to use for this palette.
            </summary>
            <returns>Renderer to use for drawing palette settings.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the background.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the border.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border drawing style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetTreeViewImage(System.Boolean)">
            <summary>
            Gets a tree view image appropriate for the provided state.
            </summary>
            <param name="expanded">Is the node expanded</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetCheckBoxImage(System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the check box enabled.</param>
            <param name="checkState">Is the check box checked/unchecked/indeterminate.</param>
            <param name="tracking">Is the check box being hot tracked.</param>
            <param name="pressed">Is the check box being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRadioButtonImage(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the radio button enabled.</param>
            <param name="checkState">Is the radio button checked.</param>
            <param name="tracking">Is the radio button being hot tracked.</param>
            <param name="pressed">Is the radio button being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContextMenuCheckedImage">
            <summary>
            Gets a checked image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContextMenuIndeterminateImage">
            <summary>
            Gets a indeterminate image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetContextMenuSubMenuImage">
            <summary>
            Gets an image indicating a sub-menu on a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetGalleryButtonImage(ComponentFactory.Krypton.Toolkit.PaletteRibbonGalleryButton,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="button">Enum of the button to fetch.</param>
            <param name="state">State of the button to fetch.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetButtonSpecIcon(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the icon to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Icon value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetButtonSpecImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the image transparent color.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetButtonSpecShortText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the short text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetButtonSpecLongText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the long text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetButtonSpecToolTipTitle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the tooltip title text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetButtonSpecColorMap(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap from the image to the container foreground.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetButtonSpecStyle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button style used for drawing the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>ButtonStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetButtonSpecLocation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Get the location for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>HeaderLocation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetButtonSpecEdge(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the edge to positon the button against.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteRelativeEdgeAlign value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetButtonSpecOrientation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button orientation.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonOrientation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonShape">
            <summary>
            Gets the ribbon shape that should be used.
            </summary>
            <returns>Ribbon shape value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonContextTextAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text alignment for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonContextTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonContextTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonDisabledDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the dark disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonDisabledLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the light disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonDropArrowLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonDropArrowDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonGroupDialogDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonGroupDialogLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonGroupSeparatorDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonGroupSeparatorLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonMinimizeBarDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonMinimizeBarLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonTabSeparatorColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonTabSeparatorContextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab context separators.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the ribbon font.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonQATButtonDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button dark content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonQATButtonLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button light content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="style">Text style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetElementColor1(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetElementColor2(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetElementColor3(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetElementColor4(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetElementColor5(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetDragDropFeedback">
            <summary>
            Gets the feedback drawing method used.
            </summary>
            <returns>Feedback enumeration value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetDragDropSolidBack">
            <summary>
            Gets the background color for a solid drag drop area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetDragDropSolidBorder">
            <summary>
            Gets the border color for a solid drag drop area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetDragDropSolidOpacity">
            <summary>
            Gets the opacity of the solid area.
            </summary>
            <returns>Opacity ranging from 0 to 1.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetDragDropDockBack">
            <summary>
            Gets the background color for the docking indicators area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetDragDropDockBorder">
            <summary>
            Gets the border color for the docking indicators area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetDragDropDockActive">
            <summary>
            Gets the active color for docking indicators.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.GetDragDropDockInactive">
            <summary>
            Gets the inactive color for docking indicators.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteRedirect.ColorTable">
            <summary>
            Gets access to the color table instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.OnPalettePaint(System.Object,ComponentFactory.Krypton.Toolkit.PaletteLayoutEventArgs)">
            <summary>
            Raises the PalettePaint event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An PaletteLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.OnAllowFormChromeChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the AllowFormChromeChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.OnBasePaletteChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the BasePaletteChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.OnBaseRendererChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the BaseRendererChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteRedirect.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the ButtonSpecChanged event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBack">
            <summary>
            Implement storage for palette background details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.InternalStorage.#ctor">
            <summary>
            Initialize a new instance of the InternalStorage structure.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBack.InternalStorage.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteBack.PropertyChanged">
            <summary>
            Occurs when a property has changed value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteBack class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBack.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteBack)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBack.Draw">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual background draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBack.GraphicsHint">
            <summary>
            Gets the graphics hint for drawing the background.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual background graphics hint value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBack.Color1">
            <summary>
            Gets and sets the first background color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBack.Color2">
            <summary>
            Gets and sets the second background color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBack.ColorStyle">
            <summary>
            Gets and sets the color drawing style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBack.ColorAlign">
            <summary>
            Gets and set the color alignment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBack.ColorAngle">
            <summary>
            Gets and sets the color angle.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBack.Image">
            <summary>
            Gets and sets the background image.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBack.ImageStyle">
            <summary>
            Gets and sets the background image style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBack.ImageAlign">
            <summary>
            Gets and set the image alignment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBack.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="property">Name of the property changed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBorder">
            <summary>
            Implement storage for palette border details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.InternalStorage.#ctor">
            <summary>
            Initialize a new instance of the InternalStorage structure.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.InternalStorage.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.PaletteBorder.PropertyChanged">
            <summary>
            Occurs when a property has changed value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteBorder class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.SetInherit(ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Sets the inheritence parent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.PopulateFromBase(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.Draw">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual border draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.DrawBorders">
            <summary>
            Gets a value indicating which borders should be drawn.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual borders to draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.GraphicsHint">
            <summary>
            Gets the graphics hint for drawing the border.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual border graphics hint value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.Color1">
            <summary>
            Gets the first border color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual first border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.Color2">
            <summary>
            Gets and sets the second border color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.ColorStyle">
            <summary>
            Gets and sets the color drawing style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.ColorAlign">
            <summary>
            Gets the color alignment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.ColorAngle">
            <summary>
            Gets and sets the color angle.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.Width">
            <summary>
            Gets and sets the border width.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border width.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.Rounding">
            <summary>
            Gets and sets the border rounding.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border rounding.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border rounding.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.Image">
            <summary>
            Gets and sets the border image.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.ImageStyle">
            <summary>
            Gets and sets the border image style.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.PaletteBorder.ImageAlign">
            <summary>
            Gets the image alignment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteBorder.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="property">Name of the property changed.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IPalette">
            <summary>
            Exposes a palette for drawing.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.IPalette.PalettePaint">
            <summary>
            Occurs when a palette change requires a repaint.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.IPalette.AllowFormChromeChanged">
            <summary>
            Occurs when the AllowFormChrome setting changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.IPalette.BasePaletteChanged">
            <summary>
            Occurs when the BasePalette/BasePaletteMode setting changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.IPalette.BaseRendererChanged">
            <summary>
            Occurs when the BaseRenderer/BaseRendererMode setting changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.IPalette.ButtonSpecChanged">
            <summary>
            Occurs when a button spec change occurs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetAllowFormChrome">
            <summary>
            Gets a value indicating if KryptonForm instances should show custom chrome.
            </summary>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRenderer">
            <summary>
            Gets the renderer to use for this palette.
            </summary>
            <returns>Renderer to use for drawing palette settings.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the background.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint for the border.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border drawing style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteBorderStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image border alignment.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>TextRenderingHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetTreeViewImage(System.Boolean)">
            <summary>
            Gets a tree view image appropriate for the provided state.
            </summary>
            <param name="expanded">Is the node expanded</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetCheckBoxImage(System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the check box enabled.</param>
            <param name="checkState">Is the check box checked/unchecked/indeterminate.</param>
            <param name="tracking">Is the check box being hot tracked.</param>
            <param name="pressed">Is the check box being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRadioButtonImage(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="enabled">Is the radio button enabled.</param>
            <param name="checkState">Is the radio button checked.</param>
            <param name="tracking">Is the radio button being hot tracked.</param>
            <param name="pressed">Is the radio button being pressed.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetDropDownButtonImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a drop down button image appropriate for the provided state.
            </summary>
            <param name="state">PaletteState for which image is required.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContextMenuCheckedImage">
            <summary>
            Gets a checked image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContextMenuIndeterminateImage">
            <summary>
            Gets a indeterminate image appropriate for a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetContextMenuSubMenuImage">
            <summary>
            Gets an image indicating a sub-menu on a context menu item.
            </summary>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetGalleryButtonImage(ComponentFactory.Krypton.Toolkit.PaletteRibbonGalleryButton,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a check box image appropriate for the provided state.
            </summary>
            <param name="button">Enum of the button to fetch.</param>
            <param name="state">State of the button to fetch.</param>
            <returns>Appropriate image for drawing; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetButtonSpecIcon(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the icon to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Icon value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetButtonSpecImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the image transparent color.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetButtonSpecShortText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the short text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetButtonSpecLongText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the long text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetButtonSpecToolTipTitle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the tooltip title text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetButtonSpecColorMap(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap from the image to the container foreground.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetButtonSpecStyle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button style used for drawing the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetButtonSpecLocation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Get the location for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>HeaderLocation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetButtonSpecEdge(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the edge to positon the button against.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteRelativeEdgeAlign value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetButtonSpecOrientation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button orientation.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonOrientation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonShape">
            <summary>
            Gets the ribbon shape that should be used.
            </summary>
            <returns>Ribbon shape value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonContextTextAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text alignment for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonContextTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonContextTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonDisabledDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the dark disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonDisabledLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the light disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonDropArrowLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonDropArrowDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonGroupDialogDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonGroupDialogLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonGroupSeparatorDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonGroupSeparatorLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonMinimizeBarDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonMinimizeBarLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonTabSeparatorColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonTabSeparatorContextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab context separators.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the ribbon font.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonQATButtonDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button dark content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonQATButtonLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button light content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="style">Text style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetElementColor1(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetElementColor2(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetElementColor3(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetElementColor4(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetElementColor5(ComponentFactory.Krypton.Toolkit.PaletteElement,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth element color.
            </summary>
            <param name="element">Element for which color is required.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetDragDropFeedback">
            <summary>
            Gets the feedback drawing method used.
            </summary>
            <returns>Feedback enumeration value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetDragDropSolidBack">
            <summary>
            Gets the background color for a solid drag drop area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetDragDropSolidBorder">
            <summary>
            Gets the border color for a solid drag drop area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetDragDropSolidOpacity">
            <summary>
            Gets the opacity of the solid area.
            </summary>
            <returns>Opacity ranging from 0 to 1.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetDragDropDockBack">
            <summary>
            Gets the background color for the docking indicators area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetDragDropDockBorder">
            <summary>
            Gets the border color for the docking indicators area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetDragDropDockActive">
            <summary>
            Gets the active color for docking indicators.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPalette.GetDragDropDockInactive">
            <summary>
            Gets the inactive color for docking indicators.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IPalette.ColorTable">
            <summary>
            Gets access to the color table instance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IPaletteBack">
            <summary>
            Exposes a palette source for drawing a background.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBack.GetBackDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if background should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBack.GetBackGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBack.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBack.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBack.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBack.GetBackColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBack.GetBackColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBack.GetBackImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBack.GetBackImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBack.GetBackImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IPaletteBorder">
            <summary>
            Exposes a palette source for drawing a border.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBorder.GetBorderDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBorder.GetBorderDrawBorders(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBorder.GetBorderGraphicsHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBorder.GetBorderColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBorder.GetBorderColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBorder.GetBorderColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBorder.GetBorderColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBorder.GetBorderColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBorder.GetBorderWidth(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer width.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBorder.GetBorderRounding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border corner rounding.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer rounding.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBorder.GetBorderImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBorder.GetBorderImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteBorder.GetBorderImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IPaletteContent">
            <summary>
            Exposes a palette source for drawing content.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentDraw(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentDrawFocus(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentImageH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentImageV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentImageEffect(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentImageColorMap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentImageColorTo(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentShortTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextNewFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextMultiLine(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextTrim(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextPrefix(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextV(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextMultiLineH(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextColorAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextColorAngle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextImageStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentLongTextImageAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentPadding(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentAdjacentGap(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteContent.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IPaletteMetric">
            <summary>
            Exposes a palette source for acquiring metrics.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteMetric.GetMetricInt(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteMetric.GetMetricBool(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteMetric.GetMetricPadding(ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IPaletteDouble">
            <summary>
            Access to the double of back and border palettes.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IPaletteDouble.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IPaletteDouble.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IPaletteSeparator">
            <summary>
            Access to the back and border palettes plus metrics.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IPaletteSeparator.PaletteMetric">
            <summary>
            Gets the palette source for acquiring metrics.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IPaletteTriple">
            <summary>
            Access to the triple of back, border and content palettes.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IPaletteTriple.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IPaletteTriple.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IPaletteTriple.PaletteContent">
            <summary>
            Gets the content palette.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IPaletteButtonSpec">
            <summary>
            Exposes a palette source button specifications.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteButtonSpec.GetButtonSpecIcon(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the icon to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Icon value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteButtonSpec.GetButtonSpecImage(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <param name="state">State for which image is required.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteButtonSpec.GetButtonSpecImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the image transparent color.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteButtonSpec.GetButtonSpecShortText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the short text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteButtonSpec.GetButtonSpecLongText(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the long text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteButtonSpec.GetButtonSpecToolTipTitle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the tooltip title text to display for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteButtonSpec.GetButtonSpecColorMap(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the color to remap from the image to the container foreground.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteButtonSpec.GetButtonSpecStyle(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button style used for drawing the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteButtonSpec.GetButtonSpecLocation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Get the location for the button.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>HeaderLocation value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteButtonSpec.GetButtonSpecEdge(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the edge to positon the button against.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteRelativeEdgeAlign value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteButtonSpec.GetButtonSpecOrientation(ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Gets the button orientation.
            </summary>
            <param name="style">Style of button spec.</param>
            <returns>PaletteButtonOrientation value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral">
            <summary>
            Exposes a palette source for general ribbon specifications.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonShape">
            <summary>
            Gets the ribbon shape that should be used.
            </summary>
            <returns>Ribbon shape value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonContextTextAlign(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text alignment for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonContextTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonContextTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonDisabledDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the dark disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonDisabledLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the light disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonGroupDialogDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonGroupDialogLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonDropArrowDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonDropArrowLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonGroupSeparatorDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonGroupSeparatorLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the group separator light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonMinimizeBarDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonMinimizeBarLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the minimize bar light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonTabSeparatorColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonTabSeparatorContextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab context separators.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonTextFont(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonTextHint(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the ribbon font.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonQATButtonDark(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button dark content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral.GetRibbonQATButtonLight(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button light content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack">
            <summary>
            Exposes a palette source for ribbon background specifications.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack.GetRibbonBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack.GetRibbonBackColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack.GetRibbonBackColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack.GetRibbonBackColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack.GetRibbonBackColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack.GetRibbonBackColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IPaletteRibbonText">
            <summary>
            Exposes a palette source for ribbon text specifications.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteRibbonText.GetRibbonTextColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IPaletteDragDrop">
            <summary>
            Access to drag the drop settings.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteDragDrop.GetDragDropSolidBack">
            <summary>
            Gets the background color for a solid drag drop area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteDragDrop.GetDragDropSolidBorder">
            <summary>
            Gets the border color for a solid drag drop area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteDragDrop.GetDragDropSolidOpacity">
            <summary>
            Gets the opacity of the solid area.
            </summary>
            <returns>Opacity ranging from 0 to 1.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteDragDrop.GetDragDropDockBack">
            <summary>
            Gets the background color for the docking indicators area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteDragDrop.GetDragDropDockBorder">
            <summary>
            Gets the border color for the docking indicators area.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteDragDrop.GetDragDropDockActive">
            <summary>
            Gets the active color for docking indicators.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteDragDrop.GetDragDropDockInactive">
            <summary>
            Gets the inactive color for docking indicators.
            </summary>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IPaletteElementColor">
            <summary>
            Exposes a palette source for element colors.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteElementColor.GetElementColor1(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteElementColor.GetElementColor2(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteElementColor.GetElementColor3(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteElementColor.GetElementColor4(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IPaletteElementColor.GetElementColor5(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth color for the element.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.InheritBool">
            <summary>
            Specifies a boolean that can inherit its value.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.InheritBool.Inherit">
            <summary>
            Specifies the value should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.InheritBool.True">
            <summary>
            Specifies a boolean true.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.InheritBool.False">
            <summary>
            Specifies a boolean false.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteMode">
            <summary>
            Specifies the palette applied when drawing.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMode.Global">
            <summary>
            Specifies the renderer defined by the KryptonManager be used.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMode.ProfessionalSystem">
            <summary>
            Specifies a professional appearance based on system settings.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMode.ProfessionalOffice2003">
            <summary>
            Specifies a professional appearance with a preference to use theme colors.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMode.Office2007Blue">
            <summary>
            Specifies the Blue color variant of the Office 2007 appearance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMode.Office2007Silver">
            <summary>
            Specifies the Silver color variant of the Office 2007 appearance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMode.Office2007Black">
            <summary>
            Specifies the Black color variant of the Office 2007 appearance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMode.Office2010Blue">
            <summary>
            Specifies the Blue color variant of the Office 2010 appearance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMode.Office2010Silver">
            <summary>
            Specifies the Silver color variant of the Office 2010 appearance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMode.Office2010Black">
            <summary>
            Specifies the Black color variant of the Office 2010 appearance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMode.SparkleBlue">
            <summary>
            Specifies the Blue color variant on the Sparkle palette theme.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMode.SparkleOrange">
            <summary>
            Specifies the Orange color variant on the Sparkle palette theme.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMode.SparklePurple">
            <summary>
            Specifies the Purple color variant on the Sparkle palette theme.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMode.Custom">
            <summary>
            Specifies a custom palette be used.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteModeManager">
            <summary>
            Specifies the palette requested at the global level.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteModeManager.ProfessionalSystem">
            <summary>
            Specifies a professional appearance based on system settings.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteModeManager.ProfessionalOffice2003">
            <summary>
            Specifies a professional appearance with a preference to use theme colors.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteModeManager.Office2007Blue">
            <summary>
            Specifies the Blue color variant of the Office 2007 appearance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteModeManager.Office2007Silver">
            <summary>
            Specifies the Silver color variant of the Office 2007 appearance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteModeManager.Office2007Black">
            <summary>
            Specifies the Black color variant of the Office 2007 appearance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteModeManager.Office2010Blue">
            <summary>
            Specifies the Blue color variant of the Office 2010 appearance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteModeManager.Office2010Silver">
            <summary>
            Specifies the Silver color variant of the Office 2010 appearance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteModeManager.Office2010Black">
            <summary>
            Specifies the Black color variant of the Office 2010 appearance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteModeManager.SparkleBlue">
            <summary>
            Specifies the Blue color variant on the Sparkle palette theme.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteModeManager.SparkleOrange">
            <summary>
            Specifies the Orange color variant on the Sparkle palette theme.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteModeManager.SparklePurple">
            <summary>
            Specifies the Purple color variant on the Sparkle palette theme.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteModeManager.Custom">
            <summary>
            Specifies a custom palette be used.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteState">
            <summary>
            Specifies the state of the element.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.Disabled">
            <summary>
            Specifies the element is in the disabled state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.Normal">
            <summary>
            Specifies the element is in the normal state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.Tracking">
            <summary>
            Specifies the element is in the hot tracking state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.Pressed">
            <summary>
            Specifies the element is in the pressed state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.Checked">
            <summary>
            Specifies the bit that is set for all checked states.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.CheckedNormal">
            <summary>
            Specifies the element is in the normal state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.CheckedTracking">
            <summary>
            Specifies the checked element is in the hot tracking state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.CheckedPressed">
            <summary>
            Specifies the checked element is in the pressed state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.Context">
            <summary>
            Specifies the bit that is set for all context states.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.ContextNormal">
            <summary>
            Specifies the context element is in the normal state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.ContextTracking">
            <summary>
            Specifies the context element is in the hot tracking state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.ContextPressed">
            <summary>
            Specifies the context element is in the hot tracking state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.ContextCheckedNormal">
            <summary>
            Specifies the context element is in the check normal state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.ContextCheckedTracking">
            <summary>
            Specifies the context element is in the check tracking state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.Override">
            <summary>
            Specifies the bit that is set for all override states.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.FocusOverride">
            <summary>
            Specifies values to override when in any state but with the focus.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.NormalDefaultOverride">
            <summary>
            Specifies values to override when in normal state but the default element.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.LinkVisitedOverride">
            <summary>
            Specifies values to override when a link has been visited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.LinkNotVisitedOverride">
            <summary>
            Specifies values to override when a link has not been visited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.LinkPressedOverride">
            <summary>
            Specifies values to override when a link is pressed.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.BoldedOverride">
            <summary>
            Specifies values to override bolded dates in calendars.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteState.TodayOverride">
            <summary>
            Specifies values to override today date in calendars.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteMetricInt">
            <summary>
            Specifies a integer type metric.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.None">
            <summary>
            Specifies that no integer metric is required.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.HeaderButtonEdgeInsetPrimary">
            <summary>
            Specifies how far to inset a button on a primary header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.HeaderButtonEdgeInsetSecondary">
            <summary>
            Specifies how far to inset a button on a secondary header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.HeaderButtonEdgeInsetDockInactive">
            <summary>
            Specifies how far to inset a button on an inactive dock header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.HeaderButtonEdgeInsetDockActive">
            <summary>
            Specifies how far to inset a button on an active dock header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.HeaderButtonEdgeInsetForm">
            <summary>
            Specifies how far to inset a button on a main form header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.HeaderButtonEdgeInsetCalendar">
            <summary>
            Specifies how far to inset a button on a calendar header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.HeaderButtonEdgeInsetInputControl">
            <summary>
            Specifies how far to inset a button on a input control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.HeaderButtonEdgeInsetCustom1">
            <summary>
            Specifies how far to inset a button on a custom1 header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.HeaderButtonEdgeInsetCustom2">
            <summary>
            Specifies how far to inset a button on a custom2 header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.BarButtonEdgeOutside">
            <summary>
            Specifies the padding from buttons to the outside control edge.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.BarButtonEdgeInside">
            <summary>
            Specifies the padding for buttons to the bar.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.PageButtonInset">
            <summary>
            Specifies the padding from buttons to the page header content.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.CheckButtonGap">
            <summary>
            Specifies the spacing gap been each check button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricInt.RibbonTabGap">
            <summary>
            Specifies the spacing gap been each ribbon tab.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteMetricBool">
            <summary>
            Specifies a bool type metric.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricBool.None">
            <summary>
            Specifies that no bool metric is required.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricBool.HeaderGroupOverlay">
            <summary>
            Specifies when the border is drawn for the header group control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricBool.SplitWithFading">
            <summary>
            Specifies that split area controls use faded appearance for non-active area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricBool.RibbonTabsSpareCaption">
            <summary>
            Specifies that the spare tabs area be treated as the application caption area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricBool.TreeViewLines">
            <summary>
            Specifies if lines are drawn between nodes in the KryptonTreeView.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding">
            <summary>
            Specifies a padding type metric.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.None">
            <summary>
            Specifies that no padding metric is required.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.HeaderGroupPaddingPrimary">
            <summary>
            Specifies the padding for the primary header inside a header group.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.HeaderGroupPaddingSecondary">
            <summary>
            Specifies the padding for the second header inside a header group.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.HeaderGroupPaddingDockInactive">
            <summary>
            Specifies the padding for the inactive dock header inside a header group.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.HeaderGroupPaddingDockActive">
            <summary>
            Specifies the padding for the active dock header inside a header group.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.RibbonButtonPadding">
            <summary>
            Specifies the padding for buttons on a ribbon.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.HeaderButtonPaddingPrimary">
            <summary>
            Specifies the padding for buttons on a primary header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.HeaderButtonPaddingSecondary">
            <summary>
            Specifies the padding for buttons on a secondary header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.HeaderButtonPaddingDockInactive">
            <summary>
            Specifies the padding for the dock inside an inactive header group.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.HeaderButtonPaddingDockActive">
            <summary>
            Specifies the padding for the dock inside an active header group.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.HeaderButtonPaddingForm">
            <summary>
            Specifies the padding for buttons on a main form header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.HeaderButtonPaddingCalendar">
            <summary>
            Specifies the padding for buttons on a calendar header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.HeaderButtonPaddingInputControl">
            <summary>
            Specifies the padding for buttons on a input control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.HeaderButtonPaddingCustom1">
            <summary>
            Specifies the padding for buttons on a custom1 header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.HeaderButtonPaddingCustom2">
            <summary>
            Specifies the padding for buttons on a custom1 header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.BarPaddingTabs">
            <summary>
            Specifies the padding for the navigator bar when showing tabs.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.BarPaddingInside">
            <summary>
            Specifies the padding for the navigator bar when inside.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.BarPaddingOutside">
            <summary>
            Specifies the padding for the navigator bar when outside.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.BarPaddingOnly">
            <summary>
            Specifies the padding for the navigator bar when on its own.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.BarButtonPadding">
            <summary>
            Specifies the padding for buttons on a navigator bar.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.PageButtonPadding">
            <summary>
            Specifies the padding for buttons on a navigator page header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.SeparatorPaddingLowProfile">
            <summary>
            Specifies the padding for the low profile separator.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.SeparatorPaddingHighProfile">
            <summary>
            Specifies the padding for the high profile separator.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.SeparatorPaddingHighInternalProfile">
            <summary>
            Specifies the padding for the high profile for internal separator.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.SeparatorPaddingCustom1">
            <summary>
            Specifies the padding for the first custom separator.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.ContextMenuItemHighlight">
            <summary>
            Specifies the padding outside of each context menu item highlight.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.ContextMenuItemsCollection">
            <summary>
            Specifies the padding outside of each context menu items collection.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.ContextMenuItemOuter">
            <summary>
            Specifies the padding inside of context menu outside.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteMetricPadding.RibbonAppButton">
            <summary>
            Specifies the padding outside each application button spec.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle">
            <summary>
            Specifies the button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.Inherit">
            <summary>
            Specifies button style should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.Standalone">
            <summary>
            Specifies a standalone button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.Alternate">
            <summary>
            Specifies an alternative standalone button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.LowProfile">
            <summary>
            Specifies a low profile button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.ButtonSpec">
            <summary>
            Specifies a button spec usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.BreadCrumb">
            <summary>
            Specifies a bread crumb usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.Cluster">
            <summary>
            Specifies a ribbon cluster button usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.NavigatorStack">
            <summary>
            Specifies a navigator stack usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.NavigatorOverflow">
            <summary>
            Specifies a navigator outlook overflow usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.NavigatorMini">
            <summary>
            Specifies a navigator mini usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.InputControl">
            <summary>
            Specifies an input control usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.ListItem">
            <summary>
            Specifies a list item usage style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.Form">
            <summary>
            Specifies a form level button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.FormClose">
            <summary>
            Specifies a form close level button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.Command">
            <summary>
            Specifies a command button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.Custom1">
            <summary>
            Specifies the first custom button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.Custom2">
            <summary>
            Specifies the second custom button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonStyle.Custom3">
            <summary>
            Specifies the third custom button style.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBackStyle">
            <summary>
            Specifies the style of background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonStandalone">
            <summary>
            Specifies a background style appropriate for a standalone button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonAlternate">
            <summary>
            Specifies a background style appropriate for an alternate standalone button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonLowProfile">
            <summary>
            Specifies a background style appropriate for a low profile button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonButtonSpec">
            <summary>
            Specifies a background style appropriate for a button spec.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonBreadCrumb">
            <summary>
            Specifies a background style appropriate for a bread crumb.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonCalendarDay">
            <summary>
            Specifies a background style appropriate for a calendar day.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonCluster">
            <summary>
            Specifies a background style appropriate for a ribbon cluster button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonGallery">
            <summary>
            Specifies a background style appropriate for a gallery button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonNavigatorStack">
            <summary>
            Specifies a background style appropriate for a navigator stack.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonNavigatorOverflow">
            <summary>
            Specifies a background style appropriate for a navigator overflow button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonNavigatorMini">
            <summary>
            Specifies a background style appropriate for a navigator mini button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonInputControl">
            <summary>
            Specifies a background style appropriate for an input control button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonListItem">
            <summary>
            Specifies a background style appropriate for a list item button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonForm">
            <summary>
            Specifies a background style appropriate for a form level button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonFormClose">
            <summary>
            Specifies a background style appropriate for a form level close button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonCommand">
            <summary>
            Specifies a background style appropriate for a command button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonCustom1">
            <summary>
            Specifies a background style appropriate for the first custom button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonCustom2">
            <summary>
            Specifies a background style appropriate for the second custom button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ButtonCustom3">
            <summary>
            Specifies a background style appropriate for the third custom button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ControlClient">
            <summary>
            Specifies a background style appropriate for a client control style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ControlAlternate">
            <summary>
            Specifies a background style appropriate for an alternate control style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ControlGroupBox">
            <summary>
            Specifies a background style appropriate for a group box control style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ControlToolTip">
            <summary>
            Specifies a background style appropriate for a tool tip popup.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ControlRibbon">
            <summary>
            Specifies a background style appropriate for a ribbon style control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ControlRibbonAppMenu">
            <summary>
            Specifies a background style appropriate for a ribbon application button menu control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ControlCustom1">
            <summary>
            Specifies a background style appropriate for the first custom control style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ContextMenuOuter">
            <summary>
            Specifies a background style appropriate for the outer part of a context menu control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ContextMenuInner">
            <summary>
            Specifies a background style appropriate for the inner part of a context menu control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ContextMenuHeading">
            <summary>
            Specifies a background style appropriate for a context menu heading.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ContextMenuSeparator">
            <summary>
            Specifies a background style appropriate for a context menu separator.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ContextMenuItemImage">
            <summary>
            Specifies a background style appropriate for a context menu image.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ContextMenuItemSplit">
            <summary>
            Specifies a background style appropriate for the vertical split of a context menu item.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ContextMenuItemImageColumn">
            <summary>
            Specifies a background style appropriate for a context menu image column.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.ContextMenuItemHighlight">
            <summary>
            Specifies a background style appropriate for a context menu highlight column.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.InputControlStandalone">
            <summary>
            Specifies a background style appropriate for a standalone input control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.InputControlRibbon">
            <summary>
            Specifies a background style appropriate for a ribbon style input control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.InputControlCustom1">
            <summary>
            Specifies a background style appropriate for the first custom input control style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.GridHeaderColumnList">
            <summary>
            Specifies a background style appropriate for column headers in a list style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.GridHeaderRowList">
            <summary>
            Specifies a background style appropriate for row headers in a list style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.GridDataCellList">
            <summary>
            Specifies a background style appropriate for data cells in a list style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.GridBackgroundList">
            <summary>
            Specifies a background style appropriate for blank areas in a list style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.GridHeaderColumnSheet">
            <summary>
            Specifies a background style appropriate for column headers in a sheet style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.GridHeaderRowSheet">
            <summary>
            Specifies a background style appropriate for row headers in a sheet style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.GridDataCellSheet">
            <summary>
            Specifies a background style appropriate for data cells in a sheet style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.GridBackgroundSheet">
            <summary>
            Specifies a background style appropriate for blank areas in a sheet style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.GridHeaderColumnCustom1">
            <summary>
            Specifies a background style appropriate for column headers in a custom grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.GridHeaderRowCustom1">
            <summary>
            Specifies a background style appropriate for row headers in a custom grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.GridDataCellCustom1">
            <summary>
            Specifies a background style appropriate for data cells in a custom grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.GridBackgroundCustom1">
            <summary>
            Specifies a background style appropriate for blank areas in a custom grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.HeaderPrimary">
            <summary>
            Specifies a background style appropriate for a primary header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.HeaderSecondary">
            <summary>
            Specifies a background style appropriate for a secondary header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.HeaderDockInactive">
            <summary>
            Specifies a background style appropriate for an inactive docking header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.HeaderDockActive">
            <summary>
            Specifies a background style appropriate for an active docking header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.HeaderForm">
            <summary>
            Specifies a background style appropriate for a main form header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.HeaderCalendar">
            <summary>
            Specifies a background style appropriate for a calendar title area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.HeaderCustom1">
            <summary>
            Specifies a background style appropriate for the first custom header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.HeaderCustom2">
            <summary>
            Specifies a background style appropriate for the second custom header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.PanelClient">
            <summary>
            Specifies a background style appropriate for a client panel style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.PanelAlternate">
            <summary>
            Specifies a background style appropriate for an alternate panel style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.PanelRibbonInactive">
            <summary>
            Specifies a background style appropriate for an inactive ribbon.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.PanelCustom1">
            <summary>
            Specifies a background style appropriate for the first custom panel style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.SeparatorLowProfile">
            <summary>
            Specifies a background style appropriate for a low profile separator style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.SeparatorHighProfile">
            <summary>
            Specifies a background style appropriate for a high profile separator style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.SeparatorHighInternalProfile">
            <summary>
            Specifies a background style appropriate for a high profile for internal separator style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.SeparatorCustom1">
            <summary>
            Specifies a background style appropriate for the first custom separator style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.TabHighProfile">
            <summary>
            Specifies a background style appropriate for a high profile tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.TabStandardProfile">
            <summary>
            Specifies a background style appropriate for a standard profile tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.TabLowProfile">
            <summary>
            Specifies a background style appropriate for a low profile tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.TabOneNote">
            <summary>
            Specifies a background style appropriate for a OneNote tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.TabDock">
            <summary>
            Specifies a background style appropriate for a docking tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.TabDockAutoHidden">
            <summary>
            Specifies a background style appropriate for a auto hidden docking tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.TabCustom1">
            <summary>
            Specifies a background style appropriate for the first custom tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.TabCustom2">
            <summary>
            Specifies a background style appropriate for the second custom tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.TabCustom3">
            <summary>
            Specifies a background style appropriate for the third custom tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.FormMain">
            <summary>
            Specifies a background style appropriate for a main form.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBackStyle.FormCustom1">
            <summary>
            Specifies a background style appropriate for the first custom form style.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle">
            <summary>
            Specifies the style of border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonStandalone">
            <summary>
            Specifies a border style appropriate for a standalone button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonAlternate">
            <summary>
            Specifies a border style appropriate for an alternate standalone button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonLowProfile">
            <summary>
            Specifies a border style appropriate for a low profile button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonButtonSpec">
            <summary>
            Specifies a border style appropriate for a button spec style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonBreadCrumb">
            <summary>
            Specifies a border style appropriate for a bread crumb.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonCalendarDay">
            <summary>
            Specifies a border style appropriate for a calendar day.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonCluster">
            <summary>
            Specifies a border style appropriate for a ribbon cluster button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonGallery">
            <summary>
            Specifies a border style appropriate for a gallery button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonNavigatorStack">
            <summary>
            Specifies a border style appropriate for a navigator stack.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonNavigatorOverflow">
            <summary>
            Specifies a border style appropriate for a navigator overflow button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonNavigatorMini">
            <summary>
            Specifies a border style appropriate for a navigator mini button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonInputControl">
            <summary>
            Specifies a border style appropriate for an input control button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonListItem">
            <summary>
            Specifies a border style appropriate for a list item button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonForm">
            <summary>
            Specifies a border style appropriate for a form level button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonFormClose">
            <summary>
            Specifies a border style appropriate for a form level close button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonCommand">
            <summary>
            Specifies a border style appropriate for a command button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonCustom1">
            <summary>
            Specifies a border style appropriate for the first custom button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonCustom2">
            <summary>
            Specifies a border style appropriate for the second custom button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ButtonCustom3">
            <summary>
            Specifies a border style appropriate for the third custom button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ControlClient">
            <summary>
            Specifies a border style appropriate for a client control style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ControlAlternate">
            <summary>
            Specifies a border style appropriate for an alternate control style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ControlGroupBox">
            <summary>
            Specifies a border style appropriate for a group box.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ControlToolTip">
            <summary>
            Specifies a border style appropriate for an a tool tip popup.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ControlRibbon">
            <summary>
            Specifies a border style appropriate for a ribbon style control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ControlRibbonAppMenu">
            <summary>
            Specifies a border style appropriate for a ribbon application button menu control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ControlCustom1">
            <summary>
            Specifies a border style appropriate for the first custom control style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ContextMenuOuter">
            <summary>
            Specifies a border style appropriate for the outer part of a context menu control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ContextMenuInner">
            <summary>
            Specifies a border style appropriate for the inner part of a context menu control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ContextMenuHeading">
            <summary>
            Specifies a border style appropriate for a context menu heading.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ContextMenuSeparator">
            <summary>
            Specifies a border style appropriate for a context menu separator.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ContextMenuItemImage">
            <summary>
            Specifies a border style appropriate for a context menu image.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ContextMenuItemSplit">
            <summary>
            Specifies a border style appropriate for the vertical split of a context menu item.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ContextMenuItemImageColumn">
            <summary>
            Specifies a border style appropriate for a context menu image column.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.ContextMenuItemHighlight">
            <summary>
            Specifies a border style appropriate for a context menu highlight column.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.InputControlStandalone">
            <summary>
            Specifies a border style appropriate for a standalone input control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.InputControlRibbon">
            <summary>
            Specifies a border style appropriate for a ribbon style input control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.InputControlCustom1">
            <summary>
            Specifies a border style appropriate for the first custom input control style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.GridHeaderColumnList">
            <summary>
            Specifies a border style appropriate for column headers in a list style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.GridHeaderRowList">
            <summary>
            Specifies a border style appropriate for row headers in a list style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.GridDataCellList">
            <summary>
            Specifies a border style appropriate for data cells in a list style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.GridHeaderColumnSheet">
            <summary>
            Specifies a border style appropriate for column headers in a sheet style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.GridHeaderRowSheet">
            <summary>
            Specifies a border style appropriate for row headers in a sheet style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.GridDataCellSheet">
            <summary>
            Specifies a border style appropriate for data cells in a sheet style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.GridHeaderColumnCustom1">
            <summary>
            Specifies a border style appropriate for column headers in a custom grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.GridHeaderRowCustom1">
            <summary>
            Specifies a border style appropriate for row headers in a custom grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.GridDataCellCustom1">
            <summary>
            Specifies a border style appropriate for data cells in a custom grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.HeaderPrimary">
            <summary>
            Specifies a border style appropriate for a primary header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.HeaderSecondary">
            <summary>
            Specifies a border style appropriate for a secondary header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.HeaderDockInactive">
            <summary>
            Specifies a border style appropriate for an inactive docking header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.HeaderDockActive">
            <summary>
            Specifies a border style appropriate for an active docking header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.HeaderForm">
            <summary>
            Specifies a border style appropriate for a main form header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.HeaderCalendar">
            <summary>
            Specifies a border style appropriate for a calendar title area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.HeaderCustom1">
            <summary>
            Specifies a border style appropriate for the first custom header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.HeaderCustom2">
            <summary>
            Specifies a border style appropriate for the second custom header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.SeparatorLowProfile">
            <summary>
            Specifies a border style appropriate for a low profile separator style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.SeparatorHighProfile">
            <summary>
            Specifies a border style appropriate for a high profile separator style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.SeparatorHighInternalProfile">
            <summary>
            Specifies a border style appropriate for a high profile for internal separator style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.SeparatorCustom1">
            <summary>
            Specifies a border style appropriate for the first custom separator style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.TabHighProfile">
            <summary>
            Specifies a border style appropriate for a high profile tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.TabStandardProfile">
            <summary>
            Specifies a border style appropriate for a standard profile tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.TabLowProfile">
            <summary>
            Specifies a border style appropriate for a low profile tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.TabOneNote">
            <summary>
            Specifies a border style appropriate for a OneNote tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.TabDock">
            <summary>
            Specifies a border style appropriate for a docking tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.TabDockAutoHidden">
            <summary>
            Specifies a border style appropriate for a auto hidden docking tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.TabCustom1">
            <summary>
            Specifies a border style appropriate for the first custom tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.TabCustom2">
            <summary>
            Specifies a border style appropriate for the second custom tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.TabCustom3">
            <summary>
            Specifies a border style appropriate for the third custom tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.FormMain">
            <summary>
            Specifies a border style appropriate for a main form.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteBorderStyle.FormCustom1">
            <summary>
            Specifies a border style appropriate for the first custom form style.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteContentStyle">
            <summary>
            Specifies the style of content.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonStandalone">
            <summary>
            Specifies a content style appropriate for a standalone button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonAlternate">
            <summary>
            Specifies a content style appropriate for an alternate standalone button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonLowProfile">
            <summary>
            Specifies a content style appropriate for a low profile button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonButtonSpec">
            <summary>
            Specifies a content style appropriate for a button spec.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonBreadCrumb">
            <summary>
            Specifies a content style appropriate for a bread crumb.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonCalendarDay">
            <summary>
            Specifies a content style appropriate for a calendar day.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonCluster">
            <summary>
            Specifies a content style appropriate for a ribbon cluster button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonGallery">
            <summary>
            Specifies a content style appropriate for a ribbon gallery button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonNavigatorStack">
            <summary>
            Specifies a content style appropriate for a navigator stack.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonNavigatorOverflow">
            <summary>
            Specifies a content style appropriate for a navigator overflow button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonNavigatorMini">
            <summary>
            Specifies a content style appropriate for a navigator mini button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonInputControl">
            <summary>
            Specifies a content style appropriate for an input control button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonListItem">
            <summary>
            Specifies a content style appropriate for a list item button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonForm">
            <summary>
            Specifies a content style appropriate for a form level button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonFormClose">
            <summary>
            Specifies a content style appropriate for a form level close button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonCommand">
            <summary>
            Specifies a content style appropriate for a command button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonCustom1">
            <summary>
            Specifies a content style appropriate for the first custom button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonCustom2">
            <summary>
            Specifies a content style appropriate for the second custom button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ButtonCustom3">
            <summary>
            Specifies a content style appropriate for the third custom button style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ContextMenuHeading">
            <summary>
            Specifies a content style appropriate for a context menu heading.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ContextMenuItemImage">
            <summary>
            Specifies a content style appropriate for the image of a context menu item.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ContextMenuItemTextStandard">
            <summary>
            Specifies a content style appropriate for the text/extra text of a standard context menu item.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ContextMenuItemTextAlternate">
            <summary>
            Specifies a content style appropriate for the text/extra text of a alternate context menu item.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.ContextMenuItemShortcutText">
            <summary>
            Specifies a content style appropriate for the shortcut text of a context menu item.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.GridHeaderColumnList">
            <summary>
            Specifies a border style appropriate for column headers in a list style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.GridHeaderRowList">
            <summary>
            Specifies a border style appropriate for column rows in a list style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.GridDataCellList">
            <summary>
            Specifies a border style appropriate for data cells in a list style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.GridHeaderColumnSheet">
            <summary>
            Specifies a border style appropriate for column headers in a sheet style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.GridHeaderRowSheet">
            <summary>
            Specifies a border style appropriate for column rows in a sheet style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.GridDataCellSheet">
            <summary>
            Specifies a border style appropriate for data cells in a sheet style grid.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.GridHeaderColumnCustom1">
            <summary>
            Specifies a border style appropriate for column headers in a custom grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.GridHeaderRowCustom1">
            <summary>
            Specifies a border style appropriate for column rows in a custom grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.GridDataCellCustom1">
            <summary>
            Specifies a border style appropriate for data cells in a custom grid style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.HeaderPrimary">
            <summary>
            Specifies a content style appropriate for a primary Header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.HeaderSecondary">
            <summary>
            Specifies a content style appropriate for a secondary Header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.HeaderDockInactive">
            <summary>
            Specifies a content style appropriate for an inactive docking header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.HeaderDockActive">
            <summary>
            Specifies a content style appropriate for an active docking header.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.HeaderForm">
            <summary>
            Specifies a content style appropriate for a main form header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.HeaderCalendar">
            <summary>
            Specifies a content style appropriate for a calendar title area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.HeaderCustom1">
            <summary>
            Specifies a content style appropriate for the first custom header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.HeaderCustom2">
            <summary>
            Specifies a content style appropriate for the second custom header style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelNormalControl">
            <summary>
            Specifies a normal label for use on a control style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelBoldControl">
            <summary>
            Specifies a bold label for use on a control style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelItalicControl">
            <summary>
            Specifies an italic label for use on a control style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelTitleControl">
            <summary>
            Specifies a label appropriate for titles for use on a control style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelNormalPanel">
            <summary>
            Specifies a normal label for use on a panel style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelBoldPanel">
            <summary>
            Specifies a bold label for use on a panel style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelItalicPanel">
            <summary>
            Specifies a italic label for use on a panel style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelTitlePanel">
            <summary>
            Specifies a label appropriate for titles for use on a panel style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelGroupBoxCaption">
            <summary>
            Specifies a normal label for use on a group box panel style background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelToolTip">
            <summary>
            Specifies a label style appropriate for a tooltip popup.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelSuperTip">
            <summary>
            Specifies a label style appropriate for a super tooltip popup.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelKeyTip">
            <summary>
            Specifies a label style appropriate for a key tooltip popup.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelCustom1">
            <summary>
            Specifies the first custom label style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelCustom2">
            <summary>
            Specifies the second custom label style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.LabelCustom3">
            <summary>
            Specifies the third custom label style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.TabHighProfile">
            <summary>
            Specifies a content style appropriate for a high profile tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.TabStandardProfile">
            <summary>
            Specifies a content style appropriate for a standard profile tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.TabLowProfile">
            <summary>
            Specifies a content style appropriate for a low profile tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.TabOneNote">
            <summary>
            Specifies a content style appropriate for a OneNote tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.TabDock">
            <summary>
            Specifies a content style appropriate for a docking tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.TabDockAutoHidden">
            <summary>
            Specifies a content style appropriate for a auto hidden docking tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.TabCustom1">
            <summary>
            Specifies a content style appropriate for the first custom tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.TabCustom2">
            <summary>
            Specifies a content style appropriate for the second custom tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.TabCustom3">
            <summary>
            Specifies a content style appropriate for the third custom tab style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.InputControlStandalone">
            <summary>
            Specifies a content style appropriate for a standalone input control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.InputControlRibbon">
            <summary>
            Specifies a content style appropriate for a ribbon style input control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteContentStyle.InputControlCustom1">
            <summary>
            Specifies a content style appropriate for the first custom input control style.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteColorStyle">
            <summary>
            Specifies the color drawing style.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Inherit">
            <summary>
            Specifies color should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Dashed">
            <summary>
            Specifies drawing as a series of dashes.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Solid">
            <summary>
            Specifies solid drawing instead of a gradient.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.SolidInside">
            <summary>
            Specifies solid block using the first color but with a line of second color one pixel inside.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.SolidRightLine">
            <summary>
            Specifies solid block using the first color and a single line of second color on right edge.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.SolidLeftLine">
            <summary>
            Specifies solid block using the first color and a single line of second color on left edge.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.SolidTopLine">
            <summary>
            Specifies solid block using the first color and a single line of second color on top edge.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.SolidBottomLine">
            <summary>
            Specifies solid block using the first color and a single line of second color on bottom edge.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.SolidAllLine">
            <summary>
            Specifies solid block using the first color and a rectangle of second color around all edges.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Switch25">
            <summary>
            Specifies a switch between the first and second colors at 25 percent of distance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Switch33">
            <summary>
            Specifies a switch between the first and second colors at 33 percent of distance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Switch50">
            <summary>
            Specifies a switch between the first and second colors at 50 percent of distance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Switch90">
            <summary>
            Specifies a switch between the first and second colors at 90 percent of distance.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Linear">
            <summary>
            Specifies a straight line gradient.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Linear25">
            <summary>
            Specifies the the first 25 percent is color 1 then it linear gradients into color 2.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Linear33">
            <summary>
            Specifies the the first 33 percent is color 1 then it linear gradients into color 2.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Linear40">
            <summary>
            Specifies the the first 40 percent is color 1 then it linear gradients into color 2.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Linear50">
            <summary>
            Specifies the the first 50 percent is color 1 then it linear gradients into color 2.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.LinearShadow">
            <summary>
            Specifies a straight line gradient with shadow around the inner edge.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Rounded">
            <summary>
            Specifies a rounded gradient by using a non-linear falloff.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Rounding2">
            <summary>
            Specifies a rounded look using a second variant blend of the two colors.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Rounding3">
            <summary>
            Specifies a rounded look using a third variant blend of the two colors.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Rounding4">
            <summary>
            Specifies a rounded look using a fourth variant blend of the two colors.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Rounding5">
            <summary>
            Specifies a rounded look using a fifth variant blend of the two colors.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.RoundedTopLight">
            <summary>
            Specifies a rounded gradient by using a non-linear falloff but with the top edge having light version of Color1.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.RoundedTopLeftWhite">
            <summary>
            Specifies a rounded gradient by using a non-linear falloff but with the top and left edges having a white border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.Sigma">
            <summary>
            Specifies a sigma curve that peeks in the center.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.HalfCut">
            <summary>
            Specifies a gradient effect in the first and second halfs of the area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.QuarterPhase">
            <summary>
            Specifies first color fades into second color mostly within the first quarter of area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.OneNote">
            <summary>
            Specifies color transition similar to Microsoft OneNote.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassThreeEdge">
            <summary>
            Specifies a simple glass effect with three edges lighter.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassSimpleFull">
            <summary>
            Specifies a simple glass effect.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassNormalFull">
            <summary>
            Specifies a full glass effect appropariate for a normal state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassTrackingFull">
            <summary>
            Specifies a full glass effect appropariate for a tracking state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassPressedFull">
            <summary>
            Specifies a full glass effect appropariate for a pressed state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassCheckedFull">
            <summary>
            Specifies a full glass effect appropariate for a checked state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassCheckedTrackingFull">
            <summary>
            Specifies a full glass effect appropariate for a checked/tracking state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassNormalStump">
            <summary>
            Specifies a stumpy glass effect appropariate for a normal state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassTrackingStump">
            <summary>
            Specifies a stumpy glass effect appropariate for a tracking state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassPressedStump">
            <summary>
            Specifies a stumpy glass effect appropariate for a pressed state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassCheckedStump">
            <summary>
            Specifies a stumpy glass effect appropariate for a checked state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassCheckedTrackingStump">
            <summary>
            Specifies a stumpy glass effect appropariate for a checked/tracking state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassNormalSimple">
            <summary>
            Specifies a simple glass effect appropariate for a normal state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassTrackingSimple">
            <summary>
            Specifies a simple glass effect appropariate for a tracking state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassPressedSimple">
            <summary>
            Specifies a simple glass effect appropariate for a pressed state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassCheckedSimple">
            <summary>
            Specifies a simple glass effect appropariate for a checked state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassCheckedTrackingSimple">
            <summary>
            Specifies a simple glass effect appropariate for a checked/tracking state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassCenter">
            <summary>
            Specifies a glass effect with fading from the center.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassBottom">
            <summary>
            Specifies a glass effect with fading from the bottom.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.GlassFade">
            <summary>
            Specifies a simple glass effect that fades away to nothing by end of the area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.ExpertTracking">
            <summary>
            Specifies an expert style button with tracking effect.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.ExpertPressed">
            <summary>
            Specifies an expert style button with pressed effect.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.ExpertChecked">
            <summary>
            Specifies an expert style button that is checked.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.ExpertCheckedTracking">
            <summary>
            Specifies an expert style button that is checked with tracking effect.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.ExpertSquareHighlight">
            <summary>
            Specifies an expert style button that has a square inner area with highlighting.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteColorStyle.ExpertSquareHighlight2">
            <summary>
            Specifies an expert style button that has a square inner area with highlighting variation 2.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteImageStyle">
            <summary>
            Specifies the an image is aligned.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.Inherit">
            <summary>
            Specifies image style should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.TopLeft">
            <summary>
            Specifies the image is placed in the top left.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.TopMiddle">
            <summary>
            Specifies the image is placed in the center at the top.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.TopRight">
            <summary>
            Specifies the image is placed in the top right.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.CenterLeft">
            <summary>
            Specifies the image is placed in the center at the left.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.CenterMiddle">
            <summary>
            Specifies the image is placed in the center.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.CenterRight">
            <summary>
            Specifies the image is placed in the center at the right.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.BottomLeft">
            <summary>
            Specifies the image is placed in the bottom left.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.BottomMiddle">
            <summary>
            Specifies the image is placed in the center at the bottom.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.BottomRight">
            <summary>
            Specifies the image is placed in the bottom right.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.Stretch">
            <summary>
            Specifies image should be stretch to fix area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.Tile">
            <summary>
            Specifies the image is tiled without flipping.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.TileFlipX">
            <summary>
            Specifies the image is tiled with flip horizontally.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.TileFlipY">
            <summary>
            Specifies the image is tiled with flip vertically.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageStyle.TileFlipXY">
            <summary>
            Specifies the image is tiled with flip horizontally and vertically.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders">
            <summary>
            Specifies the an image is aligned.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.Inherit">
            <summary>
            Specifies borders to draw should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.None">
            <summary>
            Specifies that no borders are required.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.Top">
            <summary>
            Specifies the top border should be drawn.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.Bottom">
            <summary>
            Specifies the bottom border should be drawn.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.TopBottom">
            <summary>
            Specifies the top and bottom border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.Left">
            <summary>
            Specifies the left border should be drawn.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.TopLeft">
            <summary>
            Specifies the top and bottom border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.BottomLeft">
            <summary>
            Specifies the left and bottom borders.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.TopBottomLeft">
            <summary>
            Specifies the bottom and right borders.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.Right">
            <summary>
            Specifies the right border should be drawn.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.TopRight">
            <summary>
            Specifies the top and bottom border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.BottomRight">
            <summary>
            Specifies the bottom and right borders.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.TopBottomRight">
            <summary>
            Specifies the bottom and right borders.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.LeftRight">
            <summary>
            Specifies the left and right borders.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.TopLeftRight">
            <summary>
            Specifies the bottom and right borders.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.BottomLeftRight">
            <summary>
            Specifies the bottom and right borders.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDrawBorders.All">
            <summary>
            Specifies that all borders be drawn.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteImageEffect">
            <summary>
            Specifies how an image is drawn.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageEffect.Inherit">
            <summary>
            Specifies effect should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageEffect.Normal">
            <summary>
            Specifies image is drawn without modification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageEffect.Disabled">
            <summary>
            Specifies image is drawn to look disabled.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageEffect.GrayScale">
            <summary>
            Specifies image is drawn converted to a grayscale.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageEffect.GrayScaleRed">
            <summary>
            Specifies image is drawn converted to a grayscale except for red.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageEffect.GrayScaleGreen">
            <summary>
            Specifies image is drawn converted to a grayscale except for green.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageEffect.GrayScaleBlue">
            <summary>
            Specifies image is drawn converted to a grayscale except for blue.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageEffect.Light">
            <summary>
            Specifies image is drawn slightly lighter.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageEffect.LightLight">
            <summary>
            Specifies image is drawn much lighter.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageEffect.Dark">
            <summary>
            Specifies image is drawn slightly darker.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteImageEffect.DarkDark">
            <summary>
            Specifies image is drawn much darker.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle">
            <summary>
            Specifies the style of button spec.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.Generic">
            <summary>
            Specifies a general purpose button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.Close">
            <summary>
            Specifies a close button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.Context">
            <summary>
            Specifies a context button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.Next">
            <summary>
            Specifies a next button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.Previous">
            <summary>
            Specifies a previous button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.ArrowLeft">
            <summary>
            Specifies a left pointing arrow button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.ArrowRight">
            <summary>
            Specifies a right pointing arrow button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.ArrowUp">
            <summary>
            Specifies an upwards pointing arrow button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.ArrowDown">
            <summary>
            Specifies a downwards pointing arrow button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.DropDown">
            <summary>
            Specifies a drop down button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.PinVertical">
            <summary>
            Specifies a vertical pin specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.PinHorizontal">
            <summary>
            Specifies a horizontal pin specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.FormClose">
            <summary>
            Specifies a form close button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.FormMin">
            <summary>
            Specifies a form minimize button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.FormMax">
            <summary>
            Specifies a form maximize button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.FormRestore">
            <summary>
            Specifies a form restore button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.PendantClose">
            <summary>
            Specifies a pendant close button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.PendantMin">
            <summary>
            Specifies a pendant minimize button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.PendantRestore">
            <summary>
            Specifies a pendant restore button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.WorkspaceMaximize">
            <summary>
            Specifies a workspace maximize button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.WorkspaceRestore">
            <summary>
            Specifies a workspace maximize button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.RibbonMinimize">
            <summary>
            Specifies a ribbon minimize button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonSpecStyle.RibbonExpand">
            <summary>
            Specifies a ribbon expand button specification.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteButtonEnabled">
            <summary>
            Specifies the enabled state of a button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonEnabled.Inherit">
            <summary>
            Specifies enabled state should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonEnabled.Container">
            <summary>
            Specifies button should take enabled state from container control state.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonEnabled.True">
            <summary>
            Specifies button should be enabled.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonEnabled.False">
            <summary>
            Specifies button should be disabled.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteButtonOrientation">
            <summary>
            Specifies the orientation of a button specification.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonOrientation.Inherit">
            <summary>
            Specifies orientation should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonOrientation.Auto">
            <summary>
            Specifies orientation should automatically match the concept of use.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonOrientation.FixedTop">
            <summary>
            Specifies the button is orientated in a vertical top down manner.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonOrientation.FixedBottom">
            <summary>
            Specifies the button is orientated in a vertical bottom upwards manner.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonOrientation.FixedLeft">
            <summary>
            Specifies the button is orientated in a horizontal left to right manner.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteButtonOrientation.FixedRight">
            <summary>
            Specifies the button is orientated in a horizontal right to left manner.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRectangleAlign">
            <summary>
            Specifies how a display rectangle aligns.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRectangleAlign.Inherit">
            <summary>
            Specifies alignment should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRectangleAlign.Local">
            <summary>
            Specifies the client area of the rendering item.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRectangleAlign.Control">
            <summary>
            Specifies the client area of the Control.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRectangleAlign.Form">
            <summary>
            Specifies the client area of the owning Form.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRelativeAlign">
            <summary>
            Specifies a relative alignment position.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRelativeAlign.Inherit">
            <summary>
            Specifies relative alignment should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRelativeAlign.Near">
            <summary>
            Specifies a relative alignment of near.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRelativeAlign.Center">
            <summary>
            Specifies a relative alignment of center.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRelativeAlign.Far">
            <summary>
            Specifies a relative alignment of far.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRelativeEdgeAlign">
            <summary>
            Specifies a relative button alignment position.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRelativeEdgeAlign.Inherit">
            <summary>
            Specifies relative alignment should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRelativeEdgeAlign.Near">
            <summary>
            Specifies a relative alignment of near.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRelativeEdgeAlign.Far">
            <summary>
            Specifies a relative alignment of far.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteGraphicsHint">
            <summary>
            Specifies a graphics rendering hint.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteGraphicsHint.Inherit">
            <summary>
            Specifies graphics hint should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteGraphicsHint.None">
            <summary>
            Specifies no smoothing for graphics rendering.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteGraphicsHint.AntiAlias">
            <summary>
            Specifies anti aliasing for graphics rendering.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTextHint">
            <summary>
            Specifies a text rendering hint.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextHint.Inherit">
            <summary>
            Specifies text hint should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextHint.AntiAlias">
            <summary>
            Specifies anti aliasing for text rendering.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextHint.AntiAliasGridFit">
            <summary>
            Specifies anti aliasing with grid fit for text rendering.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextHint.ClearTypeGridFit">
            <summary>
            Specifies clear type with grid fit for text rendering.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextHint.SingleBitPerPixel">
            <summary>
            Specifies single bit per pixel for text rendering.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextHint.SingleBitPerPixelGridFit">
            <summary>
            Specifies single bit for pixel with grid fit for text rendering.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextHint.SystemDefault">
            <summary>
            Specifies system default setting for text rendering.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTextTrim">
            <summary>
            Specifies how to trim text.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextTrim.Inherit">
            <summary>
            Specifies text trim should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextTrim.Hide">
            <summary>
            Specifies text is not drawn if it needs trimming.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextTrim.Character">
            <summary>
            Specifies text is trimmed by removing end characters.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextTrim.Word">
            <summary>
            Specifies text is trimmed by removing end words.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextTrim.EllipsisCharacter">
            <summary>
            Specifies text is trimmed by using ellipses and removing end characters.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextTrim.EllipsisWord">
            <summary>
            Specifies text is trimmed by using ellipses and removing end words.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextTrim.EllipsisPath">
            <summary>
            Specifies text is trimmed by using ellipses and removing from middle.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTextHotkeyPrefix">
            <summary>
            Specifies how to show hotkey prefix characters.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextHotkeyPrefix.Inherit">
            <summary>
            Specifies text prefix should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextHotkeyPrefix.None">
            <summary>Turns off processing of prefix characters.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextHotkeyPrefix.Show">
            <summary>Turns on processing of prefix characters.</summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTextHotkeyPrefix.Hide">
            <summary>Ignores the ampersand prefix character in text.</summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle">
            <summary>
            Specifies the style of ribbon background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonAppButton">
            <summary>
            Specifies a background style appropriate for an application button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonAppMenuInner">
            <summary>
            Specifies a background style appropriate for an application menu inner area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonAppMenuOuter">
            <summary>
            Specifies a background style appropriate for an application menu outer area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonAppMenuDocs">
            <summary>
            Specifies a background style appropriate for an application menu recent documents area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonGroupArea">
            <summary>
            Specifies a background style appropriate for a group area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonGroupNormalBorder">
            <summary>
            Specifies a background style appropriate for a normal group border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonGroupNormalTitle">
            <summary>
            Specifies a background style appropriate for a normal group title.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonGroupCollapsedBack">
            <summary>
            Specifies a background style appropriate for a collapsed group border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonGroupCollapsedBorder">
            <summary>
            Specifies a border style appropriate for a collapsed group border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonGroupCollapsedFrameBack">
            <summary>
            Specifies a background style appropriate for a collapsed group frame border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonGroupCollapsedFrameBorder">
            <summary>
            Specifies a border style appropriate for a collapsed group frame border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonTab">
            <summary>
            Specifies a background style appropriate for a ribbon tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonQATFullbar">
            <summary>
            Specifies a background style appropriate for a ribbon quick access toolbar in full mode.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonQATMinibar">
            <summary>
            Specifies a background style appropriate for a ribbon quick access toolbar in mini mode.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonQATOverflow">
            <summary>
            Specifies a background style appropriate for a ribbon quick access toolbar in overflow.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonGalleryBack">
            <summary>
            Specifies a background style appropriate for a gallery.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonBackStyle.RibbonGalleryBorder">
            <summary>
            Specifies a border style appropriate for a gallery.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle">
            <summary>
            Specifies the style of ribbon text.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle.RibbonGroupNormalTitle">
            <summary>
            Specifies a text style appropriate for a normal group title.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle.RibbonGroupCollapsedText">
            <summary>
            Specifies a text style appropriate for a collapsed group text.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle.RibbonGroupButtonText">
            <summary>
            Specifies a text style appropriate for a group button text.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle.RibbonGroupLabelText">
            <summary>
            Specifies a text style appropriate for a group label text.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle.RibbonGroupCheckBoxText">
            <summary>
            Specifies a text style appropriate for a group check box button text.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle.RibbonGroupRadioButtonText">
            <summary>
            Specifies a text style appropriate for a group radio button text.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle.RibbonTab">
            <summary>
            Specifies a text style appropriate for a ribbon tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle.RibbonAppMenuDocsTitle">
            <summary>
            Specifies a text style appropriate for a app menu recent documents title.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonTextStyle.RibbonAppMenuDocsEntry">
            <summary>
            Specifies a text style appropriate for a app menu recent documents entry.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle">
            <summary>
            Specifies the color drawing style for ribbon elements.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.Inherit">
            <summary>
            Specifies color style should be inherited.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.Empty">
            <summary>
            Specifies that no drawing take place.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.Solid">
            <summary>
            Specifies solid drawing using the first color.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.Linear">
            <summary>
            Specifies linear gradient from first to second color.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.LinearBorder">
            <summary>
            Specifies linear gradient border from first to second color.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonAppMenuInner">
            <summary>
            Specifies using colors to draw a application menu inner area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonAppMenuOuter">
            <summary>
            Specifies using colors to draw a application menu inner area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonTabTracking2007">
            <summary>
            Specifies using colors to draw a tracking ribbon tab appropriate for Office 2007.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonTabFocus2010">
            <summary>
            Specifies using colors to draw a focused ribbon tab appropriate for Office 2010.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonTabTracking2010">
            <summary>
            Specifies using colors to draw a tracking ribbon tab appropriate for Office 2010.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonTabTracking2010Alt">
            <summary>
            Specifies alternate drawing of the RibbonTabTracking2010 enumeration.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonTabGlowing">
            <summary>
            Specifies using colors to draw a glowing ribbon tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonTabSelected2007">
            <summary>
            Specifies using colors to draw a selected ribbon tab appropriate for Office 2007.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonTabSelected2010">
            <summary>
            Specifies using colors to draw a selected ribbon tab appropriate for Office 2010.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonTabSelected2010Alt">
            <summary>
            Specifies alternate drawing of the RibbonTabSelected2010 enumeration.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonTabHighlight">
            <summary>
            Specifies using colors to draw a selected and tracking ribbon tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonTabHighlight2">
            <summary>
            Specifies using colors for an alternative way of drawing a selected and tracking ribbon tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonTabContextSelected">
            <summary>
            Specifies using colors to draw a context selected ribbon tab for Office 2007.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupAreaBorder">
            <summary>
            Specifies using colors to draw a groups area border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupAreaBorder2">
            <summary>
            Specifies using colors to draw a groups area border, variantion 2.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupAreaBorder3">
            <summary>
            Specifies using colors to draw a groups area border, variantion 3.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupAreaBorder4">
            <summary>
            Specifies using colors to draw a groups area border, variantion 4.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupAreaBorderContext">
            <summary>
            Specifies using colors to draw a groups area border for a context selected tab.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupNormalBorder">
            <summary>
            Specifies using colors to draw a group normal border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupNormalBorderSep">
            <summary>
            Specifies using colors to draw a group normal border as a vertical separator.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupNormalBorderSepPressedLight">
            <summary>
            Specifies using colors to draw a group pressed border as a vertical separator, variantion based on light background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupNormalBorderSepPressedDark">
            <summary>
            Specifies using colors to draw a group pressed border as a vertical separator, variantion based on dark background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupNormalBorderSepTrackingLight">
            <summary>
            Specifies using colors to draw a group tracking border as a vertical separator, variantion based on light background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupNormalBorderSepTrackingDark">
            <summary>
            Specifies using colors to draw a group tracking border as a vertical separator, variantion based on dark background.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupNormalBorderTracking">
            <summary>
            Specifies using colors to draw a tracking group normal border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupNormalBorderTrackingLight">
            <summary>
            Specifies using colors to draw a tracking group normal border with light inside edge.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupNormalTitle">
            <summary>
            Specifies using colors to draw a group normal title.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupCollapsedBorder">
            <summary>
            Specifies using colors to draw a group collapsed border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupCollapsedFrameBorder">
            <summary>
            Specifies using colors to draw a group collapsed frame border.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupCollapsedFrameBack">
            <summary>
            Specifies using colors to draw a group collapsed frame back.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupGradientOne">
            <summary>
            Specifies using colors to draw a one tone gradient in the groups area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonGroupGradientTwo">
            <summary>
            Specifies using colors to draw a two tone gradient in the groups area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonQATMinibarSingle">
            <summary>
            Specifies using colors to draw a rounded quick access toolbar mini area with single rounded end.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonQATMinibarDouble">
            <summary>
            Specifies using colors to draw a rounded quick access toolbar mini area with double rounded end.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonQATFullbarRound">
            <summary>
            Specifies using colors to draw a rounded quick access toolbar full area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonQATFullbarSquare">
            <summary>
            Specifies using colors to draw a square quick access toolbar full area.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonColorStyle.RibbonQATOverflow">
            <summary>
            Specifies using colors to draw a rounded quick access toolbar overflow.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonGalleryButton">
            <summary>
            Specifies a ribbon gallery button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonGalleryButton.Up">
            <summary>
            Specifies the up gallery button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonGalleryButton.Down">
            <summary>
            Specifies the down gallery button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonGalleryButton.DropDown">
            <summary>
            Specifies the drop down gallery button.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteRibbonShape">
            <summary>
            Specifies a ribbon shape.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonShape.Inherit">
            <summary>
            Specifies the up gallery button.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonShape.Office2007">
            <summary>
            Specifies the Office 2007 ribbon shape.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteRibbonShape.Office2010">
            <summary>
            Specifies the Office 2010 ribbon shape.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteTrackBarSize">
            <summary>
            Specifies the track bar size.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTrackBarSize.Small">
            <summary>
            Specifies a small track bar.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTrackBarSize.Medium">
            <summary>
            Specifies a medium track bar.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteTrackBarSize.Large">
            <summary>
            Specifies a large track bar.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteElement">
            <summary>
            Specifies a palette element.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteElement.TrackBarTrack">
            <summary>
            Specifies the track of a track bar.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteElement.TrackBarTick">
            <summary>
            Specifies the tick of a track bar.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteElement.TrackBarPosition">
            <summary>
            Specifies the position marker of a track bar.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteDragFeedback">
            <summary>
            Specifies how drag feedback is presented.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDragFeedback.Block">
            <summary>
            Draw drag drop feedback as just blocks that are highlighted based on hot areas. 
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDragFeedback.Square">
            <summary>
            Draw drag drop feedback as square indicators.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDragFeedback.Rounded">
            <summary>
            Draw drag drop feedback as rounded indicators.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.PaletteDragFeedback.Inherit">
            <summary>
            Draw drag drop feedback using the inherited value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.GetIntMetric">
            <summary>
            Signature of methods that return an integer metric.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Metric value required.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.GetBoolMetric">
            <summary>
            Signature of methods that return a bool metric.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Metric value required.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.GetPaddingMetric">
            <summary>
            Signature of methods that return a padding metric.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Metric value required.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.PaletteProfessionalOffice2003">
            <summary>
            Take into account the current theme when creating an Office 2003 appearance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalOffice2003.#ctor">
            <summary>
            Initialize a new instance of the PaletteProfessionalOffice2003 class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalOffice2003.GenerateColorTable">
            <summary>
            Generate an appropriate color table.
            </summary>
            <returns>KryptonColorTable instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalOffice2003.GetBackColorStyle(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background drawing style.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalOffice2003.GetBackColor1(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalOffice2003.GetBackColor2(ComponentFactory.Krypton.Toolkit.PaletteBackStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="style">Background style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalOffice2003.GetContentShortTextColor1(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.PaletteProfessionalOffice2003.GetContentShortTextColor2(ComponentFactory.Krypton.Toolkit.PaletteContentStyle,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.GraphicsHint">
            <summary>
            Apply a requested smoothing mode to a graphics instance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GraphicsHint.#ctor(System.Drawing.Graphics,ComponentFactory.Krypton.Toolkit.PaletteGraphicsHint)">
            <summary>
            Initialize a new instance of the GraphicsHint class.
            </summary>
            <param name="graphics">Graphics context.</param>
            <param name="hint">Temporary hint mode to apply.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GraphicsHint.Dispose">
            <summary>
            Reverse the smoothing mode change.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RenderBase">
            <summary>
            Provides base class for rendering implementations.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderBase.RenderStandardBorder">
            <summary>
            Gets the standard border renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderBase.RenderStandardBack">
            <summary>
            Gets the standard background renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderBase.RenderStandardContent">
            <summary>
            Gets the standard content renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderBase.RenderTabBorder">
            <summary>
            Gets the tab border renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderBase.RenderRibbon">
            <summary>
            Gets the ribbon renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderBase.RenderGlyph">
            <summary>
            Gets the glpyh renderer.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.RenderToolStrip(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets a renderer for drawing the toolstrips.
            </summary>
            <param name="colorPalette">Color palette to use when rendering toolstrip.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetBorderRawPadding(ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Gets the raw padding used per edge of the border.
            </summary>
            <param name="palette">Palette used for drawing.</param>
            <param name="state">State associated with rendering.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <returns>Padding structure detailing all four edges.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetBorderDisplayPadding(ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Gets the padding used to position display elements completely inside border drawing.
            </summary>
            <param name="palette">Palette used for drawing.</param>
            <param name="state">State associated with rendering.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <returns>Padding structure detailing all four edges.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetOutsideBorderPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Generate a graphics path that is the outside edge of the border.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetBorderPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Generate a graphics path that is in the middle of the border.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetBackPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Generate a graphics path that encloses the border and is used when rendering a background to ensure the background does not draw over the border area.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawBorder(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw border on the inside edge of the specified rectangle.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawBack(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.IDisposable)">
            <summary>
            Draw background to fill the specified path.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle that encloses path.</param>
            <param name="path">Graphics path.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the background.</param>
            <param name="state">State associated with rendering.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetContentPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Get the preferred size for drawing the content.
            </summary>
            <param name="context">Layout context.</param>
            <param name="palette">Content palette details.</param>
            <param name="values">Content values.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="state">State associated with rendering.</param>
            <param name="composition">Drawing onto a composition element.</param>
            <returns>Preferred size.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.LayoutContent(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Perform layout calculations on the provided content.
            </summary>
            <param name="context">Layout context.</param>
            <param name="availableRect">Space available for laying out.</param>
            <param name="palette">Content palette details.</param>
            <param name="values">Content values.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="state">State associated with rendering.</param>
            <param name="composition">Drawing onto a composition element.</param>
            <returns>Memento with cached information.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawContent(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,System.IDisposable,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean,System.Boolean)">
            <summary>
            Perform draw of content using provided memento.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="palette">Content palette details.</param>
            <param name="memento">Cached values from layout call.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="state">State associated with rendering.</param>
            <param name="composition">Drawing onto a composition element.</param>
            <param name="allowFocusRect">Allow drawing of focus rectangle.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetContentImageDisplayed(System.IDisposable)">
            <summary>
            Request the calculated display of the image.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>True if the image is being displayed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetContentImageRectangle(System.IDisposable)">
            <summary>
            Request the calculated position of the content image.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>Display rectangle for the image content.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetContentShortTextDisplayed(System.IDisposable)">
            <summary>
            Request the calculated display of the short text.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>True if the short text is being displayed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetContentShortTextRectangle(System.IDisposable)">
            <summary>
            Request the calculated position of the content short text.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>Display rectangle for the image content.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetContentLongTextDisplayed(System.IDisposable)">
            <summary>
            Request the calculated display of the long text.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>True if the long text is being displayed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetContentLongTextRectangle(System.IDisposable)">
            <summary>
            Request the calculated position of the content long text.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>Display rectangle for the image content.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetTabBorderLeftDrawing(ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Gets if the tabs should be drawn from left to right for z-ordering.
            </summary>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>True for left to right, otherwise draw right to left.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetTabBorderSpacingGap(ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Gets the spacing used to separate each tab border instance.
            </summary>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>Number of pixels to space instances.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetTabBorderDisplayPadding(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Gets the padding used to position display elements completely inside border drawing.
            </summary>
            <param name="context">Layout context.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="state">State associated with rendering.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>Padding structure detailing all four edges.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetTabBorderPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Generate a graphics path that encloses the border itself.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetTabBackPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Generate a graphics path that encloses the border and is used when rendering a background to ensure the background does not draw over the border area.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawTabBorder(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Draw border on the inside edge of the specified rectangle.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <param name="tabBorderStyle">Style of tab border.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawRibbonBack(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Boolean,System.IDisposable)">
            <summary>
            Draw the background of a ribbon element.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="state">State associated with rendering.</param>
            <param name="palette">Palette used for sourcing settings.</param>
            <param name="orientation">Orientation for drawing.</param>
            <param name="composition">Drawing onto a composition element.</param>
            <param name="memento">Cached values to use when drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawRibbonTabContextTitle(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Draw a context ribbon tab title.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="paletteGeneral">Palette used for general ribbon settings.</param>
            <param name="paletteBack">Palette used for background ribbon settings.</param>
            <param name="memento">Cached values to use when drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawRibbonApplicationButton(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Draw the application button.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="state">State associated with rendering.</param>
            <param name="palette">Palette used for sourcing settings.</param>
            <param name="memento">Cached storage for drawing objects.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawRibbonApplicationTab(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,System.Drawing.Color,System.Drawing.Color,System.IDisposable)">
            <summary>
            Draw the application tab.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="state">State associated with rendering.</param>
            <param name="baseColor1">Base color1 used for drawing the ribbon tab.</param>
            <param name="baseColor2">Base color2 used for drawing the ribbon tab.</param>
            <param name="memento">Cached values to use when drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawRibbonClusterEdge(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon cluster edge.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteBack">Palette used for recovering drawing details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawSeparator(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,System.Windows.Forms.Orientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Perform drawing of a separator glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteBack">Background palette details.</param>
            <param name="paletteBorder">Border palette details.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="state">State associated with rendering.</param>
            <param name="canMove">Can the separator be moved.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetCheckBoxPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPalette,System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Calculate the requested display size for the check box.
            </summary>
            <param name="context">Render context.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="enabled">Should check box be displayed as enabled.</param>
            <param name="checkState">The checked state of the check box.</param>
            <param name="tracking">Should check box be displayed as hot tracking.</param>
            <param name="pressed">Should check box be displayed as pressed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawCheckBox(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPalette,System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Perform drawing of a check box.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="enabled">Should check box be displayed as enabled.</param>
            <param name="checkState">The checked state of the check box.</param>
            <param name="tracking">Should check box be displayed as hot tracking.</param>
            <param name="pressed">Should check box be displayed as pressed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetRadioButtonPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPalette,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Calculate the requested display size for the radio button.
            </summary>
            <param name="context">Render context.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="enabled">Should check box be displayed as enabled.</param>
            <param name="checkState">Checked state of the radio button.</param>
            <param name="tracking">Should check box be displayed as hot tracking.</param>
            <param name="pressed">Should check box be displayed as pressed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawRadioButton(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPalette,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Perform drawing of a radio button.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="enabled">Should radio button be displayed as enabled.</param>
            <param name="checkState">Checked state of the radio button.</param>
            <param name="tracking">Should radio button be displayed as hot tracking.</param>
            <param name="pressed">Should radio button be displayed as pressed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.GetDropDownButtonPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Calculate the requested display size for the drop down button.
            </summary>
            <param name="context">Render context.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="state">State for which image size is needed.</param>
            <param name="orientation">How to orientate the image.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawDropDownButton(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Perform drawing of a drop down button.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="state">State for which image size is needed.</param>
            <param name="orientation">How to orientate the image.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawInputControlNumericUpGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw a numeric up button image appropriate for a input control.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Content palette for getting colors.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawInputControlNumericDownGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw a numeric down button image appropriate for a input control.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Content palette for getting colors.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawInputControlDropDownGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw a drop down grid appropriate for a input control.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Content palette for getting colors.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawRibbonDialogBoxLauncher(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon dialog box launcher glyph.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawRibbonDropArrow(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon drop arrow glyph.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawRibbonContextArrow(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon context arrow glyph.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawRibbonOverflow(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon overflow image.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawRibbonGroupSeparator(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon group separator.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawGridSortGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Windows.Forms.SortOrder,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Draw a grid sorting direction glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="sortOrder">Sorting order of the glyph.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Palette to use for sourcing values.</param>
            <param name="state">State associated with rendering.</param>
            <param name="rtl">Should be drawn from right to left.</param>
            <returns>Remainder space left over for other drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawGridRowGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.GridRowGlyph,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Draw a grid row glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="rowGlyph">Row glyph.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Palette to use for sourcing values.</param>
            <param name="state">State associated with rendering.</param>
            <param name="rtl">Should be drawn from right to left.</param>
            <returns>Remainder space left over for other drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawGridErrorGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Draw a grid error glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="state">State associated with rendering.</param>
            <param name="rtl">Should be drawn from right to left.</param>
            <returns>Remainder space left over for other drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawDragDropSolidGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteDragDrop)">
            <summary>
            Draw a solid area glyph suitable for a drag drop area.
            </summary>
            <param name="context">Render context.</param>
            <param name="drawRect">Drawing rectangle space.</param>
            <param name="dragDropPalette">Palette source of drawing values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.MeasureDragDropDockingGlyph(ComponentFactory.Krypton.Toolkit.RenderDragDockingData,ComponentFactory.Krypton.Toolkit.IPaletteDragDrop,ComponentFactory.Krypton.Toolkit.PaletteDragFeedback)">
            <summary>
            Measure the drag and drop docking glyphs.
            </summary>
            <param name="dragData">Set of drag docking data.</param>
            <param name="dragDropPalette">Palette source of drawing values.</param>
            <param name="feedback">Feedback requested.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawDragDropDockingGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.RenderDragDockingData,ComponentFactory.Krypton.Toolkit.IPaletteDragDrop,ComponentFactory.Krypton.Toolkit.PaletteDragFeedback)">
            <summary>
            Draw a solid area glyph suitable for a drag drop area.
            </summary>
            <param name="context">Render context.</param>
            <param name="dragData">Set of drag docking data.</param>
            <param name="dragDropPalette">Palette source of drawing values.</param>
            <param name="feedback">Feedback requested.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawTrackTicksGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteElementColor,System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Boolean,System.Drawing.Size,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw the track bar ticks glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="state">Element state.</param>
            <param name="elementPalette">Source of palette colors.</param>
            <param name="drawRect">Drawing rectangle that should contain ticks.</param>
            <param name="orientation">Orientation of the drawing area.</param>
            <param name="topRight">Drawing on the topRight or the bottomLeft.</param>
            <param name="positionSize">Size of the position indicator.</param>
            <param name="minimum">First value.</param>
            <param name="maximum">Last value.</param>
            <param name="frequency">How often ticks are drawn.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawTrackGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteElementColor,System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Boolean)">
            <summary>
            Draw the track bar track glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="state">Element state.</param>
            <param name="elementPalette">Source of palette colors.</param>
            <param name="drawRect">Drawing rectangle that should contain the track.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="volumeControl">Drawing as a volume control or standard slider.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawTrackPositionGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteElementColor,System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Windows.Forms.TickStyle)">
            <summary>
            Draw the track bar position glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="state">Element state.</param>
            <param name="elementPalette">Source of palette colors.</param>
            <param name="drawRect">Drawing rectangle that should contain the track.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="tickStyle">Tick marks that surround the position.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Evaluate if transparent painting is needed for background palette.
            </summary>
            <param name="paletteBack">Background palette to test.</param>
            <param name="state">Element state associated with palette.</param>
            <returns>True if transparent painting required.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Evaluate if transparent painting is needed for background or border palettes.
            </summary>
            <param name="paletteBack">Background palette to test.</param>
            <param name="paletteBorder">Background palette to test.</param>
            <param name="state">Element state associated with palette.</param>
            <returns>True if transparent painting required.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawIconHelper(ComponentFactory.Krypton.Toolkit.ViewContext,System.Drawing.Icon,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Helper routine to draw an image taking into account various properties.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="icon">Icon to be drawn.</param>
            <param name="iconRect">Destination rectangle.</param>
            <param name="orientation">Visual orientation.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderBase.DrawImageHelper(ComponentFactory.Krypton.Toolkit.ViewContext,System.Drawing.Image,System.Drawing.Color,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteImageEffect,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Helper routine to draw an image taking into account various properties.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="image">Image to be drawn.</param>
            <param name="remapTransparent">Color that should become transparent.</param>
            <param name="imageRect">Destination rectangle.</param>
            <param name="orientation">Visual orientation.</param>
            <param name="effect">Drawing effect.</param>
            <param name="remapColor">Image color to remap.</param>
            <param name="remapNew">New color for remap.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RenderStandard">
            <summary>
            Provides the standard renderer that honors all palette properties.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.RenderToolStrip(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets a renderer for drawing the toolstrips.
            </summary>
            <param name="colorPalette">Color palette to use when rendering toolstrip.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetBorderRawPadding(ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Gets the raw padding used per edge of the border.
            </summary>
            <param name="palette">Palette used for drawing.</param>
            <param name="state">State associated with rendering.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <returns>Padding structure detailing all four edges.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetBorderDisplayPadding(ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Gets the padding used to position display elements completely inside border drawing.
            </summary>
            <param name="palette">Palette used for drawing.</param>
            <param name="state">State associated with rendering.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <returns>Padding structure detailing all four edges.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetOutsideBorderPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Generate a graphics path that is the outside edge of the border.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetBorderPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Generate a graphics path that is in the middle of the border.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetBackPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Generate a graphics path that encloses the border and is used when rendering a background to ensure the background does not draw over the border area.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawBorder(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw border on the inside edge of the specified rectangle.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawBack(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.IDisposable)">
            <summary>
            Draw background to fill the specified path.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle that encloses path.</param>
            <param name="path">Graphics path.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetContentPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Get the preferred size for drawing the content.
            </summary>
            <param name="context">Layout context.</param>
            <param name="palette">Content palette details.</param>
            <param name="values">Content values.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="state">State associated with rendering.</param>
            <param name="composition">Should draw on a composition element.</param>
            <returns>Preferred size.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.LayoutContent(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Perform layout calculations on the provided content.
            </summary>
            <param name="context">Layout context.</param>
            <param name="availableRect">Display area available for laying out.</param>
            <param name="palette">Content palette details.</param>
            <param name="values">Content values.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="state">State associated with rendering.</param>
            <param name="composition">Should draw on a composition element.</param>
            <returns>Memento with cached information.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawContent(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,System.IDisposable,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean,System.Boolean)">
            <summary>
            Perform draw of content using provided memento.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="palette">Content palette details.</param>
            <param name="memento">Cached values from layout call.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="state">State associated with rendering.</param>
            <param name="composition">Drawing onto a composition element.</param>
            <param name="allowFocusRect">Allow drawing of focus rectangle.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetContentImageDisplayed(System.IDisposable)">
            <summary>
            Request the calculated display of the image.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>True if the image is being displayed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetContentImageRectangle(System.IDisposable)">
            <summary>
            Request the calculated position of the content image.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>Display rectangle for the image content.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetContentShortTextDisplayed(System.IDisposable)">
            <summary>
            Request the calculated display of the short text.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>True if the short text is being displayed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetContentShortTextRectangle(System.IDisposable)">
            <summary>
            Request the calculated position of the content short text.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>Display rectangle for the image content.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetContentLongTextDisplayed(System.IDisposable)">
            <summary>
            Request the calculated display of the long text.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>True if the long text is being displayed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetContentLongTextRectangle(System.IDisposable)">
            <summary>
            Request the calculated position of the content long text.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>Display rectangle for the image content.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetTabBorderLeftDrawing(ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Gets if the tabs should be drawn from left to right for z-ordering.
            </summary>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>True for left to right, otherwise draw right to left.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetTabBorderSpacingGap(ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Gets the spacing used to separate each tab border instance.
            </summary>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>Number of pixels to space instances.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetTabBorderDisplayPadding(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Gets the padding used to position display elements completely inside border drawing.
            </summary>
            <param name="context">View layout context.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="state">State associated with rendering.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>Padding structure detailing all four edges.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetTabBorderPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Generate a graphics path that encloses the border itself.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetTabBackPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Generate a graphics path that encloses the border and is used when rendering a background to ensure the background does not draw over the border area.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawTabBorder(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Draw border on the inside edge of the specified rectangle.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <param name="tabBorderStyle">Style of tab border.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonBack(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Boolean,System.IDisposable)">
            <summary>
            Draw the background of a ribbon element.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="state">State associated with rendering.</param>
            <param name="palette">Palette used for sourcing settings.</param>
            <param name="orientation">Orientation for drawing.</param>
            <param name="composition">Drawing onto a composition element.</param>
            <param name="memento">Cached values to use when drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabContextTitle(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Draw a context ribbon tab title.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="paletteGeneral">Palette used for general ribbon settings.</param>
            <param name="paletteBack">Palette used for background ribbon settings.</param>
            <param name="memento">Cached storage for drawing objects.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonApplicationButton(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Draw the application button.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="state">State associated with rendering.</param>
            <param name="palette">Palette used for sourcing settings.</param>
            <param name="memento">Cached storage for drawing objects.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonApplicationTab(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,System.Drawing.Color,System.Drawing.Color,System.IDisposable)">
            <summary>
            Draw the application tab.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="state">State associated with rendering.</param>
            <param name="baseColor1">Base color1 used for drawing the ribbon tab.</param>
            <param name="baseColor2">Base color2 used for drawing the ribbon tab.</param>
            <param name="memento">Cached values to use when drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonClusterEdge(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon cluster edge.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteBack">Palette used for recovering drawing details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawSeparator(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,System.Windows.Forms.Orientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Perform drawing of a separator glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteBack">Background palette details.</param>
            <param name="paletteBorder">Border palette details.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="state">State associated with rendering.</param>
            <param name="canMove">Can the separator be moved.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetCheckBoxPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPalette,System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Calculate the requested display size for the check box.
            </summary>
            <param name="context">Render context.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="enabled">Should check box be displayed as enabled.</param>
            <param name="checkState">The checked state of the check box.</param>
            <param name="tracking">Should check box be displayed as hot tracking.</param>
            <param name="pressed">Should check box be displayed as pressed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawCheckBox(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPalette,System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Perform drawing of a check box.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="enabled">Should check box be displayed as enabled.</param>
            <param name="checkState">The checked state of the check box.</param>
            <param name="tracking">Should check box be displayed as hot tracking.</param>
            <param name="pressed">Should check box be displayed as pressed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetRadioButtonPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPalette,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Calculate the requested display size for the radio button.
            </summary>
            <param name="context">Render context.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="enabled">Should check box be displayed as enabled.</param>
            <param name="checkState">Checked state of the radio button.</param>
            <param name="tracking">Should check box be displayed as hot tracking.</param>
            <param name="pressed">Should check box be displayed as pressed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRadioButton(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPalette,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Perform drawing of a radio button.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="enabled">Should radio button be displayed as enabled.</param>
            <param name="checkState">Checked state of the radio button.</param>
            <param name="tracking">Should radio button be displayed as hot tracking.</param>
            <param name="pressed">Should radio button be displayed as pressed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.GetDropDownButtonPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Calculate the requested display size for the drop down button.
            </summary>
            <param name="context">Render context.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="state">State for which image size is needed.</param>
            <param name="orientation">How to orientate the image.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawDropDownButton(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Perform drawing of a drop down button.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="state">State for which image size is needed.</param>
            <param name="orientation">How to orientate the image.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawInputControlNumericUpGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw a numeric up button image appropriate for a input control.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Content palette for getting colors.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawInputControlNumericDownGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw a numeric down button image appropriate for a input control.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Content palette for getting colors.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawInputControlDropDownGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw a drop down grid appropriate for a input control.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Content palette for getting colors.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonDialogBoxLauncher(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon dialog box launcher glyph.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonDropArrow(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon drop arrow glyph.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonContextArrow(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon context arrow glyph.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonOverflow(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon overflow image.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonGroupSeparator(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon group separator.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawGridSortGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Windows.Forms.SortOrder,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Draw a grid sorting direction glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="sortOrder">Sorting order of the glyph.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Palette to use for sourcing values.</param>
            <param name="state">State associated with rendering.</param>
            <param name="rtl">Should be drawn from right to left.</param>
            <returns>Remainder space left over for other drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawGridRowGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.GridRowGlyph,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Draw a grid row glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="rowGlyph">Row glyph.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Palette to use for sourcing values.</param>
            <param name="state">State associated with rendering.</param>
            <param name="rtl">Should be drawn from right to left.</param>
            <returns>Remainder space left over for other drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawGridErrorGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Draw a grid error glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="state">State associated with rendering.</param>
            <param name="rtl">Should be drawn from right to left.</param>
            <returns>Remainder space left over for other drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawDragDropSolidGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteDragDrop)">
            <summary>
            Draw a solid area glyph suitable for a drag drop area.
            </summary>
            <param name="context">Render context.</param>
            <param name="drawRect">Drawing rectangle space.</param>
            <param name="dragDropPalette">Palette source of drawing values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.MeasureDragDropDockingGlyph(ComponentFactory.Krypton.Toolkit.RenderDragDockingData,ComponentFactory.Krypton.Toolkit.IPaletteDragDrop,ComponentFactory.Krypton.Toolkit.PaletteDragFeedback)">
            <summary>
            Measure the drag and drop docking glyphs.
            </summary>
            <param name="dragData">Set of drag docking data.</param>
            <param name="dragDropPalette">Palette source of drawing values.</param>
            <param name="feedback">Feedback requested.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawDragDropDockingGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.RenderDragDockingData,ComponentFactory.Krypton.Toolkit.IPaletteDragDrop,ComponentFactory.Krypton.Toolkit.PaletteDragFeedback)">
            <summary>
            Draw a solid area glyph suitable for a drag drop area.
            </summary>
            <param name="context">Render context.</param>
            <param name="dragData">Set of drag docking data.</param>
            <param name="dragDropPalette">Palette source of drawing values.</param>
            <param name="feedback">Feedback requested.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Evaluate if transparent painting is needed for background palette.
            </summary>
            <param name="paletteBack">Background palette to test.</param>
            <param name="state">Element state associated with palette.</param>
            <returns>True if transparent painting required.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Evaluate if transparent painting is needed for background or border palettes.
            </summary>
            <param name="paletteBack">Background palette to test.</param>
            <param name="paletteBorder">Background palette to test.</param>
            <param name="state">Element state associated with palette.</param>
            <returns>True if transparent painting required.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawTrackTicksGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteElementColor,System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Boolean,System.Drawing.Size,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw the track bar ticks glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="state">Element state.</param>
            <param name="elementPalette">Source of palette colors.</param>
            <param name="drawRect">Drawing rectangle that should contain ticks.</param>
            <param name="orientation">Orientation of the drawing area.</param>
            <param name="topRight">Drawing on the topRight or the bottomLeft.</param>
            <param name="positionSize">Size of the position indicator.</param>
            <param name="minimum">First value.</param>
            <param name="maximum">Last value.</param>
            <param name="frequency">How often ticks are drawn.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawTrackGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteElementColor,System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Boolean)">
            <summary>
            Draw the track bar track glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="state">Element state.</param>
            <param name="elementPalette">Source of palette colors.</param>
            <param name="drawRect">Drawing rectangle that should contain the track.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="volumeControl">Drawing as a volume control or standard slider.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawTrackPositionGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteElementColor,System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Windows.Forms.TickStyle)">
            <summary>
            Draw the track bar position glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="state">Element state.</param>
            <param name="elementPalette">Source of palette colors.</param>
            <param name="drawRect">Drawing rectangle that should contain the track.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="tickStyle">Tick marks that surround the position.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonGroupAreaBorder1And2(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.Boolean,System.Boolean,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonGroupAreaBorder3And4(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable,System.Boolean)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonGroupAreaBorderContext(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabTracking2007(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabTrackingTop2007(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabTrackingTopDraw2007(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabTrackingLeft2007(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabTrackingLeftDraw2007(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabTrackingRight2007(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabTrackingRightDraw2007(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabTrackingBottom2007(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabTrackingBottomDraw2007(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2007,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabTracking2010(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.IDisposable,System.Boolean)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabTrackingTop2010(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabTrackingBottom2010(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabTrackingLeft2010(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabTrackingRight2010(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabFocus2010(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabFocusTop2010(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabFocusBottom2010(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabFocusLeft2010(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabFocusRight2010(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabTracking2010)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabGlowing(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabGlowingTop(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabGlowingLeft(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabGlowingRight(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabGlowingBottom(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabGlowing)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelected2007(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedTop2007(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedTopDraw2007(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedLeft2007(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedLeftDraw2007(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedRight2007(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedRightDraw2007(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedBottom2007(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedBottomDraw2007(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2007,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelected2010(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.IDisposable,System.Boolean)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedTop2010(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedTopDraw2010(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedLeft2010(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedLeftDraw2010(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedRight2010(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedRightDraw2010(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedBottom2010(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabSelectedBottomDraw2010(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabSelected2010,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabContextSelected(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabContextSelectedTop(System.Drawing.Rectangle,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabContextSelectedTopDraw(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabContextSelectedLeft(System.Drawing.Rectangle,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabContextSelectedLeftDraw(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabContextSelectedRight(System.Drawing.Rectangle,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabContextSelectedRightDraw(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabContextSelectedBottom(System.Drawing.Rectangle,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabContextSelectedBottomDraw(System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.MementoRibbonTabContextSelected,System.Drawing.Graphics)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabHighlight(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.IDisposable,System.Boolean)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabHighlightTop(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabHighlightTopDraw(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight,System.Drawing.Graphics,System.Boolean)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabHighlightLeft(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabHighlightLeftDraw(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight,System.Drawing.Graphics,System.Boolean)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabHighlightRight(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabHighlightRightDraw(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight,System.Drawing.Graphics,System.Boolean)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabHighlightBottom(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabHighlightBottomDraw(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,ComponentFactory.Krypton.Toolkit.MementoRibbonTabHighlight,System.Drawing.Graphics,System.Boolean)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonTabContext(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonAppButton(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.Boolean,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonAppButtonBorder1(System.Drawing.Graphics,ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonAppButtonUpperHalf(System.Drawing.Graphics,ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton,ComponentFactory.Krypton.Toolkit.PaletteState,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonAppButtonLowerHalf(System.Drawing.Graphics,ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton,ComponentFactory.Krypton.Toolkit.PaletteState,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonAppButtonGlowCenter(System.Drawing.Graphics,ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton,ComponentFactory.Krypton.Toolkit.PaletteState,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonAppButtonGlowUpperBottom(System.Drawing.Graphics,ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton,ComponentFactory.Krypton.Toolkit.PaletteState,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonAppButtonBorder2(System.Drawing.Graphics,ComponentFactory.Krypton.Toolkit.MementoRibbonAppButton,ComponentFactory.Krypton.Toolkit.PaletteState,System.Drawing.Color,System.Boolean)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonAppTab(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,System.Drawing.Color,System.Drawing.Color,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonGroupNormalBorder(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.Boolean,System.Boolean,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonGroupNormalBorderSep(System.Boolean,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonGroupNormalTitle(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonGroupCollapsedBorder(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonGroupCollapsedFrameBorder(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonGroupGradientOne(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonGroupGradientTwo(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.Single,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonQATMinibarSingle(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.Boolean,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonQATMinibarDouble(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.Boolean,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonLinear(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonLinearBorder(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonAppMenuInner(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonAppMenuOuter(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonQATFullbarRound(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonQATFullbarSquare(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.DrawRibbonQATOverflow(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Internal rendering method.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RenderStandard.StandardContentMemento">
            <summary>
            Internal help class used to store content rendering details.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.StandardContentMemento.#ctor">
            <summary>
            Inititialize a new instance of the StandardContentMemento class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.StandardContentMemento.Dispose">
            <summary>
            Dispose of resources.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderStandard.StandardContentMemento.AdjustForOrientation(ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Drawing.Rectangle)">
            <summary>
            Adjust the memento values to apply an orientation.
            </summary>
            <param name="orientation">Visual orientation of contents.</param>
            <param name="displayRect">Rectangle that contains the contents.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualPanel">
            <summary>
            Base class used for implementation of panel controls.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.VisualPanel.Initialized">
            <summary>
            Occurs when the control is initialized.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.VisualPanel.PaletteChanged">
            <summary>
            Occurs when the palette changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.#ctor">
            <summary>
            Initialize a new instance of the VisualPanel class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.IsInitialized">
            <summary>
            Gets a value indicating if the control is initialized.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.IsInitializing">
            <summary>
            Gets a value indicating if the control is initialized.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.ContextMenuStrip">
            <summary>
            Gets or sets the ContextMenuStrip associated with this control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.PaletteMode">
            <summary>
            Gets or sets the palette to be applied.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.ResetPaletteMode">
            <summary>
            Resets the PaletteMode property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.Palette">
            <summary>
            Gets and sets the custom palette implementation.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.ResetPalette">
            <summary>
            Resets the Palette property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.Renderer">
            <summary>
            Gets access to the current renderer.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.CreateToolStripRenderer">
            <summary>
            Create a tool strip renderer appropriate for the current renderer/palette pair.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.BackgroundImage">
            <summary>
            Gets or sets the background image displayed in the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.AttachGlobalEvents">
            <summary>
            Attach the control to global events.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.UnattachGlobalEvents">
            <summary>
            Attach the control to global events.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.ContextMenuClosed">
            <summary>
            Called when a context menu has just been closed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.BorderStyle">
            <summary>
            Gets or sets the border style for the VisualPanel. 
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.KryptonResetCounters">
            <summary>
            Reset the internal counters.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.KryptonLayoutCounter">
            <summary>
            Gets the number of layout cycles performed since last reset.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.KryptonPaintCounter">
            <summary>
            Gets the number of paint cycles performed since last reset.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.ViewManager">
            <summary>
            Gets and sets the ViewManager instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.Redirector">
            <summary>
            Gets access to the palette redirector.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.NeedPaintDelegate">
            <summary>
            Gets access to the need paint delegate.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.NeedTransparentPaint">
            <summary>
            Gets a value indicating if transparent paint is needed
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.GetResolvedPalette">
            <summary>
            Gets the resolved palette to actually use when drawing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnInitialized(System.EventArgs)">
            <summary>
            Raises the Initialized event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnPaletteChanged(System.EventArgs)">
            <summary>
            Raises the PaletteChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.EvalTransparentPaint">
            <summary>
            Work out if this control needs to paint transparent areas.
            </summary>
            <returns>True if paint required; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.EvalInvokePaint">
            <summary>
            Work out if this control needs to use Invoke to force a repaint.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.TransparentParent">
            <summary>
            Gets the control reference that is the parent for transparent drawing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Processes a notification from palette storage of a button spec change.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.UpdateGlobalEvents(System.Boolean)">
            <summary>
            Update global event attachments.
            </summary>
            <param name="attach">True if attaching; otherwise false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualPanel.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Raises the RightToLeftChanged event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualPanel.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonImageStates">
            <summary>
            Storage for button content value information.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonImageStates.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonImageStates.ImageNormal">
            <summary>
            Gets and sets the button image for normal state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonImageStates.ResetImageNormal">
            <summary>
            Resets the ImageNormal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonImageStates.ImageDisabled">
            <summary>
            Gets and sets the button image for disabled state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonImageStates.ResetImageDisabled">
            <summary>
            Resets the ImageDisabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonImageStates.ImagePressed">
            <summary>
            Gets and sets the button image for pressed state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonImageStates.ResetImagePressed">
            <summary>
            Resets the ImagePressed property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonImageStates.ImageTracking">
            <summary>
            Gets and sets the button image for tracking state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonImageStates.ResetImageTracking">
            <summary>
            Resets the ImageTracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonImageStates.ImageCheckedNormal">
            <summary>
            Gets and sets the button image for checked normal state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonImageStates.ImageCheckedPressed">
            <summary>
            Gets and sets the button image for checked pressed state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonImageStates.ImageCheckedTracking">
            <summary>
            Gets and sets the button image for checked tracking state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonImageStates.CopyFrom(ComponentFactory.Krypton.Toolkit.ButtonImageStates)">
            <summary>
            Value copy form the provided source to ourself.
            </summary>
            <param name="source">Source instance.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ButtonValues">
            <summary>
            Storage for button content value information.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ButtonValues.TextChanged">
            <summary>
            Occures when the value of the Text property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonValues.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ButtonValues class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonValues.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonValues.Image">
            <summary>
            Gets and sets the button image.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonValues.ResetImage">
            <summary>
            Resets the Image property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonValues.ImageTransparentColor">
            <summary>
            Gets and sets the label image transparent color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonValues.ResetImageTransparentColor">
            <summary>
            Resets the ImageTransparentColor property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonValues.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image transparent color.
            </summary>
            <param name="state">The state for which the image color is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonValues.ImageStates">
            <summary>
            Gets access to the state specific images for the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonValues.Text">
            <summary>
            Gets and sets the button text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonValues.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ButtonValues.ExtraText">
            <summary>
            Gets and sets the button extra text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonValues.ResetExtraText">
            <summary>
            Resets the Description property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonValues.CreateImageStates">
            <summary>
            Create the storage for the image states.
            </summary>
            <returns>Storage object.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonValues.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonValues.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ButtonValues.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.CheckButtonImageStates">
            <summary>
            Storage for check button content value information.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckButtonImageStates.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckButtonImageStates.ImageCheckedNormal">
            <summary>
            Gets and sets the button image for checked normal state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckButtonImageStates.ResetImageCheckedNormal">
            <summary>
            Resets the ImageCheckedNormal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckButtonImageStates.ImageCheckedPressed">
            <summary>
            Gets and sets the button image for checked pressed state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckButtonImageStates.ResetImageCheckedPressed">
            <summary>
            Resets the ImageCheckedPressed property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CheckButtonImageStates.ImageCheckedTracking">
            <summary>
            Gets and sets the button image for checked tracking state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckButtonImageStates.ResetImageCheckedTracking">
            <summary>
            Resets the ImageCheckedTracking property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckButtonImageStates.CopyFrom(ComponentFactory.Krypton.Toolkit.CheckButtonImageStates)">
            <summary>
            Value copy form the provided source to ourself.
            </summary>
            <param name="source">Source instance.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.CheckButtonValues">
            <summary>
            Storage for button content value information.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckButtonValues.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the CheckButtonValues class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckButtonValues.CreateImageStates">
            <summary>
            Create the storage for the image states.
            </summary>
            <returns>Storage object.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CheckButtonValues.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ContextMenuImages">
            <summary>
            Storage for context menu images.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuImages.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ContextMenuImages class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuImages.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuImages.Checked">
            <summary>
            Gets and sets the image for a checked context menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuImages.ResetChecked">
            <summary>
            Resets the Checked property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuImages.Indeterminate">
            <summary>
            Gets and sets the image for an indeterminate context menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuImages.ResetIndeterminate">
            <summary>
            Resets the Indeterminate property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ContextMenuImages.SubMenu">
            <summary>
            Gets and sets an image indicating a sub-menu on a context menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ContextMenuImages.ResetSubMenu">
            <summary>
            Resets the SubMenu property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ColorButtonValues">
            <summary>
            Storage for color button content value information.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ColorButtonValues.TextChanged">
            <summary>
            Occures when the value of the Text property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ColorButtonValues.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ColorButtonValues class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ColorButtonValues.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ColorButtonValues.Image">
            <summary>
            Gets and sets the button image.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ColorButtonValues.ResetImage">
            <summary>
            Resets the Image property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ColorButtonValues.ImageTransparentColor">
            <summary>
            Gets and sets the label image transparent color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ColorButtonValues.ResetImageTransparentColor">
            <summary>
            Resets the ImageTransparentColor property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ColorButtonValues.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image transparent color.
            </summary>
            <param name="state">The state for which the image color is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ColorButtonValues.ImageStates">
            <summary>
            Gets access to the state specific images for the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ColorButtonValues.Text">
            <summary>
            Gets and sets the button text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ColorButtonValues.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ColorButtonValues.ExtraText">
            <summary>
            Gets and sets the button extra text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ColorButtonValues.ResetExtraText">
            <summary>
            Resets the Description property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ColorButtonValues.SelectedColor">
            <summary>
            Gets and sets the selected color for the composite image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ColorButtonValues.EmptyBorderColor">
            <summary>
            Gets and sets the empty border color for the composite image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ColorButtonValues.SelectedRect">
            <summary>
            Gets and sets the selected rectangle for the composite image.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ColorButtonValues.CreateImageStates">
            <summary>
            Create the storage for the image states.
            </summary>
            <returns>Storage object.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ColorButtonValues.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ColorButtonValues.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ColorButtonValues.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.CaptionValues">
            <summary>
            Storage for the group box caption values.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CaptionValues.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the CaptionValues class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CaptionValues.GetImageDefault">
            <summary>
            Gets the default image value.
            </summary>
            <returns>Image reference.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CaptionValues.GetHeadingDefault">
            <summary>
            Gets the default heading value.
            </summary>
            <returns>String reference.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.CaptionValues.GetDescriptionDefault">
            <summary>
            Gets the default description value.
            </summary>
            <returns>String reference.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.CaptionValues.Description">
            <summary>
            Gets and sets the header description text.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.TreeViewImages">
            <summary>
            Storage for tree view images.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TreeViewImages.#ctor">
            <summary>
            Initialize a new instance of the TreeViewImages class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TreeViewImages.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the TreeViewImages class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TreeViewImages.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TreeViewImages.Plus">
            <summary>
            Gets and sets the image for use to expand a tree node.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TreeViewImages.ResetPlus">
            <summary>
            Resets the collapse property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.TreeViewImages.Minus">
            <summary>
            Gets and sets the image for use to collapse a tree node.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.TreeViewImages.ResetMinus">
            <summary>
            Resets the Minus property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.GalleryImages">
            <summary>
            Storage for gallery button images.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GalleryImages.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the GalleryImages class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GalleryImages.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GalleryImages.Up">
            <summary>
            Gallery up button images.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GalleryImages.Down">
            <summary>
            Gallery down button images.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GalleryImages.DropDown">
            <summary>
            Gallery drop down button images.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.DropDownButtonImages">
            <summary>
            Storage for drop down button images.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DropDownButtonImages.#ctor">
            <summary>
            Initialize a new instance of the DropDownButtonImages class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DropDownButtonImages.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the DropDownButtonImages class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DropDownButtonImages.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DropDownButtonImages.Common">
            <summary>
            Gets and sets the common image that other drop down button images inherit from.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DropDownButtonImages.ResetCommon">
            <summary>
            Resets the Common property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DropDownButtonImages.Disabled">
            <summary>
            Gets and sets the image for use when the drop down button is disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DropDownButtonImages.ResetDisabled">
            <summary>
            Resets the Disabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DropDownButtonImages.Normal">
            <summary>
            Gets and sets the image for use when the drop down button is normal.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DropDownButtonImages.ResetNormal">
            <summary>
            Resets the Normal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DropDownButtonImages.Tracking">
            <summary>
            Gets and sets the image for use when the drop down button is tracking.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DropDownButtonImages.ResetTracking">
            <summary>
            Resets the Tracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.DropDownButtonImages.Pressed">
            <summary>
            Gets and sets the image for use when the drop down button is pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.DropDownButtonImages.ResetPressed">
            <summary>
            Resets the Pressed property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.FixedContentValue">
            <summary>
            Stores a text/extraText/Image triple of values as a content values source.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.FixedContentValue.#ctor">
            <summary>
            Initialize a new instance of the FixedContentValue class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.FixedContentValue.#ctor(System.String,System.String,System.Drawing.Image,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the FixedContentValue class.
            </summary>
            <param name="shortText">Initial short text value.</param>
            <param name="longText">Initial long text value.</param>
            <param name="image">Initial image value.</param>
            <param name="imageTransparentColor">Initial image transparent color value.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.FixedContentValue.ShortText">
            <summary>
            Gets and sets the short text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.FixedContentValue.LongText">
            <summary>
            Gets and sets the long text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.FixedContentValue.Image">
            <summary>
            Gets and sets the image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.FixedContentValue.ImageTransparentColor">
            <summary>
            Gets and sets the image transparent color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.FixedContentValue.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.FixedContentValue.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.FixedContentValue.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.FixedContentValue.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.GalleryButtonImages">
            <summary>
            Storage for gallery button state specific images.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GalleryButtonImages.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the GalleryButtonImages class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GalleryButtonImages.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GalleryButtonImages.Common">
            <summary>
            Gets and sets the common image that other gallery button images inherit from.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GalleryButtonImages.ResetCommon">
            <summary>
            Resets the Common property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GalleryButtonImages.Disabled">
            <summary>
            Gets and sets the image for use when the gallery button is disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GalleryButtonImages.ResetDisabled">
            <summary>
            Resets the Disabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GalleryButtonImages.Normal">
            <summary>
            Gets and sets the image for use when the gallery button is normal.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GalleryButtonImages.ResetNormal">
            <summary>
            Resets the Normal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GalleryButtonImages.Tracking">
            <summary>
            Gets and sets the image for use when the gallery button is hot tracking.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GalleryButtonImages.ResetTracking">
            <summary>
            Resets the Tracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.GalleryButtonImages.Pressed">
            <summary>
            Gets and sets the image for use when the gallery button is pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.GalleryButtonImages.ResetPressed">
            <summary>
            Resets the Pressed property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RadioButtonImages">
            <summary>
            Storage for radio button images.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonImages.#ctor">
            <summary>
            Initialize a new instance of the RadioButtonImages class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonImages.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the RadioButtonImages class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RadioButtonImages.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RadioButtonImages.Common">
            <summary>
            Gets and sets the common image that other radio button images inherit from.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonImages.ResetCommon">
            <summary>
            Resets the Common property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RadioButtonImages.UncheckedDisabled">
            <summary>
            Gets and sets the image for use when the radio button is not checked and disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonImages.ResetUncheckedDisabled">
            <summary>
            Resets the UncheckedDisabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RadioButtonImages.UncheckedNormal">
            <summary>
            Gets and sets the image for use when the radio button is unchecked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonImages.ResetUncheckedNormal">
            <summary>
            Resets the UncheckedNormal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RadioButtonImages.UncheckedTracking">
            <summary>
            Gets and sets the image for use when the radio button is unchecked and hot tracking.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonImages.ResetUncheckedTracking">
            <summary>
            Resets the UncheckedTracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RadioButtonImages.UncheckedPressed">
            <summary>
            Gets and sets the image for use when the radio button is unchecked and pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonImages.ResetUncheckedPressed">
            <summary>
            Resets the UncheckedPressed property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RadioButtonImages.CheckedDisabled">
            <summary>
            Gets and sets the image for use when the radio button is checked but disabled.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonImages.ResetCheckedDisabled">
            <summary>
            Resets the CheckedDisabled property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RadioButtonImages.CheckedNormal">
            <summary>
            Gets and sets the image for use when the radio button is checked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonImages.ResetCheckedNormal">
            <summary>
            Resets the CheckedNormal property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RadioButtonImages.CheckedTracking">
            <summary>
            Gets and sets the image for use when the radio button is checked and hot tracking.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonImages.ResetCheckedTracking">
            <summary>
            Resets the CheckedTracking property to its default value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RadioButtonImages.CheckedPressed">
            <summary>
            Gets and sets the image for use when the radio button is checked and pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RadioButtonImages.ResetCheckedPressed">
            <summary>
            Resets the CheckedPressed property to its default value.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.HeaderGroupValuesPrimary">
            <summary>
            Storage for the primary header of the header group control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderGroupValuesPrimary.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the HeaderGroupValuesPrimary class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderGroupValuesPrimary.GetHeadingDefault">
            <summary>
            Gets the default heading value.
            </summary>
            <returns>String reference.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderGroupValuesPrimary.GetDescriptionDefault">
            <summary>
            Gets the default description value.
            </summary>
            <returns>String reference.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.HeaderGroupValuesPrimary.Heading">
            <summary>
            Gets and sets the header text.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.HeaderGroupValuesSecondary">
            <summary>
            Storage for the secondary header of the header group control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderGroupValuesSecondary.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the HeaderGroupValuesSecondary class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderGroupValuesSecondary.GetImageDefault">
            <summary>
            Gets the default image value.
            </summary>
            <returns>Image reference.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderGroupValuesSecondary.GetHeadingDefault">
            <summary>
            Gets the default heading value.
            </summary>
            <returns>String reference.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderGroupValuesSecondary.GetDescriptionDefault">
            <summary>
            Gets the default description value.
            </summary>
            <returns>String reference.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.HeaderGroupValuesSecondary.Heading">
            <summary>
            Gets and sets the heading text.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.HeaderValues">
            <summary>
            Storage for standard header storage.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValues.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the HeaderValues class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValues.GetHeadingDefault">
            <summary>
            Gets the default heading value.
            </summary>
            <returns>String reference.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValues.GetDescriptionDefault">
            <summary>
            Gets the default description value.
            </summary>
            <returns>String reference.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.HeaderValuesBase">
            <summary>
            Storage for header content value information.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.TextChanged">
            <summary>
            Occures when the value of the Text property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the HeaderValuesBase class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.GetImageDefault">
            <summary>
            Gets the default image value.
            </summary>
            <returns>Image reference.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.GetHeadingDefault">
            <summary>
            Gets the default heading value.
            </summary>
            <returns>String reference.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.GetDescriptionDefault">
            <summary>
            Gets the default description value.
            </summary>
            <returns>String reference.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.Image">
            <summary>
            Gets and sets the heading image.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.ResetImage">
            <summary>
            Resets the Image property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.ImageTransparentColor">
            <summary>
            Gets and sets the heading image transparent color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.ResetImageTransparentColor">
            <summary>
            Resets the ImageTransparentColor property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image transparent color.
            </summary>
            <param name="state">The state for which the image color is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.Heading">
            <summary>
            Gets and sets the heading text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.ResetHeading">
            <summary>
            Resets the Heading property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.Description">
            <summary>
            Gets and sets the header description text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.ResetDescription">
            <summary>
            Resets the Description property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.HeaderValuesBase.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.LabelValues">
            <summary>
            Storage for label content value information.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.LabelValues.TextChanged">
            <summary>
            Occures when the value of the Text property changes.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LabelValues.#ctor(ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the LabelValues class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.LabelValues.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.LabelValues.Image">
            <summary>
            Gets and sets the label image.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LabelValues.ResetImage">
            <summary>
            Resets the Image property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LabelValues.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.LabelValues.ImageTransparentColor">
            <summary>
            Gets and sets the label image transparent color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LabelValues.ResetImageTransparentColor">
            <summary>
            Resets the ImageTransparentColor property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LabelValues.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image transparent color.
            </summary>
            <param name="state">The state for which the image color is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.LabelValues.Text">
            <summary>
            Gets and sets the label text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LabelValues.ResetText">
            <summary>
            Resets the Text property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LabelValues.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.LabelValues.ExtraText">
            <summary>
            Gets and sets the label extra text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LabelValues.ResetExtraText">
            <summary>
            Resets the Description property to its default value.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.LabelValues.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ShortTextValue.ShortText">
            <summary>
            Gets and sets the short text value to use.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ShortTextValue.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDecorator">
            <summary>
            Base class from which all decorator views inherit.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.#ctor(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Initialize a new instance of the ViewBase class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.Enabled">
            <summary>
            Gets and sets the enabled state of the element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.Visible">
            <summary>
            Gets and sets the enabled state of the element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.ClientRectangle">
            <summary>
            Gets and sets the rectangle bounding the client area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.ClientLocation">
            <summary>
            Gets and sets the location of the view inside the parent view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.ClientSize">
            <summary>
            Gets and sets the size of the view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.ClientWidth">
            <summary>
            Gets and sets the width of the view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.ClientHeight">
            <summary>
            Gets and sets the height of the view.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Evaluate the need for drawing transparent areas.
            </summary>
            <param name="context">Evaluation context.</param>
            <returns>True if transparent areas exist; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.Render(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.Add(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Append a view to the collection.
            </summary>
            <param name="item">ViewBase reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.Clear">
            <summary>
            Remove all views from the collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.Contains(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Determines whether the collection contains the view.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>True if view found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.ContainsRecurse(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Determines whether any part of the view hierarchy is the specified view.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>True if view found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.CopyTo(ComponentFactory.Krypton.Toolkit.ViewBase[],System.Int32)">
            <summary>
            Copies views to specified array starting at particular index.
            </summary>
            <param name="array">Target array.</param>
            <param name="arrayIndex">Starting array index.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.Remove(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Removes first occurance of specified view.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>True if removed; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.Count">
            <summary>
            Gets the number of views in collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.IndexOf(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Determines the index of the specified view in the collection.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>-1 if not found; otherwise index position.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.Insert(System.Int32,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Inserts a view to the collection at the specified index.
            </summary>
            <param name="index">Insert index.</param>
            <param name="item">ViewBase reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.RemoveAt(System.Int32)">
            <summary>
            Removes the view at the specified index.
            </summary>
            <param name="index">Remove index.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.Item(System.Int32)">
            <summary>
            Gets or sets the view at the specified index.
            </summary>
            <param name="index">ViewBase index.</param>
            <returns>ViewBase at specified index.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.GetEnumerator">
            <summary>
            Shallow enumerate forward over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.Recurse">
            <summary>
            Deep enumerate forward over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.Reverse">
            <summary>
            Shallow enumerate backwards over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.ReverseRecurse">
            <summary>
            Deep enumerate backwards over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.MouseController">
            <summary>
            Gets and sets the associated mouse controller.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.KeyController">
            <summary>
            Gets and sets the associated key controller.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.SourceController">
            <summary>
            Gets and sets the associated source controller.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.MouseEnter">
            <summary>
            Mouse has entered the view.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.MouseMove(System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.MouseDown(System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.MouseUp(System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.MouseLeave(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.KeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.KeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.KeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.ElementState">
            <summary>
            Gets and sets the visual state of the element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.State">
            <summary>
            Gets the visual state taking into account the owning controls state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.FixedState">
            <summary>
            Set a fixed state to override usual behavior and appearance
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.ClearFixedState">
            <summary>
            Clear down the use of the fixed state
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.IsFixed">
            <summary>
            Gets a value indicating if view is using a fixed state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.DependantEnabledState">
            <summary>
            Get and set the view the enabled state of this view element is dependant on.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecorator.IsEnableDependant">
            <summary>
            Gets a value indicating if view enabled state is depedant on another view.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecorator.ViewFromPoint(System.Drawing.Point)">
            <summary>
            Find the view that contains the specified point.
            </summary>
            <param name="pt">Point in view coordinates.</param>
            <returns>ViewBase if a match is found; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager">
            <summary>
            ViewMananger for context menu handling.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.#ctor(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Initialize a new instance of the ViewContextMenuManager class.
            </summary>
            <param name="control">Owning control.</param>
            <param name="root">Root of the view hierarchy.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.Dispose">
            <summary>
            Clean up any resources.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.SetTarget(ComponentFactory.Krypton.Toolkit.IContextMenuTarget,System.Boolean)">
            <summary>
            Set the provided target as the current target.
            </summary>
            <param name="target">Reference to the new target.</param>
            <param name="startTimer">Should a timer be started for handling sub menu showing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.SetTargetSubMenu(ComponentFactory.Krypton.Toolkit.IContextMenuTarget)">
            <summary>
            Set the provided target as the current target and it is already showing a sub menu
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.ClearTarget(ComponentFactory.Krypton.Toolkit.IContextMenuTarget)">
            <summary>
            Clear the provided target from being the current target.
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.ClearTargetSubMenu(ComponentFactory.Krypton.Toolkit.IContextMenuTarget)">
            <summary>
            Clear the provided target as no longer showing a sub menu.
            </summary>
            <param name="target">Target that used to be showing a sub menu.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.KeyUp">
            <summary>
            Handle up key being pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.KeyDown">
            <summary>
            Handle down key being pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.KeyLeft(System.Boolean)">
            <summary>
            Handle left key being pressed.
            </summary>
            <param name="wrap">Should calculation wrap around the left edge.</param>
            <returns>Did the calculation hit the left edge.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.KeyRight">
            <summary>
            Handle right key being pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.KeyTab(System.Boolean)">
            <summary>
            Handle tab key being pressed.
            </summary>
            <param name="shift">Was shift key pressed for the tab.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.KeyHome">
            <summary>
            Handle home key being pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.KeyEnd">
            <summary>
            Handle end key being pressed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.KeyMnemonic(System.Char)">
            <summary>
            Handle key that could be interpreted as a mnemonic.
            </summary>
            <param name="charCode">Key code to test against.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContextMenuManager.DoesStackedClientMouseDownBecomeCurrent(System.Windows.Forms.Message,System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause it to become the current tracking popup.
            </summary>
            <param name="m">Original message.</param>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDecoratorFixedSize">
            <summary>
            Override the contained child to present a fixed size.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecoratorFixedSize.#ctor(ComponentFactory.Krypton.Toolkit.ViewBase,System.Drawing.Size)">
            <summary>
            Initialize a new instance of the ViewBase class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecoratorFixedSize.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDecoratorFixedSize.FixedSize">
            <summary>
            Gets and sets the fixed size for laying out the contained child element.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDecoratorFixedSize.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawTP">
            <summary>
            Draw the track for the track bar.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTP.#ctor(ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar)">
            <summary>
            Initialize a new instance of the ViewDrawTrackPosition class.
            </summary>
            <param name="drawTrackBar">Reference to owning track bar.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTP.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTP.ViewDrawTrackBar">
            <summary>
            Gets access to the owning trackbar.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTP.ViewDrawTrackPosition">
            <summary>
            Gets access to the track position element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTP.Enabled">
            <summary>
            Gets and sets the enabled state of the element.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTP.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTP.NearestValueFromPoint(System.Drawing.Point)">
            <summary>
            Find nearest value given the mouse postion within track area.
            </summary>
            <param name="pt">Mouse position,</param>
            <returns>Nearest value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTP.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawTrackPosition">
            <summary>
            Draw the track for the track bar.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackPosition.#ctor(ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar)">
            <summary>
            Initialize a new instance of the ViewDrawTrackPosition class.
            </summary>
            <param name="drawTrackBar">Reference to owning track bar.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackPosition.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackPosition.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackPosition.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackPosition.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawTrackTrack">
            <summary>
            Draw the track for the track bar.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackTrack.#ctor(ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar)">
            <summary>
            Initialize a new instance of the ViewDrawTrackTrack class.
            </summary>
            <param name="drawTrackBar">Reference to owning track bar.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackTrack.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackTrack.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackTrack.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackTrack.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar">
            <summary>
            Draw and operate a track bar.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.ValueChanged">
            <summary>
            Occurs when the value of the Value property changes.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.Scroll">
            <summary>
            Occurs when the value has changed because of a user change.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.#ctor(ComponentFactory.Krypton.Toolkit.PaletteTrackBarStatesOverride,ComponentFactory.Krypton.Toolkit.PaletteTrackBarStates,ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStatesOverride,ComponentFactory.Krypton.Toolkit.PaletteTrackBarPositionStatesOverride,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawTrackBar class.
            </summary>
            <param name="stateNormal">Referenece to normal state values.</param>
            <param name="stateDisabled">Referenece to disabled state values.</param>
            <param name="stateTracking">Referenece to tracking state values.</param>
            <param name="statePressed">Referenece to pressed state values.</param>
            <param name="needPaint">Delegate used to request repainting.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.TrackPosition">
            <summary>
            Gets the track position element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.TrackBarSize">
            <summary>
            Gets and sets the track bar size.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.VolumeControl">
            <summary>
            Gets and sets if the track bar displays like a volume control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.RightToLeft">
            <summary>
            Gets and sets the right to left setting.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.TickStyle">
            <summary>
            Gets or sets a value indicating how to display the tick marks on the track bar.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.TickFrequency">
            <summary>
            Gets or sets a value that specifies the delta between ticks drawn on the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.Orientation">
            <summary>
            Gets or sets a value indicating the horizontal or vertical orientation of the track bar.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.Maximum">
            <summary>
            Gets or sets the upper limit of the range this trackbar is working with.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.Minimum">
            <summary>
            Gets or sets the lower limit of the range this trackbar is working with.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.Value">
            <summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the track bar.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.ScrollValue">
            <summary>
            Sets a numeric value that represents the current position because of a user change.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.SmallChange">
            <summary>
            Gets or sets the value added to or subtracted from the Value property when the scroll box is moved a small distance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the Value property when the scroll box is moved a large distance.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.SetRange(System.Int32,System.Int32)">
            <summary>
            Sets the minimum and maximum values for a TrackBar.
            </summary>
            <param name="minValue">The lower limit of the range of the track bar.</param>
            <param name="maxValue">The upper limit of the range of the track bar.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.SetFixedState(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.Enabled">
            <summary>
            Gets and sets the enabled state of the element.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the MouseWheel event.
            </summary>
            <param name="e">Event arguments for the event.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.PositionSize">
            <summary>
            Gets the size of the position indicator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.TrackSize">
            <summary>
            Gets the size of the track.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.TickSize">
            <summary>
            Gets the size of the tick area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.StateNormal">
            <summary>
            Gets access to the normal state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.StateDisabled">
            <summary>
            Gets access to the disabled state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.StateTracking">
            <summary>
            Gets access to the tracking state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.StatePressed">
            <summary>
            Gets access to the pressed state.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.PerformNeedPaint(System.Boolean)">
            <summary>
            Raises a need paint event.
            </summary>
            <param name="needLayout">Does the layout need recalculating.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.OnValueChanged(System.EventArgs)">
            <summary>
            Raises the ValueChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar.OnScroll(System.EventArgs)">
            <summary>
            Raises the Scroll event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawTrackTicks">
            <summary>
            Draw the tick marks for the track bar.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackTicks.#ctor(ComponentFactory.Krypton.Toolkit.ViewDrawTrackBar,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawTrackTicks class.
            </summary>
            <param name="drawTrackBar">Reference to owning track bar.</param>
            <param name="topRight">Showing ticks to the top/right or bottom/left.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackTicks.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackTicks.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackTicks.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawTrackTicks.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawGroupBoxDocker">
            <summary>
            Extends the ViewDrawDocker for use in the KryptonGroupBox.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawGroupBoxDocker.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Initialize a new instance of the ViewDrawGroupBoxDocker class.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawGroupBoxDocker.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawGroupBoxDocker.CaptionOverlap">
            <summary>
            Gets and the sets the percentage of overlap for the caption and group area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawGroupBoxDocker.DrawBorderLast">
            <summary>
            Gets the drawing of the border before or after children.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawGroupBoxDocker.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Evaluate the need for drawing transparent areas.
            </summary>
            <param name="context">Evaluation context.</param>
            <returns>True if transparent areas exist; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawGroupBoxDocker.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawGroupBoxDocker.RenderAfter(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering after child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawGroupBoxDocker.RenderBorder(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Draw the canvas border.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown">
            <summary>
            View element that can draw a month calendar button.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown.DrawMonthCalendarGlyph">
            <summary>
            Specific the possible glyphs the button can draw.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown.DrawMonthCalendarGlyph.DropDownButton">
            <summary>
            Specifies the drop down button glyph.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown.DrawMonthCalendarGlyph.UpButton">
            <summary>
            Specifies the up button glyph.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown.DrawMonthCalendarGlyph.DownButton">
            <summary>
            Specifies the down button glyph.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown.Click">
            <summary>
            Occurs when the button is clicked.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown.MouseSelect">
            <summary>
            Occurs when the mouse is used to left select the target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown.DrawMonthCalendarGlyph,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawMonthUpDown class.
            </summary>
            <param name="paletteState">Palette source for states.</param>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="buttonValues">Source for content values.</param>
            <param name="glyph">Glyph to be drawn.</param>
            <param name="needPaintHandler">Delegate for requests repainting.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown.RenderAfter(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering after child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown.OnButtonClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Event arguments assocaited with the event.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthUpDown.OnButtonMouseSelect(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseSelect event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Event arguments assocaited with the event.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText">
            <summary>
            Draw the date time picker text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.#ctor(ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker,ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initalize a new instance of the FormatHandler class.
            </summary>
            <param name="dateTimePicker">Reference to owning date time picker.</param>
            <param name="timeText">Reference to owning time text element.</param>
            <param name="needPaint">Delegate for invoking repainting.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.HasFocus">
            <summary>
            Gets and sets the need to show focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.RightToLeftLayout">
            <summary>
            Gets and sets the right to left layout of text.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.HasActiveFragment">
            <summary>
            Gets a value indicating if there is an active char fragment.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.ActiveFragment">
            <summary>
            Gets and sets the active fragment based on the fragment string.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.ClearActiveFragment">
            <summary>
            Clear the active fragment.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.DateTime">
            <summary>
            Gets and sets the date time currently used by the handler.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.MoveFirst">
            <summary>
            Moves to the first char fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.MoveLast">
            <summary>
            Moves to the last char fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.MoveLeft">
            <summary>
            Moves left one char fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.MoveRight">
            <summary>
            Move to the right one char fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.MoveNext">
            <summary>
            Move to the next fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.MovePrevious">
            <summary>
            Move to the next fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.SelectFragment(System.Drawing.Point)">
            <summary>
            Select the nearest fragment to the mouse point.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.Increment(System.Boolean)">
            <summary>
            Increment the current fragment value.
            </summary>
            <param name="forward">Forward to add; otherwise subtract.</param>
            <returns>Modified date/time.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.AMPM(System.Boolean)">
            <summary>
            Invert the AM/PM indicator for the date.
            </summary>
            <param name="am">Am requested.</param>
            <returns>Modified date/time.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.IsInputDigits">
            <summary>
            Gets a value indicating if input digits are being processed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.InputDigit(System.Char)">
            <summary>
            Process the input of numeric digit.
            </summary>
            <param name="digit">Input digit.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.EndInputDigits">
            <summary>
            Process the end of inputting digits.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.ParseFormat(System.String,System.Drawing.Graphics,System.Drawing.Font)">
            <summary>
            Parse a new format into fragments.
            </summary>
            <param name="format">Format string to parse.</param>
            <param name="g">Graphics instance used to measure text.</param>
            <param name="font">Font used to measure text.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatHandler.Render(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Render the text.
            </summary>
            <param name="context">Render context.</param>
            <param name="font">Text font.</param>
            <param name="rect">Client rectangle area.</param>
            <param name="textColor">Text color.</param>
            <param name="backColor">Back color.</param>
            <param name="enabled">If text enabled.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragment.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initialize a new instance of the FormatFragment class.
            </summary>
            <param name="length">Length of the format string to extract.</param>
            <param name="format">Source string to extra fragment from.</param>
            <param name="literal">String literal.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragment.ToString">
            <summary>
            Output a text representation of the fragment.
            </summary>
            <returns>String instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragment.Fragment">
            <summary>
            Gets access to the fragment string.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragment.FragFormat">
            <summary>
            Gets access to the fragment format string.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragment.Output">
            <summary>
            Gets access to the generate output.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragment.TotalWidth">
            <summary>
            Gets and sets the total pixel width of this fragments output.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragment.GenerateOutput(System.DateTime)">
            <summary>
            Generate the output string from the provided date and the format fragment.
            </summary>
            <param name="dt">DateTime used to generate output.</param>
            <returns>Generated output string.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragment.AllowActive">
            <summary>
            Can this field be edited and active.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragment.InputDigits">
            <summary>
            Gets the number of digits allowed to be entered for this fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragment.EndDigits(System.DateTime,System.String)">
            <summary>
            Process the input digits to modify the incoming date time.
            </summary>
            <param name="dt">Date time to modify.</param>
            <param name="digits">Set of digits to process.</param>
            <returns>Modified date time.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragment.GetDisplay(System.DateTime)">
            <summary>
            Gets the display string for display using the provided date time.
            </summary>
            <param name="dt">DateTime to format.</param>
            <returns>Display string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragment.Increment(System.DateTime,System.Boolean)">
            <summary>
            Increment the current fragment value.
            </summary>
            <param name="dt">DateTime to be modified.</param>
            <param name="forward">Forward to add; otherwise subtract.</param>
            <returns>Modified date/time.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragment.AMPM(System.DateTime,System.Boolean)">
            <summary>
            Invert the AM/PM indicator for the date.
            </summary>
            <param name="dt">DateTime to be modified.</param>
            <param name="am">Am requested.</param>
            <returns>Modified date/time.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragmentChar.#ctor(System.Int32,System.String,System.Char,System.Int32)">
            <summary>
            Initialize a new instance of the FormatFragmentChar class.
            </summary>
            <param name="index">Index after the string we want.</param>
            <param name="format">Source string to extra fragment from.</param>
            <param name="character">Character that represents the format fragment.</param>
            <param name="count">Number characters in the fragment.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragmentChar.ToString">
            <summary>
            Output a text representation of the fragment.
            </summary>
            <returns>String instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragmentChar.FragFormat">
            <summary>
            Gets access to the fragment format string.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragmentChar.AllowActive">
            <summary>
            Can this field be edited and active.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragmentChar.InputDigits">
            <summary>
            Gets the number of digits allowed to be entered for this fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragmentChar.EndDigits(System.DateTime,System.String)">
            <summary>
            Process the input digits to modify the incoming date time.
            </summary>
            <param name="dt">Date time to modify.</param>
            <param name="digits">Set of digits to process.</param>
            <returns>Modified date time.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragmentChar.GetDisplay(System.DateTime)">
            <summary>
            Gets the display string for display using the provided date time.
            </summary>
            <param name="dt">DateTime to format.</param>
            <returns>Display string.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragmentChar.Increment(System.DateTime,System.Boolean)">
            <summary>
            Increment the current fragment value.
            </summary>
            <param name="dt">DateTime to be modified.</param>
            <param name="forward">Forward to add; otherwise subtract.</param>
            <returns>Modified date/time.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.FormatFragmentChar.AMPM(System.DateTime,System.Boolean)">
            <summary>
            Invert the AM/PM indicator for the date.
            </summary>
            <param name="dt">DateTime to be modified.</param>
            <param name="am">Am requested.</param>
            <returns>Modified date/time.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.#ctor(ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawDateTimeText class.
            </summary>
            <param name="dateTimePicker">Color to fill drawing area.</param>
            <param name="needPaint">Delegate to allow repainting.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.RightToLeftLayout">
            <summary>
            Gets and sets the right to left layout of text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.OnAutoShiftOverflow(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the AutoShiftOverflow event.
            </summary>
            <param name="e">An CancelEventArgs the contains the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.HasFocus">
            <summary>
            Gets and sets the need to show focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.HasActiveFragment">
            <summary>
            Gets a value indicating if there is an active char fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.ClearActiveFragment">
            <summary>
            Remove active fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.EndInputDigits">
            <summary>
            End the input of input digits.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.MoveFirstFragment">
            <summary>
            Make the first fragment the active fragment.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.ActiveFragment">
            <summary>
            Gets and sets the active fragment based on the fragment string.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.MoveNextFragment">
            <summary>
            Make the next fragment the active fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.MovePreviousFragment">
            <summary>
            Make the previous fragment the active fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.MoveLastFragment">
            <summary>
            Make the last fragment the active fragment.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.SelectFragment(System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Select the fragment that is nearest the provided point.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.PerformKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.PerformKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeText.Render(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton">
            <summary>
            View element that can draw a date time picker button.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.DrawDateTimeGlyph">
            <summary>
            Specific the possible glyphs the button can draw.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.DrawDateTimeGlyph.DropDownButton">
            <summary>
            Specifies the drop down button glyph.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.DrawDateTimeGlyph.UpButton">
            <summary>
            Specifies the up button glyph.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.DrawDateTimeGlyph.DownButton">
            <summary>
            Specifies the down button glyph.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.Click">
            <summary>
            Occurs when the button is clicked.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.MouseSelect">
            <summary>
            Occurs when the mouse is used to left select the target.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.#ctor(ComponentFactory.Krypton.Toolkit.KryptonDateTimePicker,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.DrawDateTimeGlyph,ComponentFactory.Krypton.Toolkit.NeedPaintHandler,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawButton class.
            </summary>
            <param name="dateTimePicker">Owning control.</param>
            <param name="paletteState">Palette source for states.</param>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="buttonValues">Source for content values.</param>
            <param name="glyph">Glyph to be drawn.</param>
            <param name="needPaintHandler">Delegate for requests repainting.</param>
            <param name="repeat">Should button repeat.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.RemoveFixed">
            <summary>
            Remove the fixed appearance of the button.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.RenderAfter(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering after child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.CheckPaletteState(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Check that the palette and state are correct.
            </summary>
            <param name="context">Reference to the view context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.OnButtonClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Event arguments assocaited with the event.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDateTimeButton.OnButtonMouseSelect(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseSelect event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Event arguments assocaited with the event.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawEmptyContent">
            <summary>
            View element that draws empty content.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawEmptyContent.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Initialize a new instance of the ViewDrawEmptyContent class.
            </summary>
            <param name="paletteContentDisabled">Palette source for the disabled content.</param>
            <param name="paletteContentNormal">Palette source for the normal content.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawEmptyContent.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawEmptyContent.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawEmptyContent.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawEmptyContent.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawEmptyContent.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawEmptyContent.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawEmptyContent.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawEmptyContent.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawToday">
            <summary>
            Draw todays date as a button.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewDrawToday.Click">
            <summary>
            Occurs when the today button is clicked.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawToday.#ctor(ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawToday class.
            </summary>
            <param name="calendar">Provider of month calendar values.</param>
            <param name="paletteDisabled">Palette source for the disabled state.</param>
            <param name="paletteNormal">Palette source for the normal state.</param>
            <param name="paletteTracking">Palette source for the tracking state.</param>
            <param name="palettePressed">Palette source for the pressed state.</param>
            <param name="needPaintHandler">Delegate for requested repainting.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawToday.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawToday.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawToday.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawToday.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawToday.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawToday.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawWeekNumbers">
            <summary>
            Draws all the month grid entries including the column names and day values
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawWeekNumbers.#ctor(ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar,ComponentFactory.Krypton.Toolkit.ViewLayoutMonths)">
            <summary>
            Initialize a new instance of the ViewDrawWeekNumbers class.
            </summary>
            <param name="calendar">Reference to calendar provider.</param>
            <param name="months">Reference to months instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawWeekNumbers.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawWeekNumbers.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawWeekNumbers.FirstMonth">
            <summary>
            Is this the first month in the group.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawWeekNumbers.LastMonth">
            <summary>
            Is this the last month in the group.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawWeekNumbers.Month">
            <summary>
            Sets the date this month is used to represent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawWeekNumbers.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawWeekNumbers.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawWeekNumbers.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawWeekNumbers.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawWeekNumbers.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawWeekNumbers.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawWeekNumbers.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar">
            <summary>
            Draw element for a context menu month calendar.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.#ctor(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar)">
            <summary>
            Initialize a new instance of the ViewDrawMenuMonthCalendar class.
            </summary>
            <param name="provider">Reference to provider.</param>
            <param name="monthCalendar">Reference to owning month calendar entry.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.CalendarControl">
            <summary>
            Gets access to the owning control
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.InDesignMode">
            <summary>
            Gets if the control is in design mode.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.GetRenderer">
            <summary>
            Get the renderer.
            </summary>
            <returns>Render instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.GetToolStripDelegate">
            <summary>
            Gets a delegate for creating tool strip renderers.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.CalendarDimensions">
            <summary>
            Gets the number of columns and rows of months displayed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.FirstDayOfWeek">
            <summary>
            First day of the week.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.MinDate">
            <summary>
            First date allowed to be drawn/selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.MaxDate">
            <summary>
            Last date allowed to be drawn/selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.TodayDate">
            <summary>
            Today's date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.TodayFormat">
            <summary>
            Today's date format.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.FocusDay">
            <summary>
            Gets the focus day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.MaxSelectionCount">
            <summary>
            Number of days allowed to be selected at a time.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.TodayText">
            <summary>
            Gets the text used as a today label.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.ScrollChange">
            <summary>
            Gets the number of months to move for next/prev buttons.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.SelectionStart">
            <summary>
            Start of selected range.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.SelectionEnd">
            <summary>
            End of selected range.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.StateCommon">
            <summary>
            Gets access to the month calendar common appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.StateNormal">
            <summary>
            Gets access to the month calendar normal appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.StateDisabled">
            <summary>
            Gets access to the month calendar disabled appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.StateTracking">
            <summary>
            Gets access to the month calendar tracking appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.StatePressed">
            <summary>
            Gets access to the month calendar pressed appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.StateCheckedNormal">
            <summary>
            Gets access to the month calendar checked normal appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.StateCheckedTracking">
            <summary>
            Gets access to the month calendar checked tracking appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.StateCheckedPressed">
            <summary>
            Gets access to the month calendar checked pressed appearance entries.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.OverrideDisabled">
            <summary>
            Gets access to the override for disabled day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.OverrideNormal">
            <summary>
            Gets access to the override for normal day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.OverrideTracking">
            <summary>
            Gets access to the override for tracking day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.OverridePressed">
            <summary>
            Gets access to the override for pressed day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.OverrideCheckedNormal">
            <summary>
            Gets access to the override for checked normal day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.OverrideCheckedTracking">
            <summary>
            Gets access to the override for checked tracking day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.OverrideCheckedPressed">
            <summary>
            Gets access to the override for checked pressed day.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.BoldedDatesList">
            <summary>
            Dates to be bolded.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.MonthlyBoldedDatesMask">
            <summary>
            Monthly days to be bolded.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.AnnuallyBoldedDatesMask">
            <summary>
            Array of annual days per month to be bolded.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.SetSelectionRange(System.DateTime,System.DateTime)">
            <summary>
            Set the selection range.
            </summary>
            <param name="start">New starting date.</param>
            <param name="end">New ending date.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.SetBoldedOverride(System.Boolean)">
            <summary>
            Update usage of bolded overrides.
            </summary>
            <param name="bolded">New bolded state.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.SetTodayOverride(System.Boolean)">
            <summary>
            Update usage of today overrides.
            </summary>
            <param name="today">New today state.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuMonthCalendar.SetFocusOverride(System.Boolean)">
            <summary>
            Update usage of focus overrides.
            </summary>
            <param name="focus">Should show focus.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays">
            <summary>
            Draws all the month grid entries including the column names and day values
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.#ctor(ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar,ComponentFactory.Krypton.Toolkit.ViewLayoutMonths)">
            <summary>
            Initialize a new instance of the ViewDrawMonthDays class.
            </summary>
            <param name="calendar">Reference to calendar provider.</param>
            <param name="months">Reference to months instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.FirstMonth">
            <summary>
            Is this the first month in the group.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.LastMonth">
            <summary>
            Is this the last month in the group.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.Month">
            <summary>
            Sets the date this month is used to represent.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.DayFromPoint(System.Drawing.Point,System.Boolean)">
            <summary>
            Gets the day that is underneath the provided point.
            </summary>
            <param name="pt">Point to lookup.</param>
            <param name="exact">Exact requires that the day must be with the month range.</param>
            <returns>DateTime for matching day; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.DayNearPoint(System.Drawing.Point)">
            <summary>
            Gets the button for the day that is nearest (date wise) to the point provided.
            </summary>
            <param name="pt">Point to lookup.</param>
            <returns>DateTime for nearest matching day.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDays.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDayNames">
            <summary>
            Draws the month day names.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDayNames.#ctor(ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar,ComponentFactory.Krypton.Toolkit.ViewLayoutMonths)">
            <summary>
            Initialize a new instance of the ViewDrawMonthDayNames class.
            </summary>
            <param name="calendar">Reference to calendar provider.</param>
            <param name="months">Reference to months instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDayNames.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDayNames.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDayNames.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDayNames.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDayNames.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDayNames.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDayNames.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDayNames.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonthDayNames.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageSelectItem">
            <summary>
            View element that represents a single gallery item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageSelectItem.#ctor(ComponentFactory.Krypton.Toolkit.ViewContextMenuManager,ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemSelect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawMenuImageSelectItem class.
            </summary>
            <param name="viewManager">Owning view manager instance.</param>
            <param name="imageSelect">Owning image select instance.</param>
            <param name="palette">Palette used to recover values.</param>
            <param name="layout">Reference to item layout.</param>
            <param name="needPaint">Delegate for requesting paints.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageSelectItem.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageSelectItem.IsTracking">
            <summary>
            Item is becoming tracked by the mouse.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageSelectItem.Track">
            <summary>
            Item is becoming tracked by the mouse.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageSelectItem.Untrack">
            <summary>
            Item is becoming tracked by the mouse.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageSelectItem.ImageList">
            <summary>
            Sets the image list to use for the source of the image.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageSelectItem.ImageIndex">
            <summary>
            Sets the index of the image to show.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageSelectItem.Render(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageSelectItem.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageSelectItem.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageSelectItem.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageSelectItem.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas">
            <summary>
            View element that applies padding to the drawing of a border and background.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewDrawSplitCanvas class.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
            <param name="orientation">Visual orientation of the content.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewDrawSplitCanvas class.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="metricPadding">Matric used to get padding values.</param>
            <param name="orientation">Visual orientation of the content.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.PaletteBack">
            <summary>
            Gets access to the currently used background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.PaletteBorder">
            <summary>
            Gets access to the currently used border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.PaletteMetric">
            <summary>
            Gets access to the currently used metric palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.SplitRectangle">
            <summary>
            Gets and sets the split area of the canvas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.NonSplitRectangle">
            <summary>
            Gets and sets the non split area of the canvas.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.Splitter">
            <summary>
            Is the canvas split into a normal and splitter area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.SetPalettes(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Update the source palettes for drawing.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.SetPalettes(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Update the source palettes for drawing.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
            <param name="paletteMetric">Palette source for the metric.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.Orientation">
            <summary>
            Gets and sets the visual orientation.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.DrawTabBorder">
            <summary>
            Gets and sets if the border should be drawn as a tab border.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.TabBorderStyle">
            <summary>
            Gets and sets the tab border style to use.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.MaxBorderEdges">
            <summary>
            Gets and sets the maximum edges allowed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.ForceGraphicsHint">
            <summary>
            Gets and sets the forced value for the graphics hint.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.DrawBorderLast">
            <summary>
            Gets the drawing of the border before or after children.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.DrawCanvas">
            <summary>
            Gets and sets if the canvas should 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.DrawCanvasOnComposition">
            <summary>
            Gets and sets a value indicating if the canvas is drawing on composition.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.GetOuterBorderPath(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Gets a path that describes the outside of the border.
            </summary>
            <param name="context">Context used by the renderer.</param>
            <returns>Path instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Evaluate the need for drawing transparent areas.
            </summary>
            <param name="context">Evaluation context.</param>
            <returns>True if transparent areas exist; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSplitCanvas.RenderAfter(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering after child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawDropDownButton">
            <summary>
            Draws a drop down button using the provided renderer.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDropDownButton.#ctor">
            <summary>
            Initialize a new instance of the ViewDrawDropDownButton class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDropDownButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDropDownButton.Palette">
            <summary>
            Gets and sets the palette to use.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDropDownButton.Orientation">
            <summary>
            Gets and sets the orientation of the drop down button.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDropDownButton.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDropDownButton.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDropDownButton.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorBlock">
            <summary>
            Draw a solid color block inside a context menu color column.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorBlock.#ctor(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawMenuColorBlock class.
            </summary>
            <param name="provider">Reference to provider.</param>
            <param name="colorColumns">Reference to owning color columns entry.</param>
            <param name="color">Drawing color for the block.</param>
            <param name="first">Is this element first in column.</param>
            <param name="last">Is this element last in column.</param>
            <param name="enabled">Is this column enabled</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorBlock.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorBlock.ItemEnabled">
            <summary>
            Gets the enabled state of the item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorBlock.KryptonContextMenuColorColumns">
            <summary>
            Gets access to the actual color columns definiton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorBlock.CanCloseMenu">
            <summary>
            Gets a value indicating if the menu is capable of being closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorBlock.Closing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the Closing event on the provider.
            </summary>
            <param name="cea">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorBlock.Close(ComponentFactory.Krypton.Toolkit.CloseReasonEventArgs)">
            <summary>
            Raises the Close event on the provider.
            </summary>
            <param name="e">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorBlock.Color">
            <summary>
            Gets the color associated with the block.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorBlock.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorBlock.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorBlock.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorBlock.RenderAfter(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering after child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorColumns">
            <summary>
            Draw element for a context menu color columns.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorColumns.#ctor(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns)">
            <summary>
            Initialize a new instance of the ViewDrawMenuColorColumns class.
            </summary>
            <param name="provider">Reference to provider.</param>
            <param name="colorColumns">Reference to owning color columns entry.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorColumns.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorColumns.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorColumns.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.#ctor(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckButton)">
            <summary>
            Initialize a new instance of the ViewDrawMenuCheckButton class.
            </summary>
            <param name="provider">Reference to provider.</param>
            <param name="checkButton">Reference to owning check button entry.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.ItemEnabled">
            <summary>
            Gets the enabled state of the item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.ItemText">
            <summary>
            Gets the short text value of the check box item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.ResolveEnabled">
            <summary>
            Resolves the correct enabled state to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.ResolveImage">
            <summary>
            Resolves the correct image to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.ResolveImageTransparentColor">
            <summary>
            Resolves the correct image transparent color to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.ResolveText">
            <summary>
            Resolves the correct text string to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.ResolveExtraText">
            <summary>
            Resolves the correct extra text string to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.ResolveChecked">
            <summary>
            Resolves the correct checked state to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.KryptonContextMenuCheckButton">
            <summary>
            Gets access to the actual check button definiton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.ViewDrawButton">
            <summary>
            Gets access to the view element that draws the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.CanCloseMenu">
            <summary>
            Gets a value indicating if the menu is capable of being closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.Closing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the Closing event on the provider.
            </summary>
            <param name="cea">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.Close(ComponentFactory.Krypton.Toolkit.CloseReasonEventArgs)">
            <summary>
            Raises the Close event on the provider.
            </summary>
            <param name="e">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckButton.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuRadioButton.#ctor(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,ComponentFactory.Krypton.Toolkit.KryptonContextMenuRadioButton)">
            <summary>
            Initialize a new instance of the ViewDrawMenuRadioButton class.
            </summary>
            <param name="provider">Reference to provider.</param>
            <param name="radioButton">Reference to owning radio button entry.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuRadioButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuRadioButton.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuRadioButton.ItemEnabled">
            <summary>
            Gets the enabled state of the item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuRadioButton.ViewDrawRadioButton">
            <summary>
            Gets access to the radio button image drawing element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuRadioButton.ViewDrawContent">
            <summary>
            Gets access to the content drawing element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuRadioButton.ItemText">
            <summary>
            Gets the short text value of the radio button item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuRadioButton.KryptonContextMenuRadioButton">
            <summary>
            Gets access to the actual radio button definiton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuRadioButton.CanCloseMenu">
            <summary>
            Gets a value indicating if the menu is capable of being closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuRadioButton.Closing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the Closing event on the provider.
            </summary>
            <param name="cea">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuRadioButton.Close(ComponentFactory.Krypton.Toolkit.CloseReasonEventArgs)">
            <summary>
            Raises the Close event on the provider.
            </summary>
            <param name="e">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuRadioButton.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.#ctor(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,ComponentFactory.Krypton.Toolkit.KryptonContextMenuCheckBox)">
            <summary>
            Initialize a new instance of the ViewDrawMenuCheckBox class.
            </summary>
            <param name="provider">Reference to provider.</param>
            <param name="checkBox">Reference to owning check box entry.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.ViewDrawCheckBox">
            <summary>
            Gets access to the check box image drawing element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.ViewDrawContent">
            <summary>
            Gets access to the content drawing element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.ItemEnabled">
            <summary>
            Gets the enabled state of the item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.ItemText">
            <summary>
            Gets the short text value of the check box item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.ResolveEnabled">
            <summary>
            Resolves the correct enabled state to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.ResolveImage">
            <summary>
            Resolves the correct image to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.ResolveImageTransparentColor">
            <summary>
            Resolves the correct image transparent color to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.ResolveText">
            <summary>
            Resolves the correct text string to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.ResolveExtraText">
            <summary>
            Resolves the correct extra text string to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.ResolveCheckState">
            <summary>
            Resolves the correct check state to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.KryptonContextMenuCheckBox">
            <summary>
            Gets access to the actual check box definiton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.CanCloseMenu">
            <summary>
            Gets a value indicating if the menu is capable of being closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.Closing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the Closing event on the provider.
            </summary>
            <param name="cea">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.Close(ComponentFactory.Krypton.Toolkit.CloseReasonEventArgs)">
            <summary>
            Raises the Close event on the provider.
            </summary>
            <param name="e">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuCheckBox.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.#ctor(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,ComponentFactory.Krypton.Toolkit.KryptonContextMenuLinkLabel)">
            <summary>
            Initialize a new instance of the ViewDrawMenuLinkLabel class.
            </summary>
            <param name="provider">Reference to provider.</param>
            <param name="linkLabel">Reference to owning link label entry.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.ItemText">
            <summary>
            Gets the short text value of the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.ItemEnabled">
            <summary>
            Gets the enabled state of the item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.ResolveImage">
            <summary>
            Resolves the correct image to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.ResolveImageTransparentColor">
            <summary>
            Resolves the correct image transparent color to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.ResolveText">
            <summary>
            Resolves the correct text string to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.ResolveExtraText">
            <summary>
            Resolves the correct extra text string to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.Focused">
            <summary>
            Sets if the link label is currently focused.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.Pressed">
            <summary>
            Gets and sets if the link label is currently pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.KryptonContextMenuLinkLabel">
            <summary>
            Gets access to the actual link label definiton.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.CanCloseMenu">
            <summary>
            Gets a value indicating if the menu is capable of being closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.Closing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the Closing event on the provider.
            </summary>
            <param name="cea">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.Close(ComponentFactory.Krypton.Toolkit.CloseReasonEventArgs)">
            <summary>
            Raises the Close event on the provider.
            </summary>
            <param name="e">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuLinkLabel.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageCanvas.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,System.Int32,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawMenuImageCanvas class.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
            <param name="columnIndex">Menu item column index.</param>
            <param name="zeroHeight">Should the height be forced to zero.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageCanvas.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageCanvas.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageCanvas.ColumnIndex">
            <summary>
            Gets the index of the column within the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageCanvas.LastPreferredSize">
            <summary>
            Gets the last calculated preferred size value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageCanvas.OverridePreferredWidth">
            <summary>
            Sets the preferred width value to use until further notice.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageCanvas.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageCanvas.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItemContent.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IContentValues,System.Int32)">
            <summary>
            Initialize a new instance of the ViewDrawMenuItemContent class.
            </summary>
            <param name="palette">Source of palette display values.</param>
            <param name="values">Source of content values.</param>
            <param name="columnIndex">Menu item column index.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItemContent.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItemContent.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItemContent.ColumnIndex">
            <summary>
            Gets the index of the column within the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItemContent.LastPreferredSize">
            <summary>
            Gets the last calculated preferred size value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItemContent.OverridePreferredWidth">
            <summary>
            Sets the preferred width value to use until further notice.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageColumn.#ctor(ComponentFactory.Krypton.Toolkit.KryptonContextMenuItems,ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect)">
            <summary>
            Initialize a new instance of the ViewDrawMenuImageColumn class.
            </summary>
            <param name="items">Reference to the owning collection.</param>
            <param name="palette">Palette for obtaining drawing values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageColumn.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageColumn.ColumnWidth">
            <summary>
            Sets the width of the column.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuImageColumn.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuHeading.#ctor(ComponentFactory.Krypton.Toolkit.KryptonContextMenuHeading,ComponentFactory.Krypton.Toolkit.PaletteTripleRedirect)">
            <summary>
            Initialize a new instance of the ViewDrawMenuHeading class.
            </summary>
            <param name="heading">Reference to owning heading entry.</param>
            <param name="palette">Reference to palette source.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuHeading.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuHeading.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.#ctor(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,ComponentFactory.Krypton.Toolkit.KryptonContextMenuItem,ComponentFactory.Krypton.Toolkit.ViewLayoutStack,System.Boolean,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawMenuItem class.
            </summary>
            <param name="provider">Provider of context menu information.</param>
            <param name="menuItem">Menu item definition.</param>
            <param name="columns">Containing columns.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
            <param name="imageColumn">Draw an image background for the item images.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.KryptonContextMenuItem">
            <summary>
            Gets access to the context menu item we represent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.SplitSeparator">
            <summary>
            Gets the view element used to draw the split separator.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.ItemEnabled">
            <summary>
            Gets the enabled state of the entire item and not for a particular view element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.ItemText">
            <summary>
            Gets the short text value of the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.ItemExtraText">
            <summary>
            Gets the long text value of the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.ResolveEnabled">
            <summary>
            Resolves the correct enabled state to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.ResolveImage">
            <summary>
            Resolves the correct image to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.ResolveImageTransparentColor">
            <summary>
            Resolves the correct image transparent color to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.ResolveText">
            <summary>
            Resolves the correct text string to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.ResolveExtraText">
            <summary>
            Resolves the correct extra text string to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.ResolveChecked">
            <summary>
            Resolves the correct checked to use from the menu item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.ResolveCheckState">
            <summary>
            Resolves the correct check state to use from the menu item.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.PointInSubMenu(System.Drawing.Point)">
            <summary>
            Indicates whether the mouse point should show a sub menu.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.HasSubMenu">
            <summary>
            Returns if the item shows a sub menu when selected.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.CanCloseMenu">
            <summary>
            Gets a value indicating if the menu is capable of being closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.Closing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the Closing event on the provider.
            </summary>
            <param name="cea">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.Close(ComponentFactory.Krypton.Toolkit.CloseReasonEventArgs)">
            <summary>
            Raises the Close event on the provider.
            </summary>
            <param name="e">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.DisposeContextMenu">
            <summary>
            Request the showing context menu be disposed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.HasParentMenu">
            <summary>
            Gets a value indicating if the menu item has a parent menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.ShowSubMenu(System.Boolean)">
            <summary>
            Ask the menu item to show the associated child collection as a menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.ClearSubMenu">
            <summary>
            Remove any showing context menu.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuItem.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawMenuSeparator">
            <summary>
            Draw element for a context menu separator.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuSeparator.#ctor(ComponentFactory.Krypton.Toolkit.KryptonContextMenuSeparator,ComponentFactory.Krypton.Toolkit.PaletteDoubleRedirect)">
            <summary>
            Initialize a new instance of the ViewDrawMenuSeparator class.
            </summary>
            <param name="separator">Reference to owning separator entry.</param>
            <param name="palette">Palette for obtaining drawing values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuSeparator.#ctor(ComponentFactory.Krypton.Toolkit.PaletteDouble)">
            <summary>
            Initialize a new instance of the ViewDrawMenuSeparator class.
            </summary>
            <param name="state">State specific source of palette values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuSeparator.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMenuSeparator.Draw">
            <summary>
            Gets and sets the drawing of the separator.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuSeparator.Render(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawRadioButton">
            <summary>
            Draws a radio button using the provided renderer.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawRadioButton.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the ViewDrawRadioButton class.
            </summary>
            <param name="palette">Palette for source of drawing values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawRadioButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawRadioButton.CheckState">
            <summary>
            Gets and sets the check state of the check box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawRadioButton.Tracking">
            <summary>
            Gets and sets the tracking state of the check box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawRadioButton.Pressed">
            <summary>
            Gets and sets the pressed state of the check box.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawRadioButton.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawRadioButton.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawRadioButton.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawCheckBox">
            <summary>
            Draws a check box using the provided renderer.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCheckBox.#ctor(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the ViewDrawCheckBox class.
            </summary>
            <param name="palette">Palette for source of drawing values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCheckBox.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCheckBox.CheckState">
            <summary>
            Gets and sets the check state of the check box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCheckBox.Tracking">
            <summary>
            Gets and sets the tracking state of the check box.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCheckBox.ForcedTracking">
            <summary>
            Gets and sets the forced tracking state of the checkbox.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCheckBox.Pressed">
            <summary>
            Gets and sets the pressed state of the check box.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCheckBox.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCheckBox.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCheckBox.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawForm">
            <summary>
            Extends the ViewDrawDocker by adding status strip merging into the border.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawForm.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Initialize a new instance of the ViewDrawForm class.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawForm.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawForm.StatusStrip">
            <summary>
            Gets and sets the status strip to render.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawForm.RenderAfter(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering after child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawBorderEdge">
            <summary>
            View element that can draw a border edge by applying a size to a panel.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawBorderEdge.#ctor(ComponentFactory.Krypton.Toolkit.PaletteBorderEdge,System.Windows.Forms.Orientation)">
            <summary>
            Initialize a new instance of the ViewDrawBorderEdge class.
            </summary>
            <param name="palette">Palette source for drawing details.</param>
            <param name="orientation">Initial orientation of the border.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawBorderEdge.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawBorderEdge.Orientation">
            <summary>
            Gets and sets the orientation.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawBorderEdge.SetPalettes(ComponentFactory.Krypton.Toolkit.PaletteBorderEdge)">
            <summary>
            Update the source palette for drawing.
            </summary>
            <param name="palette">Palette source for drawing details.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawBorderEdge.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawDebug">
            <summary>
            View element that has a preferred size and then draws a solid color, used for debugging.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDebug.#ctor(System.Drawing.Size,System.Drawing.Color)">
            <summary>
            Initialize a new instance of the ViewDrawDebug class.
            </summary>
            <param name="preferredSize">Preferred size.</param>
            <param name="color">Solid color to draw with.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDebug.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDebug.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDebug.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDebug.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawNull">
            <summary>
            Draw a red rectangle in the location of the null element.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawNull.#ctor(System.Drawing.Color)">
            <summary>
            Initialize a new instance of the ViewDrawNull class.
            </summary>
            <param name="fillColor">Color to fill drawing area.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawNull.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawNull.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawScrollBar">
            <summary>
            View element that draws a scrollbar.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewDrawScrollBar.ScrollChanged">
            <summary>
            Occurs when the scroll position has changed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawScrollBar.#ctor(System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawScrollBar class.
            </summary>
            <param name="vertical">Is this a vertical scrollbar.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawScrollBar.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawScrollBar.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawScrollBar.Vertical">
            <summary>
            Gets and sets a value indicating if the scrollbar is vertical.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawScrollBar.ShortSize">
            <summary>
            Gets and sets a value indicating if the scroll should short size.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawScrollBar.SetScrollValues(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Update the scrollbar with the latest scrolling values.
            </summary>
            <param name="min">Scroll minimum value.</param>
            <param name="max">Scroll maximum value.</param>
            <param name="smallChange">Size of a small change.</param>
            <param name="largeChange">Size of a large change.</param>
            <param name="offset">Current scrolling offset.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawScrollBar.ScrollPosition">
            <summary>
            Gets the current scroll position.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawScrollBar.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawScrollBar.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorColumn">
            <summary>
            Positions the child within a border that is drawn as the column background color.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorColumn.#ctor(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,ComponentFactory.Krypton.Toolkit.KryptonContextMenuColorColumns,System.Drawing.Color[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawMenuColorColumn class.
            </summary>
            <param name="provider">Reference to provider.</param>
            <param name="colorColumns">Reference to owning color columns entry.</param>
            <param name="colors">Set of colors to initialize from.</param>\
            <param name="start">Stating index to use.</param>
            <param name="end">Ending index to use.</param>
            <param name="enabled">Is this column enabled</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorColumn.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorColumn.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMenuColorColumn.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawMonth">
            <summary>
            Extends the ViewComposite by organising and drawing an individual month.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.CalendarButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecCalendar instances.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.CalendarButtonSpecCollection.#ctor(ComponentFactory.Krypton.Toolkit.ViewDrawMonth)">
            <summary>
            Initialize a new instance of the CalendarButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.#ctor(ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar,ComponentFactory.Krypton.Toolkit.ViewLayoutMonths,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawMonth class.
            </summary>
            <param name="calendar">Reference to calendar provider.</param>
            <param name="months">Reference to months instance.</param>
            <param name="redirector">Redirector for getting values.</param>
            <param name="needPaintDelegate">Delegate for requesting paint changes.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.ViewDrawMonthDays">
            <summary>
            Gets access to the days draw element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.Enabled">
            <summary>
            Gets and sets the enabled state of the view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.FirstMonth">
            <summary>
            Is this the first month in the group.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.LastMonth">
            <summary>
            Is this the last month in the group.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.Month">
            <summary>
            Gets and sets the month that this view element is used to draw.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.UpdateButtons(System.Boolean,System.Boolean)">
            <summary>
            Update the visible state of the navigation buttons.
            </summary>
            <param name="prev">Show the previous button.</param>
            <param name="next">Show the next button.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawMonth.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutPadding">
            <summary>
            View element that draws nothing and will use a padding around the children.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutPadding.#ctor">
            <summary>
            Initialize a new instance of the ViewLayoutPadding class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutPadding.#ctor(System.Windows.Forms.Padding)">
            <summary>
            Initialize a new instance of the ViewLayoutPadding class.
            </summary>
            <param name="displayPadding">Padding to use around area.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutPadding.#ctor(System.Windows.Forms.Padding,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Initialize a new instance of the ViewLayoutPadding class.
            </summary>
            <param name="displayPadding">Padding to use around area.</param>
            <param name="child">Child to add into view hierarchy.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutPadding.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutPadding.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutPadding.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutFit">
            <summary>
            View element that draws nothing and will split the space equally between the children.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutFit.#ctor(System.Windows.Forms.Orientation)">
            <summary>
            Initialize a new instance of the ViewLayoutFit class.
            </summary>
            <param name="orientation">Direction to fit.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutFit.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutFit.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutStretch">
            <summary>
            View element that draws nothing and will stretch children to fill one dimension.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutStretch.#ctor(System.Windows.Forms.Orientation)">
            <summary>
            Initialize a new instance of the ViewLayoutCenter class.
            </summary>
            <param name="orientation">Direction to stretch.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutStretch.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutStretch.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutWeekCorner">
            <summary>
            Allocate space for the week number corner in the month calendar.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutWeekCorner.#ctor(ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar,ComponentFactory.Krypton.Toolkit.ViewLayoutMonths,ComponentFactory.Krypton.Toolkit.PaletteBorder)">
            <summary>
            Initialize a new instance of the ViewLayoutWeekCorner class.
            </summary>
            <param name="calendar">Reference to calendar provider.</param>
            <param name="months">Reference to months instance.</param>
            <param name="palette">Reference to border palette.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutWeekCorner.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutWeekCorner.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutWeekCorner.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutWeekCorner.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths">
            <summary>
            Extends the ViewComposite by creating/destroying month instances in a grid.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.#ctor(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,ComponentFactory.Krypton.Toolkit.KryptonContextMenuMonthCalendar,ComponentFactory.Krypton.Toolkit.ViewContextMenuManager,ComponentFactory.Krypton.Toolkit.IKryptonMonthCalendar,ComponentFactory.Krypton.Toolkit.PaletteRedirect,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutMonths class.
            </summary>
            <param name="provider">Provider of context menu information.</param>
            <param name="monthCalendar">Reference to owning month calendar entry.</param>
            <param name="viewManager">Owning view manager instance.</param>
            <param name="calendar">Reference to calendar provider.</param>
            <param name="redirector">Redirector for getting values.</param>
            <param name="needPaintDelegate">Delegate for requesting paint changes.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be displayed for button specs.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.ButtonManager">
            <summary>
            Gets access to the button manager.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.ButtonSpecs">
            <summary>
            Gets access to the collection of button spec definitions.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.RecreateButtons">
            <summary>
            Recreate the set of button spec instances.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.Calendar">
            <summary>
            Gets access to the month calendar.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.Provider">
            <summary>
            Gets access to the optional context menu provider.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.TrackingDay">
            <summary>
            Gets and sets the day that is currently being tracked.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.FocusDay">
            <summary>
            Gets and sets the day that is currently showing focus.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.AnchorDay">
            <summary>
            Gets and sets the day that is the anchor for shift changes.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.ShowTodayCircle">
            <summary>
            Gets and set the display of a circle for todays date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.ShowToday">
            <summary>
            Gets and set the display of todays date.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.CloseOnTodayClick">
            <summary>
            Gets and set if the menu is closed when the today button is pressed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.ShowWeekNumbers">
            <summary>
            Gets and sets the showing of week numbers.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.Months">
            <summary>
            Gets the number of display months.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.ProcessKeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Process a key down by finding the correct month and calling the associated key controller.
            </summary>
            <param name="c">Owning control.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if the key was processed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.DayNearPoint(System.Drawing.Point)">
            <summary>
            Gets the button for the day that is nearest (date wise) to the point provided.
            </summary>
            <param name="pt">Point to lookup.</param>
            <returns>DateTime for nearest matching day.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.DayFromPoint(System.Drawing.Point,System.Boolean)">
            <summary>
            Gets the button for the day that is under the provided point.
            </summary>
            <param name="pt">Point to lookup.</param>
            <param name="exact">Exact requires that the day must be with the month range.</param>
            <returns>DateTime for matching day; otherwise null.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.NextMonth">
            <summary>
            Move to the next month.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.PrevMonth">
            <summary>
            Move to the previous month.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.GetSingleMonthSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Gets the size required to draw a single month.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.GetExtraSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Gets the size required to draw extra elements such as headers.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMonths.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutCrumbs">
            <summary>
            Creates and layout individual crumbs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCrumbs.#ctor(ComponentFactory.Krypton.Toolkit.KryptonBreadCrumb,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutCrumbs class.
            </summary>
            <param name="kryptonBreadCrumb">Reference to owning bread crumb control.</param>
            <param name="needPaintDelegate">Delegate used to request repainting..</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCrumbs.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCrumbs.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCrumbs.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCrumbs.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCrumbs.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCrumbs.Render(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCrumbs.GetImage(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCrumbs.GetImageTransparentColor(ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCrumbs.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCrumbs.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutColorStack.#ctor">
            <summary>
            Initialize a new instance of the ViewLayoutStack class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutColorStack.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutColorStack.Render(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutColorStack.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutColorStack.RenderAfter(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering after child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuSepGap">
            <summary>
            Positions a separator to take up space without drawing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuSepGap.#ctor(ComponentFactory.Krypton.Toolkit.PaletteContextMenuRedirect,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewLayoutMenuSepGap class.
            </summary>
            <param name="stateCommon">Source of palette values.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuSepGap.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuSepGap.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemsPile">
            <summary>
            Extends the ViewLayoutPile so that menu items are layed out in columns.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemsPile.#ctor(ComponentFactory.Krypton.Toolkit.IContextMenuProvider,ComponentFactory.Krypton.Toolkit.KryptonContextMenuItems,System.Boolean,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewLayoutMenuItemsPile class.
            </summary>
            <param name="provider">Provider of context menu values.</param>
            <param name="items">Reference to the owning collection.</param>
            <param name="standardStyle">Draw items with standard or alternate style.</param>
            <param name="imageColumn">Draw an image background for the item images.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemsPile.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemsPile.ItemStack">
            <summary>
            Gets access to the stack containing individual menu items
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemsPile.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemsPile.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutPile">
            <summary>
            Extends the ViewComposite by laying out children to all fill the total area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutPile.#ctor">
            <summary>
            Initialize a new instance of the ViewLayoutStack class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutPile.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutPile.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemSelect">
            <summary>
            View element that creates and lays out the image list items.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemSelect.#ctor(ComponentFactory.Krypton.Toolkit.KryptonContextMenuImageSelect,ComponentFactory.Krypton.Toolkit.IContextMenuProvider)">
            <summary>
            Initialize a new instance of the ViewLayoutMenuItemSelect class.
            </summary>
            <param name="itemSelect">Reference to owning instance.</param>
            <param name="provider">Provider of context menu information.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemSelect.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemSelect.ItemEnabled">
            <summary>
            Gets the enabled state of the item.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemSelect.CanCloseMenu">
            <summary>
            Gets a value indicating if the menu is capable of being closed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemSelect.Closing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the Closing event on the provider.
            </summary>
            <param name="cea">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemSelect.Close(ComponentFactory.Krypton.Toolkit.CloseReasonEventArgs)">
            <summary>
            Raises the Close event on the provider.
            </summary>
            <param name="e">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemSelect.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMenuItemSelect.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutStack">
            <summary>
            Extends the ViewComposite by laying out children in horizontal/vertical stack.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutStack.#ctor(System.Boolean)">
            <summary>
            Initialize a new instance of the ViewLayoutStack class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutStack.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutStack.Horizontal">
            <summary>
            Gets and sets the stack orientation.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutStack.FillLastChild">
            <summary>
            Gets and sets if the last child fills the remainder of the space.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutStack.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutStack.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewControl">
            <summary>
            Control that is contained inside an element to act as clipping of real controls.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewControl.PaintBackground">
            <summary>
            Occurs when the background needs painting.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewControl.WndProcHitTest">
            <summary>
            Occurs when the WM_NCHITTEST occurs.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControl.#ctor(ComponentFactory.Krypton.Toolkit.VisualControl)">
            <summary>
            Initialize a new instance of the ViewControl class.
            </summary>
            <param name="rootControl">Top level visual control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewControl.ViewLayoutControl">
            <summary>
            Gets and sets access to the view layout control.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControl.UpdateParent(System.Windows.Forms.Control)">
            <summary>
            Gets and sets the root control for point translation and message dispatch. 
            </summary>
            <param name="parent">Parent control.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewControl.TransparentBackground">
            <summary>
            Gets and sets if the background is transparent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewControl.InDesignMode">
            <summary>
            Gets and sets a value indicating if the control is in design mode.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewControl.NeedPaintDelegate">
            <summary>
            Gets access to the need paint delegate.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControl.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControl.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControl.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControl.OnNeedPaint(System.Object,ComponentFactory.Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewControl.OnWndProcHitTest(ComponentFactory.Krypton.Toolkit.ViewControlHitTestArgs)">
            <summary>
            Raises the WndProcHitTest event.
            </summary>
            <param name="e">A ViewControlHitTestArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutControl">
            <summary>
            View element that contains a control that has a view hierarchy of its own.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.#ctor(ComponentFactory.Krypton.Toolkit.VisualControl,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Initialize a new instance of the ViewLayoutControl class.
            </summary>
            <param name="rootControl">Top level visual control.</param>
            <param name="viewChild">View used to size and position the child control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.#ctor(ComponentFactory.Krypton.Toolkit.ViewControl,ComponentFactory.Krypton.Toolkit.VisualControl,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Initialize a new instance of the ViewLayoutControl class.
            </summary>
            <param name="viewControl">View control to use as child.</param>
            <param name="rootControl">Top level visual control.</param>
            <param name="viewChild">View used to size and position the child control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.Visible">
            <summary>
            Gets and sets the visible state of the element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.LayoutOffset">
            <summary>
            Gets and sets the offset to apply the layout of the child view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.ChildView">
            <summary>
            Gets access to the child view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.ChildControl">
            <summary>
            Gets access to the child control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.ChildPaintDelegate">
            <summary>
            Gets access to the child controls paint delegate.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.ChildTransparentBackground">
            <summary>
            Gets and sets if the background is transparent.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.InDesignMode">
            <summary>
            Gets and sets a value indicating if the control is in design mode.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.MakeParent(System.Windows.Forms.Control)">
            <summary>
            Reparent the provided control as a child of ourself.
            </summary>
            <param name="c">Control to reparent.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutControl.ViewFromPoint(System.Drawing.Point)">
            <summary>
            Find the view that contains the specified point.
            </summary>
            <param name="pt">Point in view coordinates.</param>
            <returns>ViewBase if a match is found; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutFill">
            <summary>
            View element that is used to fill a docker area and positions a control to the same size.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutFill.#ctor">
            <summary>
            Initialize a new instance of the ViewLayoutNull class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutFill.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initialize a new instance of the ViewLayoutNull class.
            </summary>
            <param name="control">Control to positon in fill location.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutFill.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutFill.DisplayPadding">
            <summary>
            Gets and sets the padding used around the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutFill.FillRect">
            <summary>
            Gets the latest calculated fill rectangle.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutFill.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutFill.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutSeparator">
            <summary>
            Positions a separator to take up space without drawing.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutSeparator.#ctor(System.Int32)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonSeparator class.
            </summary>
            <param name="length">Length of the separator.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutSeparator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonSeparator class.
            </summary>
            <param name="width">Width of the separator.</param>
            <param name="height">Height of the separator.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutSeparator.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutSeparator.SeparatorSize">
            <summary>
            Gets and sets the separator size.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutSeparator.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutSeparator.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport">
            <summary>
            View element that provides scrollbars around a viewport filler.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.AnimateStep">
            <summary>
            Occurs when animation has moved another step.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.#ctor(ComponentFactory.Krypton.Toolkit.VisualControl,ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.PaletteBorderEdge,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding,ComponentFactory.Krypton.Toolkit.PaletteMetricInt,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.RelativePositionAlign,System.Boolean,System.Boolean,ComponentFactory.Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutScrollViewport class.
            </summary>
            <param name="rootControl">Top level visual control.</param>
            <param name="viewportFiller">View element to place inside viewport.</param>
            <param name="paletteBorderEdge">Palette for use with the border edge.</param>
            <param name="paletteMetrics">Palette source for metrics.</param>
            <param name="metricPadding">Metric used to get view padding.</param>
            <param name="metricOvers">Metric used to get overposition.</param>
            <param name="orientation">Orientation for the viewport children.</param>
            <param name="alignment">Alignment of the children within the viewport.</param>
            <param name="animateChange">Animate changes in the viewport.</param>
            <param name="vertical">Is the viewport vertical.</param>
            <param name="needPaintDelegate">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.MakeParent(System.Windows.Forms.Control)">
            <summary>
            Make the provided control parented to ourself.
            </summary>
            <param name="c">Control to reparent.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.RevertParent(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            Revert the provided control back to a different control.
            </summary>
            <param name="newParent">Control to become parent.</param>
            <param name="c">Control to reparent.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.VerticalViewport">
            <summary>
            Gets and sets the visual orientation.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.SetPalettes(ComponentFactory.Krypton.Toolkit.PaletteBorderEdge)">
            <summary>
            Update the palettes being used by the view.
            </summary>
            <param name="borderEdge">Palette for the border edge.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.AnimateChange">
            <summary>
            Gets and sets the use of animation when bringing into view.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.BringIntoView(System.Drawing.Rectangle)">
            <summary>
            Move viewport to display the requested part of area.
            </summary>
            <param name="rect">Rectangle to display.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.ViewControl">
            <summary>
            Gets access to the view control instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.Viewport">
            <summary>
            Gets access to the viewport view instance.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.ScrollbarV">
            <summary>
            Gets access to the vertical scrollbar view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.ScrollbarH">
            <summary>
            Gets access to the horizontl scrollbar view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.BorderEdgeV">
            <summary>
            Gets access to the vertical border edge view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.BorderEdgeH">
            <summary>
            Gets access to the horizontal border edge view.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.DockerLayout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Ask the base docker element to perform a layout.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutScrollViewport.NeedPaint(System.Boolean)">
            <summary>
            Requests a paint and optional layout of the control.
            </summary>
            <param name="needLayout">Is a layout required.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport">
            <summary>
            View element that allows scrolling around a contained view element.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.AnimateStep">
            <summary>
            Occurs when animation has moved another step.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding,ComponentFactory.Krypton.Toolkit.PaletteMetricInt,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.RelativePositionAlign,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewLayoutViewport class.
            </summary>
            <param name="paletteMetrics">Palette source for metrics.</param>
            <param name="metricPadding">Metric used to get view padding.</param>
            <param name="metricOvers">Metric used to get overposition.</param>
            <param name="orientation">Orientation for the viewport children.</param>
            <param name="alignment">Alignment of the children within the viewport.</param>
            <param name="animateChange">Animate changes in the viewport.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.SetMetrics(ComponentFactory.Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Updates the metrics source and metric to use.
            </summary>
            <param name="paletteMetric">Source for aquiring metrics.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.SetMetrics(ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Updates the metrics source and metric to use.
            </summary>
            <param name="paletteMetric">Source for aquiring metrics.</param>
            <param name="metricPadding">Actual padding metric to use.</param>
            <param name="metricOvers">Actual overs metric to use.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.AnimateChange">
            <summary>
            Gets and sets the use of animation for offset changes.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.Orientation">
            <summary>
            Gets and sets the bar orientation.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.Alignment">
            <summary>
            Gets and sets the alignment of the children within the viewport.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.CounterAlignment">
            <summary>
            Gets and sets the counter alignment of the children within the viewport.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.FillSpace">
            <summary>
            Gets and sets a value indicating if children should be made bigger to fill any left over space.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.Offset">
            <summary>
            Gets a scrolling offset within the viewport.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.CanScrollV">
            <summary>
            Gets a value indicating if the viewport can be scrolled vertically.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.CanScrollH">
            <summary>
            Gets a value indicating if the viewport can be scrolled horizontally.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.ScrollExtent">
            <summary>
            Gets the total extent of the scrolling view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.ScrollOffset">
            <summary>
            Gets a scrolling offset within the viewport.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.SetOffsetV(System.Int32)">
            <summary>
            Update the vertical scrolling offset.
            </summary>
            <param name="offset">New offset to use.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.SetOffsetH(System.Int32)">
            <summary>
            Update the horizontal scrolling offset.
            </summary>
            <param name="offset">New offset to use.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.CanScrollNext">
            <summary>
            Gets a value indicating if the viewport can be scrolled next.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.CanScrollPrevious">
            <summary>
            Gets a value indicating if the viewport can be scrolled previous.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.MoveNext">
            <summary>
            Move the viewport to show the next part of area.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.MovePrevious">
            <summary>
            Move the viewport to show the previous part of area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.NeedScrolling">
            <summary>
            Is scrolling required because the viewport extents beyong available space.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.BringIntoView(System.Drawing.Rectangle)">
            <summary>
            Move viewport to display the requested part of area.
            </summary>
            <param name="rect">Rectangle to display.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutViewport.Render(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker">
            <summary>
            Extends the ViewComposite by applying a docking style for each child.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.#ctor">
            <summary>
            Initialize a new instance of the ViewLayoutDocker class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.IgnoreRightToLeftLayout">
            <summary>
            Gets and sets if the RightToLeftLayout ability is used.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.Orientation">
            <summary>
            Gets and sets the visual orientation.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.Padding">
            <summary>
            Gets and sets the padding around the edges.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.MaxBorderEdges">
            <summary>
            Gets and sets the maximum edges allowed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.RemoveChildBorders">
            <summary>
            Gets and sets a value indicating if borders for docking edged children should be removed to prevent double borders.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.PreferredSizeAll">
            <summary>
            Gets and sets a value indicating if calculating the preferred size should include visible and invisible children.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.FillRectangle">
            <summary>
            Gets the fill rectangle left after positioning all children.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.GetDock(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the dock setting for the provided child instance.
            </summary>
            <param name="child">Child view element.</param>
            <returns>Docking setting.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.SetDock(ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.ViewDockStyle)">
            <summary>
            Sets the dock setting for the provided child instance.
            </summary>
            <param name="child">Child view element.</param>
            <param name="dock">ViewDockStyle setting.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.Add(ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.ViewDockStyle)">
            <summary>
            Append a view to the collection.
            </summary>
            <param name="item">ViewBase reference.</param>
            <param name="dock">DockStyle setting.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.Tag">
            <summary>
            Gets and sets data with the view.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.UpdatePreferredSize(System.Drawing.Size)">
            <summary>
            Allow the preferred size calculated by GetPreferredSize to be modified before use.
            </summary>
            <param name="preferredSize">Original preferred size value.</param>
            <returns>Modified size.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.UpdateFillerRect(System.Drawing.Rectangle,System.Windows.Forms.Control)">
            <summary>
            Allow the filler rectangle calculated by Layout to be modified before use.
            </summary>
            <param name="fillerRect">Original filler rectangle.</param>
            <param name="control">Owning control instance.</param>
            <returns>Modified rectangle.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.CalculateDock(ComponentFactory.Krypton.Toolkit.ViewDockStyle,System.Windows.Forms.Control)">
            <summary>
            Find the actual docking to apply for the specified RightToLeft setting.
            </summary>
            <param name="ds">Docking style.</param>
            <param name="control">Control for which the setting is needed.</param>
            <returns>Calculated docking to actual use.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutDocker.OrientateDock(ComponentFactory.Krypton.Toolkit.ViewDockStyle)">
            <summary>
            Update the incoming dock style to reflect our orientation.
            </summary>
            <param name="style">Incoming dock style.</param>
            <returns>Orientation adjusted dock style.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutCenter">
            <summary>
            View element that draws nothing and will center all children within itself.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCenter.#ctor">
            <summary>
            Initialize a new instance of the ViewLayoutCenter class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCenter.#ctor(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Initialize a new instance of the ViewLayoutCenter class.
            </summary>
            <param name="childElement">Optional element to add as child.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCenter.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewLayoutCenter class.
            </summary>
            <param name="paletteMetric">Target for recovering metric values.</param>
            <param name="metricPadding">Metric to use for border padding.</param>
            <param name="orientation">Orientation of the element.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCenter.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Initialize a new instance of the ViewLayoutCenter class.
            </summary>
            <param name="paletteMetric">Target for recovering metric values.</param>
            <param name="metricPadding">Metric to use for border padding.</param>
            <param name="orientation">Orientation of the element.</param>
            <param name="childElement">Optional element to add as child.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCenter.#ctor(System.Int32)">
            <summary>
            Initialize a new instance of the ViewLayoutCenter class.
            </summary>
            <param name="size">Manual padding amount.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCenter.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutCenter.MetricPadding">
            <summary>
            Gets and sets the metric used to calculate the extra border padding.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutCenter.Orientation">
            <summary>
            Gets and sets the visual orientation.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCenter.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutCenter.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutContext">
            <summary>
            Encapsulates context for view layout operations.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutContext.#ctor(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the ViewContext class.
            </summary>
            <param name="control">Control associated with rendering.</param>
            <param name="renderer">Rendering provider.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutContext.#ctor(ComponentFactory.Krypton.Toolkit.ViewManager,System.Windows.Forms.Control,System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the ViewContext class.
            </summary>
            <param name="manager">Reference to the view manager.</param>
            <param name="control">Control associated with rendering.</param>
            <param name="alignControl">Control used for aligning elements.</param>
            <param name="renderer">Rendering provider.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutContext.#ctor(ComponentFactory.Krypton.Toolkit.ViewManager,System.Windows.Forms.Control,System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.IRenderer,System.Drawing.Size)">
            <summary>
            Initialize a new instance of the ViewContext class.
            </summary>
            <param name="manager">Reference to the view manager.</param>
            <param name="control">Control associated with rendering.</param>
            <param name="alignControl">Control used for aligning elements.</param>
            <param name="renderer">Rendering provider.</param>
            <param name="displaySize">Display size.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutContext.#ctor(ComponentFactory.Krypton.Toolkit.ViewManager,System.Windows.Forms.Form,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the ViewContext class.
            </summary>
            <param name="manager">Reference to the view manager.</param>
            <param name="form">Form associated with rendering.</param>
            <param name="formRect">Window rectangle for the Form.</param>
            <param name="renderer">Rendering provider.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutContext.#ctor(ComponentFactory.Krypton.Toolkit.ViewManager,System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,ComponentFactory.Krypton.Toolkit.IRenderer,System.Drawing.Size)">
            <summary>
            Initialize a new instance of the ViewContext class.
            </summary>
            <param name="manager">Reference to the view manager.</param>
            <param name="control">Control associated with rendering.</param>
            <param name="alignControl">Control used for aligning elements.</param>
            <param name="graphics">Graphics instance for drawing.</param>
            <param name="renderer">Rendering provider.</param>
            <param name="displaySize">Display size.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLayoutContext.DisplayRectangle">
            <summary>
            Gets and sets the available display area.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RenderContext">
            <summary>
            Encapsulates context for view render operations.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderContext.#ctor(System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the ViewContext class.
            </summary>
            <param name="control">Control associated with rendering.</param>
            <param name="graphics">Graphics instance for drawing.</param>
            <param name="clipRect">Rectangle that needs rendering.</param>
            <param name="renderer">Rendering provider.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderContext.#ctor(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the ViewContext class.
            </summary>
            <param name="control">Control associated with rendering.</param>
            <param name="alignControl">Control used to align elements.</param>
            <param name="graphics">Graphics instance for drawing.</param>
            <param name="clipRect">Rectangle that needs rendering.</param>
            <param name="renderer">Rendering provider.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderContext.#ctor(ComponentFactory.Krypton.Toolkit.ViewManager,System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the ViewContext class.
            </summary>
            <param name="manager">Reference to the view manager.</param>
            <param name="control">Control associated with rendering.</param>
            <param name="alignControl">Control used to align elements.</param>
            <param name="graphics">Graphics instance for drawing.</param>
            <param name="clipRect">Rectangle that needs rendering.</param>
            <param name="renderer">Rendering provider.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.RenderContext.ClipRect">
            <summary>
            Gets the rectangle that needs rendering.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.RenderContext.GetAlignedRectangle(ComponentFactory.Krypton.Toolkit.PaletteRectangleAlign,System.Drawing.Rectangle)">
            <summary>
            Calculate a rectangle in control coodinates that is aligned for gradient drawing.
            </summary>
            <param name="align">How to align the gradient.</param>
            <param name="local">Rectangle of the local element.</param>
            <returns></returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.AccurateTextMemento">
            <summary>
            Encapsulate the information needed to draw text using the AccurateText class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.AccurateTextMemento.#ctor(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Drawing.Text.TextRenderingHint,System.Boolean)">
            <summary>
            Initialize a new instance of the TextMemento class.
            </summary>
            <param name="text">Text to draw.</param>
            <param name="font">Drawing font.</param>
            <param name="sizeF">Size of measured text.</param>
            <param name="format">String formatting.</param>
            <param name="hint">Drawing hint.</param>
            <param name="disposeFont">Should the font be disposed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.AccurateTextMemento.Dispose">
            <summary>
            Dispose of the memento resources.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.AccurateTextMemento.Text">
            <summary>
            Gets the text to draw.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.AccurateTextMemento.Font">
            <summary>
            Gets the drawing font.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.AccurateTextMemento.Size">
            <summary>
            Gets the pixel size of the text area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.AccurateTextMemento.Format">
            <summary>
            Gets the pixel size of the text area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.AccurateTextMemento.IsEmpty">
            <summary>
            Gets a value indicating if the memento represents nothing that can be drawn.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.AccurateTextMemento.Empty">
            <summary>
            Get access to an empty TextMemento instance.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewContext">
            <summary>
            Encapsulates common context for view layout and render operations.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContext.#ctor(ComponentFactory.Krypton.Toolkit.ViewManager,System.Windows.Forms.Control,System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the ViewContext class.
            </summary>
            <param name="manager">Reference to the view manager.</param>
            <param name="control">Control associated with rendering.</param>
            <param name="alignControl">Control used for aligning elements.</param>
            <param name="renderer">Rendering provider.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContext.#ctor(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,ComponentFactory.Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the ViewContext class.
            </summary>
            <param name="control">Control associated with rendering.</param>
            <param name="alignControl">Control used for aligning elements.</param>
            <param name="graphics">Graphics instance for drawing.</param>
            <param name="renderer">Rendering provider.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContext.#ctor(ComponentFactory.Krypton.Toolkit.ViewManager,System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Graphics,ComponentFactory.Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the ViewContext class.
            </summary>
            <param name="manager">Reference to the view manager.</param>
            <param name="control">Control associated with rendering.</param>
            <param name="alignControl">Control used for aligning elements.</param>
            <param name="graphics">Graphics instance for drawing.</param>
            <param name="renderer">Rendering provider.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewContext.Dispose">
            <summary>
            Dispose of resources.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewContext.ViewManager">
            <summary>
            Gets the owning view manager.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewContext.Control">
            <summary>
            Gets and sets the owning control associated with rendering.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewContext.AlignControl">
            <summary>
            Gets and sets the control to use when aligning elements.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewContext.Graphics">
            <summary>
            Gets the graphics instance used for rendering operations.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewContext.TopControl">
            <summary>
            Gets the owning top level control associated with rendering.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewContext.Renderer">
            <summary>
            Gets access to the renderer provider.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IRenderer">
            <summary>
            Exposes access to specialized renderers.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IRenderer.RenderStandardBorder">
            <summary>
            Gets the standard border renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IRenderer.RenderStandardBack">
            <summary>
            Gets the standard background renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IRenderer.RenderStandardContent">
            <summary>
            Gets the standard content renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IRenderer.RenderTabBorder">
            <summary>
            Gets the tab border renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IRenderer.RenderRibbon">
            <summary>
            Gets the ribbon renderer.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.IRenderer.RenderGlyph">
            <summary>
            Gets the glpyh renderer.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderer.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Evaluate if transparent painting is needed for background palette.
            </summary>
            <param name="paletteBack">Background palette to test.</param>
            <param name="state">Element state associated with palette.</param>
            <returns>True if transparent painting required.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderer.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Evaluate if transparent painting is needed for background or border palettes.
            </summary>
            <param name="paletteBack">Background palette to test.</param>
            <param name="paletteBorder">Background palette to test.</param>
            <param name="state">Element state associated with palette.</param>
            <returns>True if transparent painting required.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderer.RenderToolStrip(ComponentFactory.Krypton.Toolkit.IPalette)">
            <summary>
            Gets a renderer for drawing the toolstrips.
            </summary>
            <param name="colorPalette">Color palette to use when rendering toolstrip.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IRenderBorder">
            <summary>
            Exposes methods for drawing borders.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderBorder.GetBorderRawPadding(ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Gets the raw padding used per edge of the border.
            </summary>
            <param name="palette">Palette used for drawing.</param>
            <param name="state">State associated with rendering.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <returns>Padding structure detailing all four edges.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderBorder.GetBorderDisplayPadding(ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Gets the padding used to position display elements completely inside border drawing.
            </summary>
            <param name="palette">Palette used for drawing.</param>
            <param name="state">State associated with rendering.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <returns>Padding structure detailing all four edges.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderBorder.GetOutsideBorderPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Generate a graphics path that is the outside edge of the border.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderBorder.GetBorderPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Generate a graphics path that is in the middle of the border.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderBorder.GetBackPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Generate a graphics path that encloses the border and is used when rendering a background to ensure the background does not draw over the border area.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderBorder.DrawBorder(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw border on the inside edge of the specified rectangle.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IRenderBack">
            <summary>
            Exposes methods for drawing backgrounds.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderBack.DrawBack(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.IDisposable)">
            <summary>
            Draw background to fill the specified path.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle that encloses path.</param>
            <param name="path">Graphics path.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the background.</param>
            <param name="state">State associated with rendering.</param>
            <param name="memento">Cache used for drawing.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IRenderContent">
            <summary>
            Exposes methods for drawing content.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderContent.GetContentPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Get the preferred size for drawing the content.
            </summary>
            <param name="context">Layout context.</param>
            <param name="palette">Content palette details.</param>
            <param name="values">Content values.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="state">State associated with rendering.</param>
            <param name="composition">Drawing onto a composition element.</param>
            <returns>Preferred size.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderContent.LayoutContent(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Perform layout calculations on the provided content.
            </summary>
            <param name="context">Layout context.</param>
            <param name="availableRect">Space available for laying out.</param>
            <param name="palette">Content palette details.</param>
            <param name="values">Content values.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="state">State associated with rendering.</param>
            <param name="composition">Drawing onto a composition element.</param>
            <returns>Memento with cached information.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderContent.DrawContent(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,System.IDisposable,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean,System.Boolean)">
            <summary>
            Perform draw of content using provided memento.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="palette">Content palette details.</param>
            <param name="memento">Cached values from layout call.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="state">State associated with rendering.</param>
            <param name="composition">Drawing onto a composition element.</param>
            <param name="allowFocusRect">Allow drawing of focus rectangle.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderContent.GetContentImageDisplayed(System.IDisposable)">
            <summary>
            Request the calculated display of the image.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>True if the image is being displayed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderContent.GetContentImageRectangle(System.IDisposable)">
            <summary>
            Request the calculated position of the content image.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>Display rectangle for the image content.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderContent.GetContentShortTextDisplayed(System.IDisposable)">
            <summary>
            Request the calculated display of the short text.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>True if the short text is being displayed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderContent.GetContentShortTextRectangle(System.IDisposable)">
            <summary>
            Request the calculated position of the content short text.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>Display rectangle for the image content.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderContent.GetContentLongTextDisplayed(System.IDisposable)">
            <summary>
            Request the calculated display of the long text.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>True if the long text is being displayed; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderContent.GetContentLongTextRectangle(System.IDisposable)">
            <summary>
            Request the calculated position of the content long text.
            </summary>
            <param name="memento">Cached values from layout call.</param>
            <returns>Display rectangle for the image content.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IRenderTabBorder">
            <summary>
            Exposes methods for drawing tab borders.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderTabBorder.GetTabBorderLeftDrawing(ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Gets if the tabs should be drawn from left to right for z-ordering.
            </summary>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>True for left to right, otherwise draw right to left.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderTabBorder.GetTabBorderSpacingGap(ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Gets the spacing used to separate each tab border instance.
            </summary>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>Number of pixels to space instances.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderTabBorder.GetTabBorderDisplayPadding(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Gets the padding used to position display elements completely inside border drawing.
            </summary>
            <param name="context">Layout context.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="state">State associated with rendering.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>Padding structure detailing all four edges.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderTabBorder.GetTabBorderPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Generate a graphics path that encloses the border itself.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderTabBorder.GetTabBackPath(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Generate a graphics path that encloses the border and is used when rendering a background to ensure the background does not draw over the border area.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <param name="tabBorderStyle">Style of tab border.</param>
            <returns>GraphicsPath instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderTabBorder.DrawTabBorder(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.TabBorderStyle)">
            <summary>
            Draw border on the inside edge of the specified rectangle.
            </summary>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="palette">Palette used for drawing.</param>
            <param name="orientation">Visual orientation of the border.</param>
            <param name="state">State associated with rendering.</param>
            <param name="tabBorderStyle">Style of tab border.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IRenderRibbon">
            <summary>
            Exposes methods for drawing ribbon elements.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderRibbon.DrawRibbonBack(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Boolean,System.IDisposable)">
            <summary>
            Draw the background of a ribbon element.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="state">State associated with rendering.</param>
            <param name="palette">Palette used for sourcing settings.</param>
            <param name="orientation">Orientation for drawing.</param>
            <param name="composition">Drawing onto a composition element.</param>
            <param name="memento">Cached values to use when drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderRibbon.DrawRibbonTabContextTitle(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Draw a context ribbon tab title.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="paletteGeneral">Palette used for general ribbon settings.</param>
            <param name="paletteBack">Palette used for background ribbon settings.</param>
            <param name="memento">Cached values to use when drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderRibbon.DrawRibbonApplicationButton(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteRibbonBack,System.IDisposable)">
            <summary>
            Draw the application button.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="state">State associated with rendering.</param>
            <param name="palette">Palette used for sourcing settings.</param>
            <param name="memento">Cached values to use when drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderRibbon.DrawRibbonApplicationTab(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,System.Drawing.Color,System.Drawing.Color,System.IDisposable)">
            <summary>
            Draw the application tab.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Rendering context.</param>
            <param name="rect">Target rectangle.</param>
            <param name="state">State associated with rendering.</param>
            <param name="baseColor1">Base color1 used for drawing the ribbon tab.</param>
            <param name="baseColor2">Base color2 used for drawing the ribbon tab.</param>
            <param name="memento">Cached values to use when drawing.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderRibbon.DrawRibbonClusterEdge(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon cluster edge.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteBack">Palette used for recovering drawing details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.IRenderGlyph">
            <summary>
            Exposes methods for drawing glyph elements.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawSeparator(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,System.Windows.Forms.Orientation,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Perform drawing of a separator glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteBack">Background palette details.</param>
            <param name="paletteBorder">Border palette details.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="state">State associated with rendering.</param>
            <param name="canMove">Can the separator be moved.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.GetCheckBoxPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPalette,System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Calculate the requested display size for the check box.
            </summary>
            <param name="context">Render context.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="enabled">Should check box be displayed as enabled.</param>
            <param name="checkState">The checked state of the check box.</param>
            <param name="tracking">Should check box be displayed as hot tracking.</param>
            <param name="pressed">Should check box be displayed as pressed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawCheckBox(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPalette,System.Boolean,System.Windows.Forms.CheckState,System.Boolean,System.Boolean)">
            <summary>
            Perform drawing of a check box.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="enabled">Should check box be displayed as enabled.</param>
            <param name="checkState">The checked state of the check box.</param>
            <param name="tracking">Should check box be displayed as hot tracking.</param>
            <param name="pressed">Should check box be displayed as pressed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.GetRadioButtonPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPalette,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Calculate the requested display size for the radio button.
            </summary>
            <param name="context">Render context.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="enabled">Should check box be displayed as enabled.</param>
            <param name="checkState">Checked state of the radio button.</param>
            <param name="tracking">Should check box be displayed as hot tracking.</param>
            <param name="pressed">Should check box be displayed as pressed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawRadioButton(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPalette,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Perform drawing of a radio button.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="enabled">Should radio button be displayed as enabled.</param>
            <param name="checkState">Checked state of the radio button.</param>
            <param name="tracking">Should radio button be displayed as hot tracking.</param>
            <param name="pressed">Should radio button be displayed as pressed.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.GetDropDownButtonPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext,ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Calculate the requested display size for the drop down button.
            </summary>
            <param name="context">Render context.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="state">State for which image size is needed.</param>
            <param name="orientation">How to orientate the image.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawDropDownButton(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPalette,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Perform drawing of a drop down button.
            </summary>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="palette">Palette for sourcing display values.</param>
            <param name="state">State for which image size is needed.</param>
            <param name="orientation">How to orientate the image.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawInputControlDropDownGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw a drop down button image appropriate for a input control.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Content palette for getting colors.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawInputControlNumericUpGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw a numeric up button image appropriate for a input control.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Content palette for getting colors.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawInputControlNumericDownGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Draw a numeric down button image appropriate for a input control.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Content palette for getting colors.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawRibbonDialogBoxLauncher(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon dialog box launcher glyph.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawRibbonDropArrow(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon drop arrow glyph.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawRibbonContextArrow(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon context arrow glyph.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawRibbonOverflow(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon overflow image.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawRibbonGroupSeparator(ComponentFactory.Krypton.Toolkit.PaletteRibbonShape,ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteRibbonGeneral,ComponentFactory.Krypton.Toolkit.PaletteState)">
            <summary>
            Perform drawing of a ribbon group separator.
            </summary>
            <param name="shape">Ribbon shape.</param>
            <param name="context">Render context.</param>
            <param name="displayRect">Display area available for drawing.</param>
            <param name="paletteGeneral">General ribbon palette details.</param>
            <param name="state">State associated with rendering.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawGridSortGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Windows.Forms.SortOrder,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Draw a grid sorting direction glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="sortOrder">Sorting order of the glyph.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Palette to use for sourcing values.</param>
            <param name="state">State associated with rendering.</param>
            <param name="rtl">Should be drawn from right to left.</param>
            <returns>Remainder space left over for other drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawGridRowGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.GridRowGlyph,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Draw a grid row glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="rowGlyph">Row glyph.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="paletteContent">Palette to use for sourcing values.</param>
            <param name="state">State associated with rendering.</param>
            <param name="rtl">Should be drawn from right to left.</param>
            <returns>Remainder space left over for other drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawGridErrorGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.PaletteState,System.Boolean)">
            <summary>
            Draw a grid error glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="cellRect">Available drawing rectangle space.</param>
            <param name="state">State associated with rendering.</param>
            <param name="rtl">Should be drawn from right to left.</param>
            <returns>Remainder space left over for other drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawDragDropSolidGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,ComponentFactory.Krypton.Toolkit.IPaletteDragDrop)">
            <summary>
            Draw a solid area glyph suitable for a drag drop area.
            </summary>
            <param name="context">Render context.</param>
            <param name="drawRect">Drawing rectangle space.</param>
            <param name="dragDropPalette">Palette source of drawing values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.MeasureDragDropDockingGlyph(ComponentFactory.Krypton.Toolkit.RenderDragDockingData,ComponentFactory.Krypton.Toolkit.IPaletteDragDrop,ComponentFactory.Krypton.Toolkit.PaletteDragFeedback)">
            <summary>
            Measure the drag and drop docking glyphs.
            </summary>
            <param name="dragData">Set of drag docking data.</param>
            <param name="dragDropPalette">Palette source of drawing values.</param>
            <param name="feedback">Feedback requested.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawDragDropDockingGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.RenderDragDockingData,ComponentFactory.Krypton.Toolkit.IPaletteDragDrop,ComponentFactory.Krypton.Toolkit.PaletteDragFeedback)">
            <summary>
            Draw a solid area glyph suitable for a drag drop area.
            </summary>
            <param name="context">Render context.</param>
            <param name="dragData">Set of drag docking data.</param>
            <param name="dragDropPalette">Palette source of drawing values.</param>
            <param name="feedback">Feedback requested.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawTrackTicksGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteElementColor,System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Boolean,System.Drawing.Size,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw the track bar ticks glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="state">Element state.</param>
            <param name="elementPalette">Source of palette colors.</param>
            <param name="drawRect">Drawing rectangle that should contain ticks.</param>
            <param name="orientation">Orientation of the drawing area.</param>
            <param name="topRight">Drawing on the topRight or the bottomLeft.</param>
            <param name="positionSize">Size of the position indicator.</param>
            <param name="minimum">First value.</param>
            <param name="maximum">Last value.</param>
            <param name="frequency">How often ticks are drawn.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawTrackGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteElementColor,System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Boolean)">
            <summary>
            Draw the track bar track glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="state">Element state.</param>
            <param name="elementPalette">Source of palette colors.</param>
            <param name="drawRect">Drawing rectangle that should contain the track.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="volumeControl">Drawing as a volume control or standard slider.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.IRenderGlyph.DrawTrackPositionGlyph(ComponentFactory.Krypton.Toolkit.RenderContext,ComponentFactory.Krypton.Toolkit.PaletteState,ComponentFactory.Krypton.Toolkit.IPaletteElementColor,System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Windows.Forms.TickStyle)">
            <summary>
            Draw the track bar position glyph.
            </summary>
            <param name="context">Render context.</param>
            <param name="state">Element state.</param>
            <param name="elementPalette">Source of palette colors.</param>
            <param name="drawRect">Drawing rectangle that should contain the track.</param>
            <param name="orientation">Drawing orientation.</param>
            <param name="tickStyle">Tick marks that surround the position.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.RendererMode">
            <summary>
            Specifies the renderer to use when painting.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.RendererMode.Inherit">
            <summary>
            Specifies the renderer be inherited from the base palette.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.RendererMode.Sparkle">
            <summary>
            Specifies the RenderSparkle be used.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.RendererMode.Office2007">
            <summary>
            Specifies the RenderOffice2007 be used.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.RendererMode.Professional">
            <summary>
            Specifies the RenderProfessional be used.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.RendererMode.Standard">
            <summary>
            Specifies the RenderStandard be used.
            </summary>
        </member>
        <member name="F:ComponentFactory.Krypton.Toolkit.RendererMode.Custom">
            <summary>
            Specifies a custom renderer be used.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualControlContainment">
            <summary>
            Base class used for implementation of container controls using a Control as the base.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControlContainment.#ctor">
            <summary>
            Initialize a new instance of the VisualContainer class.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlContainment.TabStop">
            <summary>
            Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlContainment.AllowDrop">
            <summary>
            Gets or sets a value indicating whether the control can accept data that the user drags onto it.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlContainment.AutoSize">
            <summary>
            Gets or sets a value indicating whether the control is automatically resized to display its entire contents.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlContainment.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlContainment.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlContainment.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlContainment.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControlContainment.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewManager">
            <summary>
            Manages a view presentation for a control display surface.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewManager.LayoutBefore">
            <summary>
            Occurs just before the layout cuycle.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewManager.LayoutAfter">
            <summary>
            Occurs just after the layout cuycle.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewManager.MouseDownProcessed">
            <summary>
            Occurs when the mouse down event is processed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewManager.MouseUpProcessed">
            <summary>
            Occurs when the mouse up event is processed.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.ViewManager.DoubleClickProcessed">
            <summary>
            Occurs when the mouse up event is processed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.#ctor">
            <summary>
            Initialize a new instance of the ViewManager class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.#ctor(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Initialize a new instance of the ViewManager class.
            </summary>
            <param name="control">Owning control.</param>
            <param name="root">Root of the view hierarchy.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.Dispose">
            <summary>
            Clean up any resources.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.Attach(System.Windows.Forms.Control,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Attach the view manager to provided control and root element.
            </summary>
            <param name="control">Owning control.</param>
            <param name="root">Root of the view hierarchy.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewManager.Root">
            <summary>
            Gets and sets the view root.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewManager.Control">
            <summary>
            Control owning the view manager.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewManager.AlignControl">
            <summary>
            Control used to align view elements.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewManager.DoNotLayoutControls">
            <summary>
            Should child controls be layed out during layout calls.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewManager.OutputDebug">
            <summary>
            Should debug information be output during layout and paint cycles.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.GetPreferredSize(ComponentFactory.Krypton.Toolkit.IRenderer,System.Drawing.Size)">
            <summary>
            Discover the preferred size of the view.
            </summary>
            <param name="renderer">Renderer provider.</param>
            <param name="proposedSize">The custom-sized area for a control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.IRenderer)">
            <summary>
            Perform a layout of the view.
            </summary>
            <param name="renderer">Renderer provider.</param>
            <returns>True if it contains transparent painting.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewManager.ActiveView">
            <summary>
            Gets and sets the active view element.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.ComponentFromPoint(System.Drawing.Point)">
            <summary>
            Is the provided point associated with a component.
            </summary>
            <param name="pt">Mouse point.</param>
            <returns>Component referece; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewManager.MouseCaptured">
            <summary>
            Gets and sets a value indicating if the mouse is capturing input.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.Layout(ComponentFactory.Krypton.Toolkit.IRenderer)">
            <summary>
            Perform a layout of the view.
            </summary>
            <param name="renderer">Renderer provider.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the view.
            </summary>
            <param name="context">View context for layout operation.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.Paint(ComponentFactory.Krypton.Toolkit.IRenderer,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Perform a paint of the view.
            </summary>
            <param name="renderer">Renderer provider.</param>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.Paint(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a paint of the view.
            </summary>
            <param name="context">Renderer context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.MouseMove(System.Windows.Forms.MouseEventArgs,System.Drawing.Point)">
            <summary>
            Perform mouse movement handling.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
            <param name="rawPt">The actual point provided from the windows message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.MouseDown(System.Windows.Forms.MouseEventArgs,System.Drawing.Point)">
            <summary>
            Perform mouse down processing.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
            <param name="rawPt">The actual point provided from the windows message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.MouseUp(System.Windows.Forms.MouseEventArgs,System.Drawing.Point)">
            <summary>
            Perform mouse up processing.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
            <param name="rawPt">The actual point provided from the windows message.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.MouseLeave(System.EventArgs)">
            <summary>
            Perform mouse leave processing.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.DoubleClick(System.Drawing.Point)">
            <summary>
            Perform double click processing.
            </summary>
            <param name="pt">Control coordinates point.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.PerformMouseDownProcessed(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDownProcessed event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.PerformMouseUpProcessed(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUpProcessed event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.KeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Perform key down handling.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.KeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Perform key press handling.
            </summary>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.KeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Perform key up handling.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.GotFocus">
            <summary>
            Perform got focus handling.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.LostFocus">
            <summary>
            Perform lost focus handling.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.ResetCounters">
            <summary>
            Reset the internal counters.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewManager.LayoutCounter">
            <summary>
            Gets the number of layout cycles performed since last reset.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewManager.PaintCounter">
            <summary>
            Gets the number of paint cycles performed since last reset.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewManager.UpdateViewFromPoint(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Update the active view based on the mouse position.
            </summary>
            <param name="control">Source control.</param>
            <param name="pt">Point within the source control.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutMetricSpacer">
            <summary>
            View element that draws nothing and just takes up the metric provided size.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMetricSpacer.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Initialize a new instance of the ViewLayoutMetricSpacer class.
            </summary>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="metricInt">Metric used to get spacer size.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMetricSpacer.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMetricSpacer.SetMetrics(ComponentFactory.Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Updates the metrics source and metric to use.
            </summary>
            <param name="paletteMetric">Source for aquiring metrics.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMetricSpacer.SetMetrics(ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Updates the metrics source and metric to use.
            </summary>
            <param name="paletteMetric">Source for aquiring metrics.</param>
            <param name="metricInt">Actual integer metric to use.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMetricSpacer.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutMetricSpacer.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawPanel">
            <summary>
            View element that can draw a panel (background but no border)
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawPanel.#ctor">
            <summary>
            Initialize a new instance of the ViewDrawPanel class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawPanel.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack)">
            <summary>
            Initialize a new instance of the ViewDrawPanel class.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawPanel.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawPanel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawPanel.IgnoreRender">
            <summary>
            Gets and sets the rendering status.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawPanel.VisualOrientation">
            <summary>
            Gets and sets the orientation of the panel.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawPanel.SetPalettes(ComponentFactory.Krypton.Toolkit.IPaletteBack)">
            <summary>
            Update the source palettes for drawing.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawPanel.GetPalette">
            <summary>
            Gets the palette used for drawing the panel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawPanel.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Evaluate the need for drawing transparent areas.
            </summary>
            <param name="context">Evaluation context.</param>
            <returns>True if transparent areas exist; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawPanel.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawPanel.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawSeparator">
            <summary>
            View element that can draw a separator
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSeparator.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding,System.Windows.Forms.Orientation)">
            <summary>
            Initialize a new instance of the ViewDrawSeparator class.
            </summary>
            <param name="paletteDisabled">Palette source for the disabled state.</param>
            <param name="paletteNormal">Palette source for the normal state.</param>
            <param name="paletteTracking">Palette source for the tracking state.</param>
            <param name="palettePressed">Palette source for the pressed state.</param>
            <param name="metricDisabled">Palette source for disabled metric values.</param>
            <param name="metricNormal">Palette source for normal metric values.</param>
            <param name="metricTracking">Palette source for tracking metric values.</param>
            <param name="metricPressed">Palette source for pressed metric values.</param>
            <param name="metricPadding">Metric used to get padding values.</param>
            <param name="orientation">Visual orientation of the content.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSeparator.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSeparator.MetricPadding">
            <summary>
            Gets and sets the metric used to calculate the padding.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSeparator.Source">
            <summary>
            Gets and sets the associated separator source.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSeparator.Orientation">
            <summary>
            Gets and sets the visual orientation.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawSeparator.Length">
            <summary>
            Gets and sets the length of the separator.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSeparator.SetPalettes(ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteDouble,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Update the source palettes for drawing.
            </summary>
            <param name="paletteDisabled">Palette source for the disabled state.</param>
            <param name="paletteNormal">Palette source for the normal state.</param>
            <param name="paletteTracking">Palette source for the tracking state.</param>
            <param name="palettePressed">Palette source for the pressed state.</param>
            <param name="metricDisabled">Palette source for disabled metric values.</param>
            <param name="metricNormal">Palette source for normal metric values.</param>
            <param name="metricTracking">Palette source for tracking metric values.</param>
            <param name="metricPressed">Palette source for pressed metric values.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSeparator.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSeparator.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawSeparator.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLayoutNull">
            <summary>
            View element that draws nothing and just takes up the provided size.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutNull.#ctor">
            <summary>
            Initialize a new instance of the ViewLayoutNull class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutNull.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutNull.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLayoutNull.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawButton">
            <summary>
            View element that can draw a button.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawButton.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawButton class.
            </summary>
            <param name="paletteDisabled">Palette source for the disabled state.</param>
            <param name="paletteNormal">Palette source for the normal state.</param>
            <param name="paletteTracking">Palette source for the tracking state.</param>
            <param name="palettePressed">Palette source for the pressed state.</param>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="buttonValues">Source for content values.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="useMnemonic">Use mnemonics.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawButton.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.VisualOrientation,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawButton class.
            </summary>
            <param name="paletteDisabled">Palette source for the disabled state.</param>
            <param name="paletteNormal">Palette source for the normal state.</param>
            <param name="paletteTracking">Palette source for the tracking state.</param>
            <param name="palettePressed">Palette source for the pressed state.</param>
            <param name="paletteCheckedNormal">Palette source for the normal checked state.</param>
            <param name="paletteCheckedTracking">Palette source for the tracking checked state.</param>
            <param name="paletteCheckedPressed">Palette source for the pressed checked state.</param>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="buttonValues">Source for content values.</param>
            <param name="orientation">Visual orientation of the content.</param>
            <param name="useMnemonic">Use mnemonics.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.LayoutDocker">
            <summary>
            Gets access to the contained layout docker.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.CurrentPalette">
            <summary>
            Gets access to the currently selected palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.DropDown">
            <summary>
            Gets and sets the drop down capability of the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.DropDownPosition">
            <summary>
            Gets and sets the drop down position.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.DropDownOrientation">
            <summary>
            Gets and sets the drop down orientation.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.DropDownPalette">
            <summary>
            Gets and sets the drop down capability of the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.Splitter">
            <summary>
            Gets and sets if the drop down button needs a splitter.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.SplitRectangle">
            <summary>
            Gets the split rectangle area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.NonSplitRectangle">
            <summary>
            Gets the non split rectangle area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.ButtonValues">
            <summary>
            Gets and sets the source for button values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.DrawTabBorder">
            <summary>
            Gets and sets if the border should be drawn as a tab border.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.TabBorderStyle">
            <summary>
            Gets and sets the tab border style of the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.Enabled">
            <summary>
            Gets and sets the enabled state of the element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.Orientation">
            <summary>
            Gets and sets the visual orientation.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawButton.SetOrientation(ComponentFactory.Krypton.Toolkit.VisualOrientation,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Set the orientation of the two button components.
            </summary>
            <param name="borderBackOrient">Orientation of the button border and background..</param>
            <param name="contentOrient">Orientation of the button contents.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.UseMnemonic">
            <summary>
            Gets and sets usage of mnemonics.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.Checked">
            <summary>
            Gets and sets the checked state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.AllowUncheck">
            <summary>
            Gets and sets the allow uncheck state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.DrawButtonComposition">
            <summary>
            Gets and sets the composition usage of the button.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawButton.TestForFocusCues">
            <summary>
            Gets and sets the use of focus cues for deciding if focus rects are allowed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawButton.SetPalettes(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Update the source palettes for non-checked drawing.
            </summary>
            <param name="paletteDisabled">Palette source for the disabled state.</param>
            <param name="paletteNormal">Palette source for the normal state.</param>
            <param name="paletteTracking">Palette source for the tracking state.</param>
            <param name="palettePressed">Palette source for the pressed state.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawButton.SetCheckedPalettes(ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple,ComponentFactory.Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Update the source palettes for checked state drawing.
            </summary>
            <param name="paletteCheckedNormal">Palette source for the normal checked state.</param>
            <param name="paletteCheckedTracking">Palette source for the tracking checked state.</param>
            <param name="paletteCheckedPressed">Palette source for the pressed checked state.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawButton.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Evaluate the need for drawing transparent areas.
            </summary>
            <param name="context">Evaluation context.</param>
            <returns>True if transparent areas exist; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawButton.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawButton.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawButton.Render(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawButton.CheckPaletteState(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Check that the palette and state are correct.
            </summary>
            <param name="context">Reference to the view context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawContent">
            <summary>
            View element that can draw a content
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawContent.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteContent,ComponentFactory.Krypton.Toolkit.IContentValues,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewDrawContent class.
            </summary>
            <param name="paletteContent">Palette source for the content.</param>
            <param name="values">Reference to actual content values.</param>
            <param name="orientation">Visual orientation of the content.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawContent.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawContent.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawContent.DrawContentOnComposition">
            <summary>
            Gets and sets the composition value.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawContent.TestForFocusCues">
            <summary>
            Gets and sets the use of focus cues for deciding if focus rects are allowed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawContent.Values">
            <summary>
            Gets and sets the source for values.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawContent.Orientation">
            <summary>
            Gets and sets the visual orientation.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawContent.UseMnemonic">
            <summary>
            Gets and sets the use of mnemonics.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawContent.SetPalette(ComponentFactory.Krypton.Toolkit.IPaletteContent)">
            <summary>
            Update the source palette for drawing.
            </summary>
            <param name="paletteContent">Palette source for the content.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawContent.GetPalette">
            <summary>
            Gets the source palette used for drawing.
            </summary>
            <returns>Palette source for the content.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawContent.IsImageDisplayed(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Get a value indicating if the content image is being displayed.
            </summary>
            <param name="context">ViewLayoutContext context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawContent.ImageRectangle(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Get a value indicating if the content image is being displayed.
            </summary>
            <param name="context">ViewLayoutContext context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawContent.ShortTextRect(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Gets the short text drawing rectangle.
            </summary>
            <returns>Rectangle of short text drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawContent.LongTextRect(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Gets the short text drawing rectangle.
            </summary>
            <returns>Rectangle of short text drawing.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawContent.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawContent.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawContent.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas">
            <summary>
            View element that applies padding to the drawing of a border and background.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewDrawCanvas class.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
            <param name="orientation">Visual orientation of the content.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewDrawCanvas class.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="metricPadding">Matric used to get padding values.</param>
            <param name="orientation">Visual orientation of the content.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.PaletteBack">
            <summary>
            Gets access to the currently used background palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.PaletteBorder">
            <summary>
            Gets access to the currently used border palette.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.PaletteMetric">
            <summary>
            Gets access to the currently used metric palette.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.SetPalettes(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Update the source palettes for drawing.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.SetPalettes(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Update the source palettes for drawing.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
            <param name="paletteMetric">Palette source for the metric.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.Orientation">
            <summary>
            Gets and sets the visual orientation.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.DrawTabBorder">
            <summary>
            Gets and sets if the border should be drawn as a tab border.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.TabBorderStyle">
            <summary>
            Gets and sets the tab border style to use.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.IncludeBorderEdge">
            <summary>
            Determines which border for the orientation is always drawn regardless of max border edges.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.ApplyIncludeBorderEdge">
            <summary>
            Determines if the border for the orientation is always drawn regardless of max border edges.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.MaxBorderEdges">
            <summary>
            Gets and sets the maximum edges allowed.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.ForceGraphicsHint">
            <summary>
            Gets and sets the forced value for the graphics hint.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.DrawBorderLast">
            <summary>
            Gets the drawing of the border before or after children.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.DrawCanvas">
            <summary>
            Gets and sets if the canvas should 
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.DrawCanvasOnComposition">
            <summary>
            Gets and sets a value indicating if the canvas is drawing on composition.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.GetOuterBorderPath(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Gets a path that describes the outside of the border.
            </summary>
            <param name="context">Context used by the renderer.</param>
            <returns>Path instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Evaluate the need for drawing transparent areas.
            </summary>
            <param name="context">Evaluation context.</param>
            <returns>True if transparent areas exist; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.RenderAfter(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering after child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawCanvas.RenderBorder(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Draw the canvas border.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.VisualControl">
            <summary>
            Extend the visual control base class with the ISupportInitializeNotification interface.
            </summary>
        </member>
        <member name="E:ComponentFactory.Krypton.Toolkit.VisualControl.Initialized">
            <summary>
            Occurs when the control is initialized.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControl.#ctor">
            <summary>
            Initialize a new instance of the VisualControl class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControl.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControl.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControl.IsInitialized">
            <summary>
            Gets a value indicating if the control is initialized.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.VisualControl.IsInitializing">
            <summary>
            Gets a value indicating if the control is initialized.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.VisualControl.OnInitialized(System.EventArgs)">
            <summary>
            Raises the Initialized event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewLeaf">
            <summary>
            Extends the base class by implementing an end node view.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.#ctor">
            <summary>
            Initialize a new instance of the ViewLeaf class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Evaluate the need for drawing transparent areas.
            </summary>
            <param name="context">Evaluation context.</param>
            <returns>True if transparent areas exist; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.Render(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.Add(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Append a view to the collection.
            </summary>
            <param name="item">ViewBase reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.Clear">
            <summary>
            Remove all views from the collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.Contains(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Determines whether the collection contains the view.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>True if view found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.ContainsRecurse(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Determines whether any part of the view hierarchy is the specified view.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>True if view found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.CopyTo(ComponentFactory.Krypton.Toolkit.ViewBase[],System.Int32)">
            <summary>
            Copies views to specified array starting at particular index.
            </summary>
            <param name="array">Target array.</param>
            <param name="arrayIndex">Starting array index.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.Remove(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Removes first occurance of specified view.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>True if removed; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLeaf.Count">
            <summary>
            Gets the number of views in collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.IndexOf(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Determines the index of the specified view in the collection.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>-1 if not found; otherwise index position.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.Insert(System.Int32,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Inserts a view to the collection at the specified index.
            </summary>
            <param name="index">Insert index.</param>
            <param name="item">ViewBase reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.RemoveAt(System.Int32)">
            <summary>
            Removes the view at the specified index.
            </summary>
            <param name="index">Remove index.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewLeaf.Item(System.Int32)">
            <summary>
            Gets or sets the view at the specified index.
            </summary>
            <param name="index">ViewBase index.</param>
            <returns>ViewBase at specified index.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.GetEnumerator">
            <summary>
            Shallow enumerate forward over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.Recurse">
            <summary>
            Deep enumerate forward over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.Reverse">
            <summary>
            Shallow enumerate backwards over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.ReverseRecurse">
            <summary>
            Deep enumerate backwards over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewLeaf.ViewFromPoint(System.Drawing.Point)">
            <summary>
            Find the view that contains the specified point.
            </summary>
            <param name="pt">Point in view coordinates.</param>
            <returns>ViewBase if a match is found; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewBase">
            <summary>
            Base class from which all view types derive.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.#ctor">
            <summary>
            Initialize a new instance of the ViewBase class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.Finalize">
            <summary>
            Release resources.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.Dispose">
            <summary>
            Release managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.IsDisposed">
            <summary>
            Gets a value indicating if the view has been disposed.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.OwningControl">
            <summary>
            Gets and sets a reference to the control instance that contains this view element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.Enabled">
            <summary>
            Gets and sets the enabled state of the element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.Visible">
            <summary>
            Gets and sets the enabled state of the element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.ClientRectangle">
            <summary>
            Gets and sets the rectangle bounding the client area.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.ClientLocation">
            <summary>
            Gets and sets the location of the view inside the parent view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.ClientSize">
            <summary>
            Gets and sets the size of the view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.ClientWidth">
            <summary>
            Gets and sets the width of the view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.ClientHeight">
            <summary>
            Gets and sets the height of the view.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.Component">
            <summary>
            Gets the component associated with the element.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Evaluate the need for drawing transparent areas.
            </summary>
            <param name="context">Evaluation context.</param>
            <returns>True if transparent areas exist; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.Render(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.RenderBefore(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.RenderAfter(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering after child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.Parent">
            <summary>
            Gets the parent view.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.Add(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Append a view to the collection.
            </summary>
            <param name="item">ViewBase reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.Clear">
            <summary>
            Remove all views from the collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.Contains(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Determines whether the collection contains the view.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>True if view found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.ContainsRecurse(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Determines whether any part of the view hierarchy is the specified view.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>True if view found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.CopyTo(ComponentFactory.Krypton.Toolkit.ViewBase[],System.Int32)">
            <summary>
            Copies views to specified array starting at particular index.
            </summary>
            <param name="array">Target array.</param>
            <param name="arrayIndex">Starting array index.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.Remove(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Removes first occurance of specified view.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>True if removed; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.Count">
            <summary>
            Gets the number of views in collection.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.IndexOf(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Determines the index of the specified view in the collection.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>-1 if not found; otherwise index position.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.Insert(System.Int32,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Inserts a view to the collection at the specified index.
            </summary>
            <param name="index">Insert index.</param>
            <param name="item">ViewBase reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.RemoveAt(System.Int32)">
            <summary>
            Removes the view at the specified index.
            </summary>
            <param name="index">Remove index.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.Item(System.Int32)">
            <summary>
            Gets or sets the view at the specified index.
            </summary>
            <param name="index">ViewBase index.</param>
            <returns>ViewBase at specified index.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.GetEnumerator">
            <summary>
            Shallow enumerate forward over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.Recurse">
            <summary>
            Deep enumerate forward over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.Reverse">
            <summary>
            Shallow enumerate backwards over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.ReverseRecurse">
            <summary>
            Deep enumerate backwards over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Enumerate using non-generic interface.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.MouseController">
            <summary>
            Gets and sets the associated mouse controller.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.KeyController">
            <summary>
            Gets and sets the associated key controller.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.SourceController">
            <summary>
            Gets and sets the associated source controller.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.FindMouseController">
            <summary>
            Mouse has entered the view.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.MouseEnter">
            <summary>
            Mouse has entered the view.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.MouseMove(System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.MouseDown(System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.MouseUp(System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.MouseLeave(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button has been double clicked.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.KeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.KeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.KeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.ElementState">
            <summary>
            Gets and sets the visual state of the element.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.State">
            <summary>
            Gets the visual state taking into account the owning controls state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.FixedState">
            <summary>
            Set a fixed state to override usual behavior and appearance
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.ClearFixedState">
            <summary>
            Clear down the use of the fixed state
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.IsFixed">
            <summary>
            Gets a value indicating if view is using a fixed state.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.DependantEnabledState">
            <summary>
            Get and set the view the enabled state of this view element is dependant on.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewBase.IsEnableDependant">
            <summary>
            Gets a value indicating if view enabled state is depedant on another view.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewBase.ViewFromPoint(System.Drawing.Point)">
            <summary>
            Find the view that contains the specified point.
            </summary>
            <param name="pt">Point in view coordinates.</param>
            <returns>ViewBase if a match is found; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewComposite">
            <summary>
            Extends the base class by managing a collection of child views.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.#ctor">
            <summary>
            Initialize a new instance of the ViewComposite class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewComposite.ReverseRenderOrder">
            <summary>
            Gets and sets the use of reverse order when rendering.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Evaluate the need for drawing transparent areas.
            </summary>
            <param name="context">Evaluation context.</param>
            <returns>True if transparent areas exist; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.Render(ComponentFactory.Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.Add(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Append a view to the collection.
            </summary>
            <param name="item">ViewBase reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.Clear">
            <summary>
            Remove all views from the collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.Contains(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Determines whether the collection contains the view.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>True if view found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.ContainsRecurse(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Determines whether any part of the view hierarchy is the specified view.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>True if view found; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.CopyTo(ComponentFactory.Krypton.Toolkit.ViewBase[],System.Int32)">
            <summary>
            Copies views to specified array starting at particular index.
            </summary>
            <param name="array">Target array.</param>
            <param name="arrayIndex">Starting array index.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.Remove(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Removes first occurance of specified view.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>True if removed; otherwise false.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewComposite.Count">
            <summary>
            Gets the number of views in collection.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.IndexOf(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Determines the index of the specified view in the collection.
            </summary>
            <param name="item">ViewBase reference.</param>
            <returns>-1 if not found; otherwise index position.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.Insert(System.Int32,ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Inserts a view to the collection at the specified index.
            </summary>
            <param name="index">Insert index.</param>
            <param name="item">ViewBase reference.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.RemoveAt(System.Int32)">
            <summary>
            Removes the view at the specified index.
            </summary>
            <param name="index">Remove index.</param>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewComposite.Item(System.Int32)">
            <summary>
            Gets or sets the view at the specified index.
            </summary>
            <param name="index">ViewBase index.</param>
            <returns>ViewBase at specified index.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.GetEnumerator">
            <summary>
            Shallow enumerate forward over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.Recurse">
            <summary>
            Deep enumerate forward over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.Reverse">
            <summary>
            Shallow enumerate backwards over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.ReverseRecurse">
            <summary>
            Deep enumerate backwards over children of the element.
            </summary>
            <returns>Enumerator instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewComposite.FixedState">
            <summary>
            Set a fixed state to override usual behavior and appearance
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.ClearFixedState">
            <summary>
            Clear down the use of the fixed state
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewComposite.ViewFromPoint(System.Drawing.Point)">
            <summary>
            Find the view that contains the specified point.
            </summary>
            <param name="pt">Point in view coordinates.</param>
            <returns>ViewBase if a match is found; otherwise false.</returns>
        </member>
        <member name="T:ComponentFactory.Krypton.Toolkit.ViewDrawDocker">
            <summary>
            Extends the ViewDrawCanvas by applying a docking style for each child.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.#ctor">
            <summary>
            Initialize a new instance of the ViewDrawDocker class.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder)">
            <summary>
            Initialize a new instance of the ViewDrawDocker class.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Initialize a new instance of the ViewDrawDocker class.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
            <param name="paletteMetric">Palette source for metrics.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Initialize a new instance of the ViewDrawDocker class.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
            <param name="paletteMetric">Palette source for metrics.</param>
            <param name="metricOverlay">Metric to use for border overlay.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.#ctor(ComponentFactory.Krypton.Toolkit.IPaletteBack,ComponentFactory.Krypton.Toolkit.IPaletteBorder,ComponentFactory.Krypton.Toolkit.IPaletteMetric,ComponentFactory.Krypton.Toolkit.PaletteMetricBool,ComponentFactory.Krypton.Toolkit.PaletteMetricPadding,ComponentFactory.Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewDrawDocker class.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>		
            <param name="paletteBorder">Palette source for the border.</param>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="metricOverlay">Metric to use for border overlay.</param>
            <param name="metricPadding">Matric used to get padding values.</param>
            <param name="orientation">Visual orientation of the content.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.IgnoreBorderSpace">
            <summary>
            Gets and sets a value indicating if border space should be ignored in working out preferred size.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.IgnoreAllBorderAndPadding">
            <summary>
            Gets and sets a value indicating if border space should be ignored in working out preferred size.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.RemoveChildBorders">
            <summary>
            Gets and sets a value indicating if borders for dockeding edged children should be removed to prevent double borders.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.ForceBorderFirst">
            <summary>
            Gets and sets a value indicating if the border should be forced to draw first.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.PreferredSizeAll">
            <summary>
            Gets and sets a value indicating if calculating the preferred size should include visible and invisible children.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.DrawBorderLast">
            <summary>
            Gets the drawing of the border before or after children.
            </summary>
        </member>
        <member name="P:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.FillRectangle">
            <summary>
            Gets the fill rectangle left after positioning all children.
            </summary>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.GetDock(ComponentFactory.Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the dock setting for the provided child instance.
            </summary>
            <param name="child">Child view element.</param>
            <returns>Docking setting.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.SetDock(ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.ViewDockStyle)">
            <summary>
            Sets the dock setting for the provided child instance.
            </summary>
            <param name="child">Child view element.</param>
            <param name="dock">DockStyle setting.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.Add(ComponentFactory.Krypton.Toolkit.ViewBase,ComponentFactory.Krypton.Toolkit.ViewDockStyle)">
            <summary>
            Append a view to the collection.
            </summary>
            <param name="item">ViewBase reference.</param>
            <param name="dock">DockStyle setting.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.EvalTransparentPaint(ComponentFactory.Krypton.Toolkit.ViewContext)">
            <summary>
            Evaluate the need for drawing transparent areas.
            </summary>
            <param name="context">Evaluation context.</param>
            <returns>True if transparent areas exist; otherwise false.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.GetNonChildSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Gets the size required for all except the contents.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.GetPreferredSize(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.Layout(ComponentFactory.Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.CalculateDock(ComponentFactory.Krypton.Toolkit.ViewDockStyle,System.Windows.Forms.Control)">
            <summary>
            Find the actual docking to apply for the specified RightToLeft setting.
            </summary>
            <param name="ds">Docking style.</param>
            <param name="control">Control for which the setting is needed.</param>
            <returns>Calculated docking to actual use.</returns>
        </member>
        <member name="M:ComponentFactory.Krypton.Toolkit.ViewDrawDocker.OrientateDock(ComponentFactory.Krypton.Toolkit.ViewDockStyle)">
            <summary>
            Update the incoming dock style to reflect our orientation.
            </summary>
            <param name="style">Incoming dock style.</param>
            <returns>Orientation adjusted dock style.</returns>
        </member>
    </members>
</doc>
